<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="BID_PROCESS" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.2.3.14. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">E:\JMeterProject\apache-jmeter-5.2.1\bin\EPSv2\jars\DataDrivenTool.jar</stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">ofbuat.mjunction.in</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="VAR_TENDER_ID" elementType="Argument">
            <stringProp name="Argument.name">VAR_TENDER_ID</stringProp>
            <stringProp name="Argument.value">11557</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="GROUP_ID" elementType="Argument">
            <stringProp name="Argument.name">GROUP_ID</stringProp>
            <stringProp name="Argument.value">2564</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/login/provideTokenObject" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/login/provideTokenObject</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AUTH_1</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;jwt&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/login/provideCaptcha.action?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjowLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiU1lTVEVNIiwidmVuZG9ySWQiOjAsImV4cCI6MTU4NjM2NjEzOSwidXNlclJvbGVMaXN0IjpudWxsLCJiaWRkZXJDb21wYW55TmFtZSI6bnVsbCwiaWF0IjoxNTg2MzY1MjM5LCJ1c2VyQ29kZSI6bnVsbCwianRpIjoiMjA4MzQ4MjY1In0.FLee6balLIBCgdFw6yiuYFGwWfYEYbgizFmuAX4zseI&amp;date=Wed%20Apr%2008%202020%2022:30:39%20GMT+0530%20(India%20Standard%20Time)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="date" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">date</stringProp>
                  <stringProp name="Argument.value">Wed Apr 08 2020 22:30:39 GMT 0530 (India Standard Time)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/login/provideCaptcha.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_1}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/login/login" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rememberme&quot;:false,&quot;captcha&quot;:&quot;n1zUT&quot;,&quot;userCode&quot;:&quot;PT_BIDDER_001&quot;,&quot;password&quot;:&quot;$2a$12$PT1BIDDER100112345678u0TTODtA4IaXIM5zey8mxlTooQuo7Kue&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/login/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_1}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AUTH_2</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_2}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/login/loginDashboard.action *" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="loginSignUserId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loginSignUserId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="destField" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">destField</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="getInfo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">getInfo</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pkiEnabledFlag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pkiEnabledFlag</stringProp>
                  <stringProp name="Argument.value">N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="callBackMethodName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">callBackMethodName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">methodName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="orgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgId</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="loginSignHash" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loginSignHash</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="serverDateValue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">serverDateValue</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dscCertString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dscCertString</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="paramString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">paramString</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="macAddress" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">macAddress</stringProp>
                  <stringProp name="Argument.value">,</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="serverDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">serverDate</stringProp>
                  <stringProp name="Argument.value">08/04/2020 22:30 +0530</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isShowDialog" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isShowDialog</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dscPublicKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dscPublicKey</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="textForSign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">textForSign</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cancelCallBackMethodName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cancelCallBackMethodName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hrserverDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hrserverDate</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="loginDetailsUpdateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loginDetailsUpdateId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/login/loginDashboard.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbuat.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AUTH_3</stringProp>
              <stringProp name="RegexExtractor.regex">value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">2</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">LOGIN_USER_ID</stringProp>
              <stringProp name="RegexExtractor.regex">id=&quot;loginUserId&quot; value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">VAR_ORGANIZATION_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;organizationId&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2MzY2MTQ1LCJpYXQiOjE1ODYzNjUyNDUsImp0aSI6IjQ0MjgifQ.7YTg3eD7CCRBRfG7tjCPo2PmMIrJhHCWIDSQWmsLJnw" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/showRfqCategoryRfqTypeProcCatBidPartList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/showRfqCategoryRfqTypeProcCatBidPartList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/showTenderListForBidder?tabId=live_tender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tabId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tabId</stringProp>
                  <stringProp name="Argument.value">live_tender</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/showTenderListForBidder</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">VAR_ORGTENDER_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;orgtenderid&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/organization/loadOrgLevelInfoMap" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/organization/loadOrgLevelInfoMap</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/general/getHelpdeskTopicList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getHelpdeskTopicList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="action" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/processBidderInitiationStatus?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/processBidderInitiationStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/vendor/checkVendorStatus?bidderId=3827" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="bidderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bidderId</stringProp>
                  <stringProp name="Argument.value">${VAR_ORGANIZATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/vendor/checkVendorStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/checkCancelledTender?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/checkCancelledTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/checkWithdrawBidList?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/checkWithdrawBidList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/checkEligiblityForBid?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/checkEligiblityForBid</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/checkIsBidDueDateExpire?tenderId=11536&amp;quotationId=0&amp;negotiationFlag=null" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="negotiationFlag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">negotiationFlag</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/checkIsBidDueDateExpire</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/tenderResponseVendor/openAgreement.action *" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pkiEnabledFlag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pkiEnabledFlag</stringProp>
                  <stringProp name="Argument.value">N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_ORGTENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/tenderResponseVendor/openAgreement.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbuat.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AUTH_4</stringProp>
              <stringProp name="RegexExtractor.regex">value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">2</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2MzY2MTU4LCJpYXQiOjE1ODYzNjUyNTgsImp0aSI6IjQ0MjgifQ.-ZzE3HOlzF4Z-VtsfvEkK5tyhyFdUuwIRpzsYydV_Yg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_4}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tenderResponseVendor/viewTenderDisclaimer" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tenderResponseVendor/viewTenderDisclaimer</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/general/getHelpdeskTopicList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getHelpdeskTopicList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="accept" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tenderResponseVendor/insertTenderResponse" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;interestFlag&quot;:&quot;Y&quot;,&quot;tenderId&quot;:&quot;${VAR_TENDER_ID}&quot;,&quot;signHash&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tenderResponseVendor/insertTenderResponse</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">VAR_RESPONSE_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;responseId&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/tenderResponseVendor/showQuotationInsertScreen.action *" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_4}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="responseId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">responseId</stringProp>
                  <stringProp name="Argument.value">${VAR_RESPONSE_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/tenderResponseVendor/showQuotationInsertScreen.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbuat.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AUTH_5</stringProp>
              <stringProp name="RegexExtractor.regex">value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">2</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2MzY2MTc0LCJpYXQiOjE1ODYzNjUyNzQsImp0aSI6IjQ0MjgifQ.-JmXzyLdF6rtffn87382ogZnD3su1ptMFbO4uGcPCBw" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_5}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/ebriefcase/getEBriefcasePerUser?catId=0&amp;status=A" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="catId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">catId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/ebriefcase/getEBriefcasePerUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/ebriefcase/getEBriefcaseCategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/ebriefcase/getEBriefcaseCategory</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/getTenderInfoByTenderId?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderInfoByTenderId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/bidactivity/showBidPartListingByTenderId/11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/bidactivity/showBidPartListingByTenderId/11536</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/showDateFileCurrencyMasterList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/showDateFileCurrencyMasterList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/getFieldNameAndValueMapByTenderId?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/getFieldNameAndValueMapByTenderId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/showTemplateFieldNameAndFormulaMapByTenderId?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/showTemplateFieldNameAndFormulaMapByTenderId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/getQuotationFieldValidationListByTenderId?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/getQuotationFieldValidationListByTenderId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getUomList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getUomList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/revisedandimpactbid/getRevImpBidDetailsForRevAndImp?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/revisedandimpactbid/getRevImpBidDetailsForRevAndImp</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/general/getHelpdeskTopicList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getHelpdeskTopicList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/showDateFileCurrencyMasterList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/showDateFileCurrencyMasterList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/showDraftQuotationInsertScreenWithDataByTenderId?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/showDraftQuotationInsertScreenWithDataByTenderId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">VAR_TEMPLATE_GROUP_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;templategroupId&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="save_qrc" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/insertDraftQuotation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;quotationId&quot;:0,&quot;quotationRefNo&quot;:&quot;code001&quot;,&quot;tenderId&quot;:${VAR_TENDER_ID},&quot;currencyId&quot;:&quot;BSD&quot;,&quot;statusId&quot;:0,&quot;userDigitalcertId&quot;:0,&quot;createId&quot;:null,&quot;createDate&quot;:null,&quot;updateId&quot;:null,&quot;updateDate&quot;:null,&quot;isActive&quot;:null,&quot;bidduedate&quot;:1586381281597,&quot;bidpartno&quot;:1,&quot;tenderDescription&quot;:&quot;NEW TENDER&quot;,&quot;negotiatioFlag&quot;:null,&quot;negotiationId&quot;:null,&quot;isCorrigendum&quot;:&quot;No&quot;,&quot;signHash&quot;:null,&quot;tenderResponseId&quot;:${VAR_RESPONSE_ID},&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;templates&quot;:[{&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;displayLayoutid&quot;:101,&quot;templateTypeId&quot;:101,&quot;templateCatId&quot;:1553,&quot;groupId&quot;:${GROUP_ID},&quot;templateId&quot;:1,&quot;shortName&quot;:&quot;quot_gen_info&quot;,&quot;longName&quot;:&quot;Quotation_General_Info&quot;,&quot;description&quot;:&quot;Quotation General Information&quot;,&quot;orgId&quot;:606,&quot;deptId&quot;:606,&quot;status&quot;:&quot;A&quot;,&quot;visibility&quot;:&quot;A&quot;,&quot;levelMapId&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;masterProcessId&quot;:2,&quot;subProcessId&quot;:18624,&quot;associatedBidPart&quot;:1,&quot;isFixedTemplate&quot;:&quot;Y&quot;,&quot;displaySequenceNo&quot;:1,&quot;mappedTemplateId&quot;:null,&quot;mappedTemplateShortName&quot;:&quot;&quot;,&quot;quotationDependencyFlag&quot;:&quot;N&quot;,&quot;subProcessName&quot;:&quot;General Information&quot;,&quot;mappedDepartmentId&quot;:null,&quot;templateFieldList&quot;:[{&quot;fieldtemplategroupId&quot;:251746,&quot;dataTypeId&quot;:100,&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:107,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;orgtenderid&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;orgtenderid&quot;,&quot;longName&quot;:&quot;Tender ID&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:1,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;${VAR_ORGTENDER_ID}&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false,&quot;checkBoxRoles&quot;:[],&quot;listValuesData&quot;:&quot;&quot;},{&quot;fieldtemplategroupId&quot;:251745,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:107,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;tender_desc&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;tender_desc&quot;,&quot;longName&quot;:&quot;Tender Description&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:2,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;NEW TENDER&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false,&quot;checkBoxRoles&quot;:[],&quot;listValuesData&quot;:&quot;&quot;},{&quot;fieldtemplategroupId&quot;:251744,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;pac_amt&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;pac_amt&quot;,&quot;longName&quot;:&quot;Probable Amount of the Contract&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:3,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;N&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:&quot;10000&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251743,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:106,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;tender_cat&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;tender_cat&quot;,&quot;longName&quot;:&quot;Tender Category&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;ITEM RATE LUMPSUM&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:4,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;ITEM RATE LUMPSUM&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251741,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;quote_ref_no&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;quote_ref_no&quot;,&quot;longName&quot;:&quot;Quotation Reference Code&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:5,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;code001&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251742,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:105,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;quote_currency&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;quote_currency&quot;,&quot;longName&quot;:&quot;Quotation Currency&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;BSD&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:6,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;BSD&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251740,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:105,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;excel_bidding&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;excel_bidding&quot;,&quot;longName&quot;:&quot;Excel Bidding&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:7,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;N&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false}],&quot;subProcess&quot;:{&quot;subprocessid&quot;:18624,&quot;masterprocessid&quot;:2,&quot;code&quot;:&quot;Q_General_Information&quot;,&quot;description&quot;:&quot;General Information&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586192900000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586192900000,&quot;isActive&quot;:1,&quot;sequence&quot;:2,&quot;organizationId&quot;:606,&quot;rowNo&quot;:0},&quot;identifystring&quot;:null,&quot;indexSerialNo&quot;:null,&quot;excelRowNumber&quot;:null,&quot;sorItemFlag&quot;:null,&quot;tabWiseApproverComment&quot;:null,&quot;bidableflag&quot;:null,&quot;mandatory_flag&quot;:null,&quot;mandatoryItem&quot;:null,&quot;prePopulatedRfqData&quot;:0,&quot;corrAttachmentFlag&quot;:null,&quot;bidSectionwiseApproverComment&quot;:null,&quot;bidSectionwiseInitiotorComment&quot;:null,&quot;itemParentCode&quot;:null,&quot;itemCode&quot;:null,&quot;templates&quot;:null,&quot;tenderTemplateGroupId&quot;:0,&quot;relTablePrimaryKeyId&quot;:0,&quot;tablePrimaryKeyId&quot;:0,&quot;isValidated&quot;:&quot;E&quot;,&quot;modifiedFlag&quot;:false,&quot;itemActionFlag&quot;:null,&quot;bidderWiseActivityDoneStatus&quot;:null,&quot;excelUploadFlag&quot;:false,&quot;paymenttypeId&quot;:null,&quot;liveNodeItemFlag&quot;:&quot;Y&quot;,&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;isOriginal&quot;:null,&quot;isAssigned&quot;:null,&quot;sourceItemId&quot;:null,&quot;mainItemQty&quot;:null,&quot;dueDate&quot;:null,&quot;descriptionTC&quot;:null,&quot;isPaymentTerm&quot;:null,&quot;isSpecialFileDownload&quot;:null,&quot;itemQty&quot;:null,&quot;isvalidExcel&quot;:false,&quot;indentAttachmentFlag&quot;:null,&quot;isQualifiedQuotationItem&quot;:null,&quot;usedInCatalog&quot;:null,&quot;oldItemCode&quot;:null,&quot;fileSignHash&quot;:null,&quot;isDownloadPossible&quot;:null,&quot;filevisibleType&quot;:null,&quot;aceptedOn&quot;:null,&quot;qualDecTakenInLabelId&quot;:null,&quot;mainEstimatedPrice&quot;:null,&quot;isVisibleForMerge&quot;:true,&quot;currentSanctionObjectPrimaryKey&quot;:0,&quot;validationMessage&quot;:null,&quot;orderedQty&quot;:null,&quot;poConsumedqty&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;signBy&quot;:null,&quot;signDate&quot;:null,&quot;exemptionValue&quot;:null,&quot;quotationItemDecryptList&quot;:null,&quot;quotationDetailDecryptList&quot;:null,&quot;quotationFeesMasterDecryptList&quot;:null,&quot;quotAttachListMap&quot;:null,&quot;amendedQty&quot;:null,&quot;hashString&quot;:null,&quot;eoiquotAttachListMap&quot;:null,&quot;eoiquotationDetailDecryptList&quot;:null,&quot;showMinusIcon&quot;:true,&quot;isOpen&quot;:true}],&quot;quotationDetailList&quot;:null,&quot;quotationFeesList&quot;:null,&quot;quotationFeesMasterList&quot;:null,&quot;tendercat&quot;:104,&quot;pacAmt&quot;:10000,&quot;quotAttachListMap&quot;:{},&quot;quotationItemList&quot;:null,&quot;tender&quot;:null,&quot;groupid&quot;:null,&quot;templategroupid&quot;:null,&quot;orgtenderid&quot;:${VAR_ORGTENDER_ID},&quot;tenderCategory&quot;:&quot;ITEM RATE LUMPSUM&quot;,&quot;vendorId&quot;:null,&quot;negotiationStartdate&quot;:null,&quot;negotiationEnddate&quot;:null,&quot;draftQuotationCreatedDate&quot;:null,&quot;tenderListDto&quot;:null,&quot;bidSubmissionDate&quot;:null,&quot;quotationDetailTemplateIdList&quot;:[],&quot;quotationItemTemplateIdList&quot;:[],&quot;proxyBidFlag&quot;:null,&quot;vendorUserId&quot;:null,&quot;lastSavedOnByBidder&quot;:null,&quot;tenderCurrency&quot;:null,&quot;reloadFlagForCorrig&quot;:false,&quot;draftQuotationFeesList&quot;:[],&quot;isRevisedOrImpactBid&quot;:&quot;N&quot;,&quot;isRevisedOrImpactBidApplicable&quot;:&quot;N&quot;,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;hashString&quot;:null,&quot;previousTemplates&quot;:null,&quot;quotationSubmittedDate&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/insertDraftQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">VAR_QUOTATION_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;quotationId&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/getTemplateTabDetailsByBidPartNoAndBidderId?tenderId=11536&amp;bidderId=4428&amp;bidPartNo=0&amp;quotationId=14491" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">${VAR_QUOTATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bidderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bidderId</stringProp>
                  <stringProp name="Argument.value">${LOGIN_USER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bidPartNo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bidPartNo</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/getTemplateTabDetailsByBidPartNoAndBidderId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/getTenderNDADetails?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderNDADetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls?quotationId=14491&amp;templategroupid=32518" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="templategroupid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">templategroupid</stringProp>
                  <stringProp name="Argument.value">${VAR_TEMPLATE_GROUP_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">${VAR_QUOTATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getTimestamp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getTimestamp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="download_excel_bidding" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/generateQuotationExcel.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_5}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="templateIdList" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateIdList</stringProp>
                  <stringProp name="Argument.value">32526</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">${VAR_QUOTATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currencyValue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">currencyValue</stringProp>
                  <stringProp name="Argument.value">BSD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bidderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bidderId</stringProp>
                  <stringProp name="Argument.value">${VAR_ORGANIZATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/generateQuotationExcel.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbuat.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="true">
            <stringProp name="FileSaver.filename">EPSv2\Reports\QuotationExcel_${__threadNum}.xlsx</stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.successonly">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
          </ResultSaver>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="QuotationFileModifier" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Iterator;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

int threadNum = ctx.getThreadNum()+1;

String file = &quot;E:\\JMeterProject\\apache-jmeter-5.2.1\\bin\\EPSv2\\Reports\\QuotationExcel_&quot;+threadNum+&quot;.xlsx&quot;;

try{
	FileInputStream fis = new FileInputStream(file);
	XSSFWorkbook workbook = new XSSFWorkbook(fis);
	String[] headers = {&quot;Rate *&quot;, &quot;Freight per unit value&quot;, &quot;GST Percentage&quot;};
	XSSFSheet sheet = workbook.getSheet(&quot;Price Sheet5&quot;);
	
	Row ninthrow = sheet.getRow(9);
	ninthrow.getCell(8).setCellValue(5);
	ninthrow.getCell(10).setCellValue(5);
	ninthrow.getCell(12).setCellValue(5);

	FileOutputStream out = new FileOutputStream(file);
	workbook.write(out);
	out.close();
}
catch(Exception e)
{
	log.info(&quot;!!!!!!!!!&quot;+e.getMessage()+&quot;!!!!!!!!!&quot;);
}

vars.put(&quot;VAR_QUOTATIONFILE&quot;,file);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="upload_excel-bidding" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/readQuotationExcel" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="${VAR_QUOTATIONFILE}" elementType="HTTPFileArg">
                  <stringProp name="File.path">${VAR_QUOTATIONFILE}</stringProp>
                  <stringProp name="File.paramname">file</stringProp>
                  <stringProp name="File.mimetype">application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">${VAR_QUOTATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currencyValue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">currencyValue</stringProp>
                  <stringProp name="Argument.value">BSD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bidderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bidderId</stringProp>
                  <stringProp name="Argument.value">${VAR_ORGANIZATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeZone" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">timeZone</stringProp>
                  <stringProp name="Argument.value">-330</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="proxyBidFlag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">proxyBidFlag</stringProp>
                  <stringProp name="Argument.value">N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/readQuotationExcel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="submit_bid" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/getTenderNDADetails?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderNDADetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls?quotationId=14491&amp;templategroupid=32522" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="templategroupid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">templategroupid</stringProp>
                  <stringProp name="Argument.value">32522</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">${VAR_QUOTATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">VAR_TENDER_BIDDER_ATTACHID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;tenderbidderattachid&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">VAR_ATTACHMENTID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;attachmentid&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getTimestamp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getTimestamp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/getTenderNDADetails?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderNDADetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls?quotationId=14491&amp;templategroupid=32523" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="templategroupid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">templategroupid</stringProp>
                  <stringProp name="Argument.value">32523</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">${VAR_QUOTATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/getTenderNDADetails?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderNDADetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getTimestamp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getTimestamp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/getTenderNDADetails?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderNDADetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls?quotationId=14491&amp;templategroupid=32520" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="templategroupid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">templategroupid</stringProp>
                  <stringProp name="Argument.value">32520</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">${VAR_QUOTATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getTimestamp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getTimestamp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/getTenderNDADetails?tenderId=11536" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderNDADetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="templategroupid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">templategroupid</stringProp>
                  <stringProp name="Argument.value">32526</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">${VAR_QUOTATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">REL_TABLE_PRIMARY_KEY_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;relTablePrimaryKeyId&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">TABLE_PRIMARY_KEY_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;tablePrimaryKeyId&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getTimestamp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getTimestamp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/insertDraftQuotation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;quotationId&quot;:${VAR_QUOTATION_ID},&quot;quotationRefNo&quot;:&quot;code001&quot;,&quot;tenderId&quot;:${VAR_TENDER_ID},&quot;currencyId&quot;:&quot;BSD&quot;,&quot;statusId&quot;:0,&quot;userDigitalcertId&quot;:0,&quot;createId&quot;:${LOGIN_USER_ID},&quot;createDate&quot;:1586365304000,&quot;updateId&quot;:${LOGIN_USER_ID},&quot;updateDate&quot;:1586365304000,&quot;isActive&quot;:1,&quot;bidduedate&quot;:1586381281597,&quot;bidpartno&quot;:1,&quot;tenderDescription&quot;:&quot;NEW TENDER&quot;,&quot;negotiatioFlag&quot;:null,&quot;negotiationId&quot;:null,&quot;isCorrigendum&quot;:&quot;No&quot;,&quot;signHash&quot;:&quot;&quot;,&quot;tenderResponseId&quot;:${VAR_RESPONSE_ID},&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;templates&quot;:[{&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;displayLayoutid&quot;:101,&quot;templateTypeId&quot;:101,&quot;templateCatId&quot;:1553,&quot;groupId&quot;:${GROUP_ID},&quot;templateId&quot;:1,&quot;shortName&quot;:&quot;quot_gen_info&quot;,&quot;longName&quot;:&quot;Quotation_General_Info&quot;,&quot;description&quot;:&quot;Quotation General Information&quot;,&quot;orgId&quot;:606,&quot;deptId&quot;:606,&quot;status&quot;:&quot;A&quot;,&quot;visibility&quot;:&quot;A&quot;,&quot;levelMapId&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;masterProcessId&quot;:2,&quot;subProcessId&quot;:18624,&quot;associatedBidPart&quot;:1,&quot;isFixedTemplate&quot;:&quot;Y&quot;,&quot;displaySequenceNo&quot;:1,&quot;mappedTemplateId&quot;:null,&quot;mappedTemplateShortName&quot;:&quot;&quot;,&quot;quotationDependencyFlag&quot;:&quot;N&quot;,&quot;subProcessName&quot;:&quot;General Information&quot;,&quot;mappedDepartmentId&quot;:null,&quot;templateFieldList&quot;:[{&quot;fieldtemplategroupId&quot;:251746,&quot;dataTypeId&quot;:100,&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:107,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;orgtenderid&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;orgtenderid&quot;,&quot;longName&quot;:&quot;Tender ID&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:1,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;${VAR_ORGTENDER_ID}&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false,&quot;checkBoxRoles&quot;:[],&quot;listValuesData&quot;:&quot;&quot;},{&quot;fieldtemplategroupId&quot;:251745,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:107,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;tender_desc&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;tender_desc&quot;,&quot;longName&quot;:&quot;Tender Description&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:2,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;NEW TENDER&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false,&quot;checkBoxRoles&quot;:[],&quot;listValuesData&quot;:&quot;&quot;},{&quot;fieldtemplategroupId&quot;:251744,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;pac_amt&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;pac_amt&quot;,&quot;longName&quot;:&quot;Probable Amount of the Contract&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:3,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;N&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:&quot;10000&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251743,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:106,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;tender_cat&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;tender_cat&quot;,&quot;longName&quot;:&quot;Tender Category&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;ITEM RATE LUMPSUM&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:4,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;ITEM RATE LUMPSUM&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251741,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;quote_ref_no&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;quote_ref_no&quot;,&quot;longName&quot;:&quot;Quotation Reference Code&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:5,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;code001&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251742,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:105,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;quote_currency&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;quote_currency&quot;,&quot;longName&quot;:&quot;Quotation Currency&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;BSD&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:6,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;BSD&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251740,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:105,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;excel_bidding&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;excel_bidding&quot;,&quot;longName&quot;:&quot;Excel Bidding&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;32520,32523,32526&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:7,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;32526&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false}],&quot;subProcess&quot;:null,&quot;identifystring&quot;:null,&quot;indexSerialNo&quot;:&quot;0&quot;,&quot;excelRowNumber&quot;:null,&quot;sorItemFlag&quot;:null,&quot;tabWiseApproverComment&quot;:null,&quot;bidableflag&quot;:null,&quot;mandatory_flag&quot;:null,&quot;mandatoryItem&quot;:null,&quot;prePopulatedRfqData&quot;:0,&quot;corrAttachmentFlag&quot;:null,&quot;bidSectionwiseApproverComment&quot;:null,&quot;bidSectionwiseInitiotorComment&quot;:null,&quot;itemParentCode&quot;:null,&quot;itemCode&quot;:null,&quot;templates&quot;:null,&quot;tenderTemplateGroupId&quot;:0,&quot;relTablePrimaryKeyId&quot;:0,&quot;tablePrimaryKeyId&quot;:150045,&quot;isValidated&quot;:&quot;E&quot;,&quot;modifiedFlag&quot;:false,&quot;itemActionFlag&quot;:null,&quot;bidderWiseActivityDoneStatus&quot;:null,&quot;excelUploadFlag&quot;:false,&quot;paymenttypeId&quot;:null,&quot;liveNodeItemFlag&quot;:&quot;Y&quot;,&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;isOriginal&quot;:null,&quot;isAssigned&quot;:null,&quot;sourceItemId&quot;:null,&quot;mainItemQty&quot;:null,&quot;dueDate&quot;:null,&quot;descriptionTC&quot;:null,&quot;isPaymentTerm&quot;:null,&quot;isSpecialFileDownload&quot;:null,&quot;itemQty&quot;:null,&quot;isvalidExcel&quot;:false,&quot;indentAttachmentFlag&quot;:null,&quot;isQualifiedQuotationItem&quot;:null,&quot;usedInCatalog&quot;:null,&quot;oldItemCode&quot;:null,&quot;fileSignHash&quot;:null,&quot;isDownloadPossible&quot;:null,&quot;filevisibleType&quot;:null,&quot;aceptedOn&quot;:null,&quot;qualDecTakenInLabelId&quot;:null,&quot;mainEstimatedPrice&quot;:null,&quot;isVisibleForMerge&quot;:true,&quot;currentSanctionObjectPrimaryKey&quot;:0,&quot;validationMessage&quot;:null,&quot;orderedQty&quot;:null,&quot;poConsumedqty&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;signBy&quot;:null,&quot;signDate&quot;:null,&quot;exemptionValue&quot;:null,&quot;quotationItemDecryptList&quot;:null,&quot;quotationDetailDecryptList&quot;:null,&quot;quotationFeesMasterDecryptList&quot;:null,&quot;quotAttachListMap&quot;:null,&quot;amendedQty&quot;:null,&quot;hashString&quot;:null,&quot;eoiquotationDetailDecryptList&quot;:null,&quot;eoiquotAttachListMap&quot;:null,&quot;showMinusIcon&quot;:true,&quot;isOpen&quot;:true}],&quot;quotationDetailList&quot;:null,&quot;quotationFeesList&quot;:null,&quot;quotationFeesMasterList&quot;:null,&quot;tendercat&quot;:0,&quot;pacAmt&quot;:null,&quot;quotAttachListMap&quot;:{},&quot;quotationItemList&quot;:null,&quot;tender&quot;:null,&quot;groupid&quot;:null,&quot;templategroupid&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;orgtenderid&quot;:0,&quot;tenderCategory&quot;:null,&quot;vendorId&quot;:${VAR_ORGANIZATION_ID},&quot;negotiationStartdate&quot;:null,&quot;negotiationEnddate&quot;:null,&quot;draftQuotationCreatedDate&quot;:null,&quot;tenderListDto&quot;:null,&quot;bidSubmissionDate&quot;:null,&quot;quotationDetailTemplateIdList&quot;:[],&quot;quotationItemTemplateIdList&quot;:[],&quot;proxyBidFlag&quot;:null,&quot;vendorUserId&quot;:${LOGIN_USER_ID},&quot;lastSavedOnByBidder&quot;:1586365304000,&quot;tenderCurrency&quot;:null,&quot;reloadFlagForCorrig&quot;:false,&quot;draftQuotationFeesList&quot;:[],&quot;isRevisedOrImpactBid&quot;:&quot;N&quot;,&quot;isRevisedOrImpactBidApplicable&quot;:&quot;N&quot;,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;hashString&quot;:null,&quot;previousTemplates&quot;:null,&quot;quotationSubmittedDate&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/insertDraftQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/insertDraftQuotation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;quotationId&quot;:${VAR_QUOTATION_ID},&quot;quotationRefNo&quot;:&quot;code001&quot;,&quot;tenderId&quot;:${VAR_TENDER_ID},&quot;currencyId&quot;:&quot;BSD&quot;,&quot;statusId&quot;:0,&quot;userDigitalcertId&quot;:0,&quot;createId&quot;:${LOGIN_USER_ID},&quot;createDate&quot;:1586365304000,&quot;updateId&quot;:${LOGIN_USER_ID},&quot;updateDate&quot;:1586365304000,&quot;isActive&quot;:1,&quot;bidduedate&quot;:1586381281597,&quot;bidpartno&quot;:1,&quot;tenderDescription&quot;:&quot;NEW TENDER&quot;,&quot;negotiatioFlag&quot;:null,&quot;negotiationId&quot;:null,&quot;isCorrigendum&quot;:&quot;No&quot;,&quot;signHash&quot;:&quot;&quot;,&quot;tenderResponseId&quot;:${VAR_RESPONSE_ID},&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;templates&quot;:[{&quot;templategroupId&quot;:32523,&quot;displayLayoutid&quot;:101,&quot;templateTypeId&quot;:101,&quot;templateCatId&quot;:1553,&quot;groupId&quot;:${GROUP_ID},&quot;templateId&quot;:6,&quot;shortName&quot;:&quot;tril_quotation_headerrg&quot;,&quot;longName&quot;:&quot;TRIL_QUOTATION_HEADER RG&quot;,&quot;description&quot;:&quot;tril_quotation_header_RG&quot;,&quot;orgId&quot;:606,&quot;deptId&quot;:606,&quot;status&quot;:&quot;A&quot;,&quot;visibility&quot;:&quot;A&quot;,&quot;levelMapId&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;masterProcessId&quot;:2,&quot;subProcessId&quot;:18629,&quot;associatedBidPart&quot;:1,&quot;isFixedTemplate&quot;:&quot;N&quot;,&quot;displaySequenceNo&quot;:3,&quot;mappedTemplateId&quot;:null,&quot;mappedTemplateShortName&quot;:&quot;&quot;,&quot;quotationDependencyFlag&quot;:&quot;N&quot;,&quot;subProcessName&quot;:&quot;Terms and Conditions&quot;,&quot;mappedDepartmentId&quot;:null,&quot;templateFieldList&quot;:[{&quot;fieldtemplategroupId&quot;:251765,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf1&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;UNLOADING&quot;,&quot;longName&quot;:&quot;UNLOADING&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:1,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;any&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251764,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf2&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;DISPATCH_LOCATION&quot;,&quot;longName&quot;:&quot;DISPATCH LOCATION&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:2,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;any&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251766,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf3&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;DELIVERY_TIME&quot;,&quot;longName&quot;:&quot;DELIVERY TIME&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:3,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;any&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251767,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf4&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Price_Validity&quot;,&quot;longName&quot;:&quot;PRICE VALIDITY&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:4,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;any&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251768,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf5&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Warranty_Guarantee&quot;,&quot;longName&quot;:&quot;WARRANTY/ GUARANTEE&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:500,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:5,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;any&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251769,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf6&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;paymenttermsrfq&quot;,&quot;longName&quot;:&quot;PAYMENT TERMS AS PER RFQ&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:6,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;={{term_conditions.Payment_Terms}}&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251770,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:106,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf7&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;PaymentTerms&quot;,&quot;longName&quot;:&quot;PAYMENT TERMS (ACCEPTANCE)&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:500,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;ACCEPTED AS PER RFQ,NOT ACCEPTED&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:7,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;ACCEPTED AS PER RFQ&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:[{&quot;fieldValidationId&quot;:64923,&quot;groupId&quot;:${GROUP_ID},&quot;templateGroupId&quot;:32523,&quot;fieldTemplateGroupId&quot;:251770,&quot;fieldValidationTypeId&quot;:102,&quot;fieldOperatorId&quot;:103,&quot;dependingTemplateGroupId&quot;:32523,&quot;dependingFieldTemplateGroupId&quot;:251771,&quot;fieldValidationActionId&quot;:102,&quot;serialNo&quot;:1,&quot;fieldValue&quot;:&quot;ACCEPTED AS PER RFQ&quot;,&quot;message&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldShortName&quot;:&quot;PaymentTerms&quot;,&quot;dependingFieldShortName&quot;:&quot;PAYMENT&quot;,&quot;templateShortName&quot;:&quot;tril_quotation_headerrg&quot;,&quot;dependingTemplateShortName&quot;:&quot;tril_quotation_headerrg&quot;},{&quot;fieldValidationId&quot;:64924,&quot;groupId&quot;:${GROUP_ID},&quot;templateGroupId&quot;:32523,&quot;fieldTemplateGroupId&quot;:251770,&quot;fieldValidationTypeId&quot;:102,&quot;fieldOperatorId&quot;:103,&quot;dependingTemplateGroupId&quot;:32523,&quot;dependingFieldTemplateGroupId&quot;:251771,&quot;fieldValidationActionId&quot;:101,&quot;serialNo&quot;:2,&quot;fieldValue&quot;:&quot;NOT ACCEPTED&quot;,&quot;message&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldShortName&quot;:&quot;PaymentTerms&quot;,&quot;dependingFieldShortName&quot;:&quot;PAYMENT&quot;,&quot;templateShortName&quot;:&quot;tril_quotation_headerrg&quot;,&quot;dependingTemplateShortName&quot;:&quot;tril_quotation_headerrg&quot;}],&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251771,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf8&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;PAYMENT&quot;,&quot;longName&quot;:&quot;IF PAYMENT NOT ACCEPTED&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:8,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;N&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251763,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf9&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Remark&quot;,&quot;longName&quot;:&quot;REMARKS&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:9,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;any&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false}],&quot;subProcess&quot;:null,&quot;identifystring&quot;:null,&quot;indexSerialNo&quot;:null,&quot;excelRowNumber&quot;:null,&quot;sorItemFlag&quot;:null,&quot;tabWiseApproverComment&quot;:null,&quot;bidableflag&quot;:null,&quot;mandatory_flag&quot;:null,&quot;mandatoryItem&quot;:null,&quot;prePopulatedRfqData&quot;:0,&quot;corrAttachmentFlag&quot;:null,&quot;bidSectionwiseApproverComment&quot;:null,&quot;bidSectionwiseInitiotorComment&quot;:null,&quot;itemParentCode&quot;:null,&quot;itemCode&quot;:null,&quot;templates&quot;:null,&quot;tenderTemplateGroupId&quot;:0,&quot;relTablePrimaryKeyId&quot;:0,&quot;tablePrimaryKeyId&quot;:0,&quot;isValidated&quot;:&quot;E&quot;,&quot;modifiedFlag&quot;:false,&quot;itemActionFlag&quot;:null,&quot;bidderWiseActivityDoneStatus&quot;:null,&quot;excelUploadFlag&quot;:false,&quot;paymenttypeId&quot;:null,&quot;liveNodeItemFlag&quot;:&quot;Y&quot;,&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;isOriginal&quot;:null,&quot;isAssigned&quot;:null,&quot;sourceItemId&quot;:null,&quot;mainItemQty&quot;:null,&quot;dueDate&quot;:null,&quot;descriptionTC&quot;:null,&quot;isPaymentTerm&quot;:null,&quot;isSpecialFileDownload&quot;:null,&quot;itemQty&quot;:null,&quot;isvalidExcel&quot;:false,&quot;indentAttachmentFlag&quot;:null,&quot;isQualifiedQuotationItem&quot;:null,&quot;usedInCatalog&quot;:null,&quot;oldItemCode&quot;:null,&quot;fileSignHash&quot;:null,&quot;isDownloadPossible&quot;:null,&quot;filevisibleType&quot;:null,&quot;aceptedOn&quot;:null,&quot;qualDecTakenInLabelId&quot;:null,&quot;mainEstimatedPrice&quot;:null,&quot;isVisibleForMerge&quot;:true,&quot;currentSanctionObjectPrimaryKey&quot;:0,&quot;validationMessage&quot;:null,&quot;orderedQty&quot;:null,&quot;poConsumedqty&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;signBy&quot;:null,&quot;signDate&quot;:null,&quot;exemptionValue&quot;:null,&quot;quotationItemDecryptList&quot;:null,&quot;quotationDetailDecryptList&quot;:null,&quot;quotationFeesMasterDecryptList&quot;:null,&quot;quotAttachListMap&quot;:null,&quot;amendedQty&quot;:null,&quot;hashString&quot;:null,&quot;eoiquotationDetailDecryptList&quot;:null,&quot;eoiquotAttachListMap&quot;:null,&quot;showMinusIcon&quot;:true,&quot;isOpen&quot;:true}],&quot;quotationDetailList&quot;:null,&quot;quotationFeesList&quot;:null,&quot;quotationFeesMasterList&quot;:null,&quot;tendercat&quot;:0,&quot;pacAmt&quot;:null,&quot;quotAttachListMap&quot;:{},&quot;quotationItemList&quot;:null,&quot;tender&quot;:null,&quot;groupid&quot;:null,&quot;templategroupid&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;orgtenderid&quot;:0,&quot;tenderCategory&quot;:null,&quot;vendorId&quot;:${VAR_ORGANIZATION_ID},&quot;negotiationStartdate&quot;:null,&quot;negotiationEnddate&quot;:null,&quot;draftQuotationCreatedDate&quot;:null,&quot;tenderListDto&quot;:null,&quot;bidSubmissionDate&quot;:null,&quot;quotationDetailTemplateIdList&quot;:[],&quot;quotationItemTemplateIdList&quot;:[],&quot;proxyBidFlag&quot;:null,&quot;vendorUserId&quot;:${LOGIN_USER_ID},&quot;lastSavedOnByBidder&quot;:1586365304000,&quot;tenderCurrency&quot;:null,&quot;reloadFlagForCorrig&quot;:false,&quot;draftQuotationFeesList&quot;:[],&quot;isRevisedOrImpactBid&quot;:&quot;N&quot;,&quot;isRevisedOrImpactBidApplicable&quot;:&quot;N&quot;,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;hashString&quot;:null,&quot;previousTemplates&quot;:null,&quot;quotationSubmittedDate&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/insertDraftQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/insertDraftQuotation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;quotationId&quot;:${VAR_QUOTATION_ID},&quot;quotationRefNo&quot;:&quot;code001&quot;,&quot;tenderId&quot;:${VAR_TENDER_ID},&quot;currencyId&quot;:&quot;BSD&quot;,&quot;statusId&quot;:0,&quot;userDigitalcertId&quot;:0,&quot;createId&quot;:${LOGIN_USER_ID},&quot;createDate&quot;:1586365304000,&quot;updateId&quot;:${LOGIN_USER_ID},&quot;updateDate&quot;:1586365304000,&quot;isActive&quot;:1,&quot;bidduedate&quot;:1586381281597,&quot;bidpartno&quot;:1,&quot;tenderDescription&quot;:&quot;NEW TENDER&quot;,&quot;negotiatioFlag&quot;:null,&quot;negotiationId&quot;:null,&quot;isCorrigendum&quot;:&quot;No&quot;,&quot;signHash&quot;:&quot;&quot;,&quot;tenderResponseId&quot;:${VAR_RESPONSE_ID},&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;templates&quot;:[{&quot;templategroupId&quot;:32520,&quot;displayLayoutid&quot;:102,&quot;templateTypeId&quot;:101,&quot;templateCatId&quot;:1553,&quot;groupId&quot;:${GROUP_ID},&quot;templateId&quot;:3,&quot;shortName&quot;:&quot;qt_technical_specifi&quot;,&quot;longName&quot;:&quot;QH_TECHNICAL  SPECIFICATION RG&quot;,&quot;description&quot;:&quot;TECHNICAL  SPECIFICATION&quot;,&quot;orgId&quot;:606,&quot;deptId&quot;:606,&quot;status&quot;:&quot;A&quot;,&quot;visibility&quot;:&quot;A&quot;,&quot;levelMapId&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;masterProcessId&quot;:2,&quot;subProcessId&quot;:18652,&quot;associatedBidPart&quot;:1,&quot;isFixedTemplate&quot;:&quot;N&quot;,&quot;displaySequenceNo&quot;:4,&quot;mappedTemplateId&quot;:null,&quot;mappedTemplateShortName&quot;:&quot;&quot;,&quot;quotationDependencyFlag&quot;:&quot;N&quot;,&quot;subProcessName&quot;:&quot;Technical Compliance Table&quot;,&quot;mappedDepartmentId&quot;:null,&quot;templateFieldList&quot;:[{&quot;fieldtemplategroupId&quot;:251753,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32520,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf1&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;ITEM_NO&quot;,&quot;longName&quot;:&quot;ITEM_NO&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:1,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;={{technical_specification.ITEM_NO}}&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;ITEM2&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251754,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32520,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf2&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;ITEM_SPECIFICATION&quot;,&quot;longName&quot;:&quot;ITEM_SPECIFICATION&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:2,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;={{technical_specification.ITEM_SPECIFICATION}}&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;SPECIFICATION&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251751,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32520,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf3&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;ITEM_QTY&quot;,&quot;longName&quot;:&quot;ITEM QTY&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:500,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:3,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;={{technical_specification.ITEM_QTY}}&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;2&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251752,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32520,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf4&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;RESPONSE&quot;,&quot;longName&quot;:&quot;RESPONSE&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:4,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;any&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false}],&quot;subProcess&quot;:null,&quot;identifystring&quot;:null,&quot;indexSerialNo&quot;:&quot;1&quot;,&quot;excelRowNumber&quot;:null,&quot;sorItemFlag&quot;:null,&quot;tabWiseApproverComment&quot;:null,&quot;bidableflag&quot;:null,&quot;mandatory_flag&quot;:null,&quot;mandatoryItem&quot;:null,&quot;prePopulatedRfqData&quot;:1,&quot;corrAttachmentFlag&quot;:null,&quot;bidSectionwiseApproverComment&quot;:null,&quot;bidSectionwiseInitiotorComment&quot;:null,&quot;itemParentCode&quot;:null,&quot;itemCode&quot;:null,&quot;templates&quot;:null,&quot;tenderTemplateGroupId&quot;:0,&quot;relTablePrimaryKeyId&quot;:0,&quot;tablePrimaryKeyId&quot;:0,&quot;isValidated&quot;:&quot;E&quot;,&quot;modifiedFlag&quot;:false,&quot;itemActionFlag&quot;:null,&quot;bidderWiseActivityDoneStatus&quot;:null,&quot;excelUploadFlag&quot;:false,&quot;paymenttypeId&quot;:null,&quot;liveNodeItemFlag&quot;:&quot;Y&quot;,&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;isOriginal&quot;:null,&quot;isAssigned&quot;:null,&quot;sourceItemId&quot;:null,&quot;mainItemQty&quot;:null,&quot;dueDate&quot;:null,&quot;descriptionTC&quot;:null,&quot;isPaymentTerm&quot;:null,&quot;isSpecialFileDownload&quot;:null,&quot;itemQty&quot;:null,&quot;isvalidExcel&quot;:false,&quot;indentAttachmentFlag&quot;:null,&quot;isQualifiedQuotationItem&quot;:null,&quot;usedInCatalog&quot;:null,&quot;oldItemCode&quot;:null,&quot;fileSignHash&quot;:null,&quot;isDownloadPossible&quot;:null,&quot;filevisibleType&quot;:null,&quot;aceptedOn&quot;:null,&quot;qualDecTakenInLabelId&quot;:null,&quot;mainEstimatedPrice&quot;:null,&quot;isVisibleForMerge&quot;:true,&quot;currentSanctionObjectPrimaryKey&quot;:0,&quot;validationMessage&quot;:null,&quot;orderedQty&quot;:null,&quot;poConsumedqty&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;signBy&quot;:null,&quot;signDate&quot;:null,&quot;exemptionValue&quot;:null,&quot;quotationItemDecryptList&quot;:null,&quot;quotationDetailDecryptList&quot;:null,&quot;quotationFeesMasterDecryptList&quot;:null,&quot;quotAttachListMap&quot;:null,&quot;amendedQty&quot;:null,&quot;hashString&quot;:null,&quot;eoiquotationDetailDecryptList&quot;:null,&quot;eoiquotAttachListMap&quot;:null,&quot;showMinusIcon&quot;:true,&quot;isOpen&quot;:true}],&quot;quotationDetailList&quot;:null,&quot;quotationFeesList&quot;:null,&quot;quotationFeesMasterList&quot;:null,&quot;tendercat&quot;:0,&quot;pacAmt&quot;:null,&quot;quotAttachListMap&quot;:{},&quot;quotationItemList&quot;:null,&quot;tender&quot;:null,&quot;groupid&quot;:null,&quot;templategroupid&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;orgtenderid&quot;:0,&quot;tenderCategory&quot;:null,&quot;vendorId&quot;:${VAR_ORGANIZATION_ID},&quot;negotiationStartdate&quot;:null,&quot;negotiationEnddate&quot;:null,&quot;draftQuotationCreatedDate&quot;:null,&quot;tenderListDto&quot;:null,&quot;bidSubmissionDate&quot;:null,&quot;quotationDetailTemplateIdList&quot;:[],&quot;quotationItemTemplateIdList&quot;:[],&quot;proxyBidFlag&quot;:null,&quot;vendorUserId&quot;:${LOGIN_USER_ID},&quot;lastSavedOnByBidder&quot;:1586365304000,&quot;tenderCurrency&quot;:null,&quot;reloadFlagForCorrig&quot;:false,&quot;draftQuotationFeesList&quot;:[],&quot;isRevisedOrImpactBid&quot;:&quot;N&quot;,&quot;isRevisedOrImpactBidApplicable&quot;:&quot;N&quot;,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;hashString&quot;:null,&quot;previousTemplates&quot;:null,&quot;quotationSubmittedDate&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/insertDraftQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/insertDraftQuotation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;quotationId&quot;:${VAR_QUOTATION_ID},&quot;quotationRefNo&quot;:&quot;code001&quot;,&quot;tenderId&quot;:${VAR_TENDER_ID},&quot;currencyId&quot;:&quot;BSD&quot;,&quot;statusId&quot;:0,&quot;userDigitalcertId&quot;:0,&quot;createId&quot;:${LOGIN_USER_ID},&quot;createDate&quot;:1586365304000,&quot;updateId&quot;:${LOGIN_USER_ID},&quot;updateDate&quot;:1586365304000,&quot;isActive&quot;:1,&quot;bidduedate&quot;:1586381281597,&quot;bidpartno&quot;:1,&quot;tenderDescription&quot;:&quot;NEW TENDER&quot;,&quot;negotiatioFlag&quot;:null,&quot;negotiationId&quot;:null,&quot;isCorrigendum&quot;:&quot;No&quot;,&quot;signHash&quot;:&quot;&quot;,&quot;tenderResponseId&quot;:${VAR_RESPONSE_ID},&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;templates&quot;:[{&quot;templategroupId&quot;:32526,&quot;displayLayoutid&quot;:102,&quot;templateTypeId&quot;:102,&quot;templateCatId&quot;:1553,&quot;groupId&quot;:${GROUP_ID},&quot;templateId&quot;:9,&quot;shortName&quot;:&quot;qi_supply_01&quot;,&quot;longName&quot;:&quot;QI General Supply RG&quot;,&quot;description&quot;:&quot;qi_supply&quot;,&quot;orgId&quot;:606,&quot;deptId&quot;:606,&quot;status&quot;:&quot;A&quot;,&quot;visibility&quot;:&quot;A&quot;,&quot;levelMapId&quot;:null,&quot;createid&quot;:${LOGIN_USER_ID},&quot;createdate&quot;:1586365400000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;masterProcessId&quot;:2,&quot;subProcessId&quot;:18675,&quot;associatedBidPart&quot;:2,&quot;isFixedTemplate&quot;:&quot;N&quot;,&quot;displaySequenceNo&quot;:5,&quot;mappedTemplateId&quot;:32527,&quot;mappedTemplateShortName&quot;:&quot;rfq_item_rg&quot;,&quot;quotationDependencyFlag&quot;:&quot;N&quot;,&quot;subProcessName&quot;:&quot;Price Sheet&quot;,&quot;mappedDepartmentId&quot;:null,&quot;templateFieldList&quot;:[{&quot;fieldtemplategroupId&quot;:251791,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;item_code&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;item_code&quot;,&quot;longName&quot;:&quot;Item  No&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:1,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;100&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251795,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;item_name&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;item_name&quot;,&quot;longName&quot;:&quot;Item Description&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:2,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;Test&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251786,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:106,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;uom&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;uom&quot;,&quot;longName&quot;:&quot;U.O.M&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;194,192,141,142,144,143,145,146,216,4,5,6,8,7,20,9,10,19,18,21,12,22,24,16,13,15,220,14,17,28,11,32,31,34,74,33,36,35,37,38,40,39,45,44,43,223,23,42,51,53,52,46,54,61,49,57,58,59,56,50,47,60,48,63,62,70,66,67,69,71,68,199,72,73,76,75,77,80,78,219,79,81,110,93,87,86,98,94,92,97,99,96,88,95,84,100,101,102,104,226,103,82,83,111,89,107,90,112,85,108,109,91,113,203,114,116,117,119,115,120,118,Lump sump unit,131,133,169,168,134,227,228,229,25,26,27,124,123,121,125,158,160,130,159,140,132,127,151,231,167,148,155,152,150,161,154,162,232,29,122,126,164,171,170,136,153,137,163,165,138,135,149,166,139,147,156,128,129,172,174,106,176,177,178,175,217,218,180,201,184,181,186,190,191,195,183,182,197,202,187,188,189,185,64,196,179,198,200,193,205,105,204,206,207,157,55,209,208,211,210,173,212,213,221,214,215,224,222,225,230,234,235,238,237,245,239,240,241,242,236,243,244,246,248,247,249,250,41,65,251,233,30,252&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:3,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;%&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251787,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;item_qty&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;item_qty&quot;,&quot;longName&quot;:&quot;Quantity&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;##.##&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:4,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;1&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:100,&quot;isAggregation&quot;:&quot;Y&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251788,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;sor_rate&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;sor_rate&quot;,&quot;longName&quot;:&quot;SOR Rate&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:5,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;N&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251785,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;estimat_price&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;estimat_price&quot;,&quot;longName&quot;:&quot;Estimated Price&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:6,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;N&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251789,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf1&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;QI_Basic_rate&quot;,&quot;longName&quot;:&quot;Rate&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;##.##&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;Y&quot;,&quot;displayOrder&quot;:7,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;5&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251783,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf2&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Basic_total&quot;,&quot;longName&quot;:&quot;Amount&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;Y&quot;,&quot;displayOrder&quot;:8,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;=Round({{qi_supply_01.item_qty}}*{{qi_supply_01.QI_Basic_rate}},2)&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;5&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:100,&quot;isAggregation&quot;:&quot;Y&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251784,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf3&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;FPUV&quot;,&quot;longName&quot;:&quot;Freight per unit value&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;Y&quot;,&quot;displayOrder&quot;:9,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;5&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251790,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf4&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Freight_total&quot;,&quot;longName&quot;:&quot;Total Freight&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:10,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;=Round({{qi_supply_01.FPUV}}*{{qi_supply_01.item_qty}},2)&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;5&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:100,&quot;isAggregation&quot;:&quot;Y&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251792,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf5&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;gstp&quot;,&quot;longName&quot;:&quot;GST Percentage&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:11,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;5&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251793,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf6&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;gstv&quot;,&quot;longName&quot;:&quot;GST Value&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;Y&quot;,&quot;displayOrder&quot;:12,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;=({{qi_supply_01.Basic_total}}+{{qi_supply_01.Freight_total}})*{{qi_supply_01.gstp}}%&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;0.5&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:100,&quot;isAggregation&quot;:&quot;Y&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251794,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:${GROUP_ID},&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf7&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Grand_total&quot;,&quot;longName&quot;:&quot;Total&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;Y&quot;,&quot;displayOrder&quot;:13,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;={{qi_supply_01.Basic_total}}+{{qi_supply_01.Freight_total}}+{{qi_supply_01.gstv}}&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;10.5&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:100,&quot;isAggregation&quot;:&quot;Y&quot;,&quot;bidValueFlag&quot;:&quot;Y&quot;,&quot;itemWiseRankingFlag&quot;:&quot;Y&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null}],&quot;subProcess&quot;:null,&quot;identifystring&quot;:null,&quot;indexSerialNo&quot;:&quot;1&quot;,&quot;excelRowNumber&quot;:null,&quot;sorItemFlag&quot;:null,&quot;tabWiseApproverComment&quot;:null,&quot;bidableflag&quot;:&quot;Y&quot;,&quot;mandatory_flag&quot;:&quot;Yes&quot;,&quot;mandatoryItem&quot;:null,&quot;prePopulatedRfqData&quot;:0,&quot;corrAttachmentFlag&quot;:null,&quot;bidSectionwiseApproverComment&quot;:null,&quot;bidSectionwiseInitiotorComment&quot;:null,&quot;itemParentCode&quot;:&quot;0&quot;,&quot;itemCode&quot;:&quot;100&quot;,&quot;templates&quot;:null,&quot;tenderTemplateGroupId&quot;:32527,&quot;relTablePrimaryKeyId&quot;:${REL_TABLE_PRIMARY_KEY_ID},&quot;tablePrimaryKeyId&quot;:${TABLE_PRIMARY_KEY_ID},&quot;isValidated&quot;:&quot;V&quot;,&quot;modifiedFlag&quot;:false,&quot;itemActionFlag&quot;:null,&quot;bidderWiseActivityDoneStatus&quot;:null,&quot;excelUploadFlag&quot;:true,&quot;paymenttypeId&quot;:null,&quot;liveNodeItemFlag&quot;:&quot;Y&quot;,&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;isOriginal&quot;:null,&quot;isAssigned&quot;:null,&quot;sourceItemId&quot;:null,&quot;mainItemQty&quot;:null,&quot;dueDate&quot;:null,&quot;descriptionTC&quot;:null,&quot;isPaymentTerm&quot;:null,&quot;isSpecialFileDownload&quot;:null,&quot;itemQty&quot;:null,&quot;isvalidExcel&quot;:false,&quot;indentAttachmentFlag&quot;:null,&quot;isQualifiedQuotationItem&quot;:null,&quot;usedInCatalog&quot;:null,&quot;oldItemCode&quot;:null,&quot;fileSignHash&quot;:null,&quot;isDownloadPossible&quot;:null,&quot;filevisibleType&quot;:null,&quot;aceptedOn&quot;:null,&quot;qualDecTakenInLabelId&quot;:null,&quot;mainEstimatedPrice&quot;:null,&quot;isVisibleForMerge&quot;:true,&quot;currentSanctionObjectPrimaryKey&quot;:0,&quot;validationMessage&quot;:null,&quot;orderedQty&quot;:null,&quot;poConsumedqty&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;signBy&quot;:null,&quot;signDate&quot;:null,&quot;exemptionValue&quot;:null,&quot;quotationItemDecryptList&quot;:null,&quot;quotationDetailDecryptList&quot;:null,&quot;quotationFeesMasterDecryptList&quot;:null,&quot;quotAttachListMap&quot;:null,&quot;amendedQty&quot;:null,&quot;hashString&quot;:null,&quot;eoiquotAttachListMap&quot;:null,&quot;eoiquotationDetailDecryptList&quot;:null,&quot;showMinusIcon&quot;:true,&quot;isOpen&quot;:true}],&quot;quotationDetailList&quot;:null,&quot;quotationFeesList&quot;:null,&quot;quotationFeesMasterList&quot;:null,&quot;tendercat&quot;:0,&quot;pacAmt&quot;:null,&quot;quotAttachListMap&quot;:{},&quot;quotationItemList&quot;:null,&quot;tender&quot;:null,&quot;groupid&quot;:null,&quot;templategroupid&quot;:${VAR_TEMPLATE_GROUP_ID},&quot;orgtenderid&quot;:0,&quot;tenderCategory&quot;:null,&quot;vendorId&quot;:${VAR_ORGANIZATION_ID},&quot;negotiationStartdate&quot;:null,&quot;negotiationEnddate&quot;:null,&quot;draftQuotationCreatedDate&quot;:null,&quot;tenderListDto&quot;:null,&quot;bidSubmissionDate&quot;:null,&quot;quotationDetailTemplateIdList&quot;:[],&quot;quotationItemTemplateIdList&quot;:[],&quot;proxyBidFlag&quot;:null,&quot;vendorUserId&quot;:${LOGIN_USER_ID},&quot;lastSavedOnByBidder&quot;:1586365304000,&quot;tenderCurrency&quot;:null,&quot;reloadFlagForCorrig&quot;:false,&quot;draftQuotationFeesList&quot;:[],&quot;isRevisedOrImpactBid&quot;:&quot;N&quot;,&quot;isRevisedOrImpactBidApplicable&quot;:&quot;N&quot;,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;hashString&quot;:null,&quot;previousTemplates&quot;:null,&quot;quotationSubmittedDate&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/insertDraftQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/insertDraftQuotation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;quotationId&quot;: ${VAR_QUOTATION_ID},&#xd;
  &quot;quotationRefNo&quot;: &quot;code001&quot;,&#xd;
  &quot;tenderId&quot;: ${VAR_TENDER_ID},&#xd;
  &quot;currencyId&quot;: &quot;BSD&quot;,&#xd;
  &quot;statusId&quot;: 0,&#xd;
  &quot;userDigitalcertId&quot;: 0,&#xd;
  &quot;createId&quot;: ${LOGIN_USER_ID},&#xd;
  &quot;createDate&quot;: 1586365304000,&#xd;
  &quot;updateId&quot;: ${LOGIN_USER_ID},&#xd;
  &quot;updateDate&quot;: 1586365304000,&#xd;
  &quot;isActive&quot;: 1,&#xd;
  &quot;bidduedate&quot;: 1586381281597,&#xd;
  &quot;bidpartno&quot;: 1,&#xd;
  &quot;tenderDescription&quot;: &quot;NEW TENDER&quot;,&#xd;
  &quot;negotiatioFlag&quot;: null,&#xd;
  &quot;negotiationId&quot;: null,&#xd;
  &quot;isCorrigendum&quot;: &quot;No&quot;,&#xd;
  &quot;signHash&quot;: &quot;&quot;,&#xd;
  &quot;tenderResponseId&quot;: ${VAR_RESPONSE_ID},&#xd;
  &quot;pkiEnabled&quot;: &quot;N&quot;,&#xd;
  &quot;templates&quot;: [&#xd;
    {&#xd;
      &quot;templategroupId&quot;: 32522,&#xd;
      &quot;displayLayoutid&quot;: 102,&#xd;
      &quot;templateTypeId&quot;: 101,&#xd;
      &quot;templateCatId&quot;: 1553,&#xd;
      &quot;groupId&quot;: ${GROUP_ID},&#xd;
      &quot;templateId&quot;: 5,&#xd;
      &quot;shortName&quot;: &quot;qout_attachment&quot;,&#xd;
      &quot;longName&quot;: &quot;qtnattachment_fixed_dataset&quot;,&#xd;
      &quot;description&quot;: &quot;This is for  quotation attachment&quot;,&#xd;
      &quot;orgId&quot;: 606,&#xd;
      &quot;deptId&quot;: 606,&#xd;
      &quot;status&quot;: &quot;A&quot;,&#xd;
      &quot;visibility&quot;: &quot;A&quot;,&#xd;
      &quot;levelMapId&quot;: null,&#xd;
      &quot;createid&quot;: 3989,&#xd;
      &quot;createdate&quot;: 1586193035000,&#xd;
      &quot;updateid&quot;: 3989,&#xd;
      &quot;updatedate&quot;: 1586193042000,&#xd;
      &quot;isActive&quot;: 1,&#xd;
      &quot;masterProcessId&quot;: 2,&#xd;
      &quot;subProcessId&quot;: 18627,&#xd;
      &quot;associatedBidPart&quot;: 1,&#xd;
      &quot;isFixedTemplate&quot;: &quot;Y&quot;,&#xd;
      &quot;displaySequenceNo&quot;: 2,&#xd;
      &quot;mappedTemplateId&quot;: null,&#xd;
      &quot;mappedTemplateShortName&quot;: &quot;&quot;,&#xd;
      &quot;quotationDependencyFlag&quot;: &quot;N&quot;,&#xd;
      &quot;subProcessName&quot;: &quot;Attachments&quot;,&#xd;
      &quot;mappedDepartmentId&quot;: null,&#xd;
      &quot;templateFieldList&quot;: [&#xd;
        {&#xd;
          &quot;fieldtemplategroupId&quot;: 251760,&#xd;
          &quot;dataTypeId&quot;: 101,&#xd;
          &quot;templategroupId&quot;: 32522,&#xd;
          &quot;groupId&quot;: ${GROUP_ID},&#xd;
          &quot;indicatorType&quot;: &quot;&quot;,&#xd;
          &quot;controlTypeId&quot;: 100,&#xd;
          &quot;orgid&quot;: 606,&#xd;
          &quot;deptid&quot;: 606,&#xd;
          &quot;fieldId&quot;: null,&#xd;
          &quot;code&quot;: &quot;label&quot;,&#xd;
          &quot;userType&quot;: &quot;S&quot;,&#xd;
          &quot;shortName&quot;: &quot;label&quot;,&#xd;
          &quot;longName&quot;: &quot;Label&quot;,&#xd;
          &quot;minLength&quot;: 1,&#xd;
          &quot;maxLength&quot;: 100,&#xd;
          &quot;displayWidth&quot;: null,&#xd;
          &quot;displayHeight&quot;: null,&#xd;
          &quot;listValues&quot;: &quot;&quot;,&#xd;
          &quot;displaySize&quot;: &quot;M&quot;,&#xd;
          &quot;defaultValue&quot;: &quot;&quot;,&#xd;
          &quot;dataFormat&quot;: &quot;&quot;,&#xd;
          &quot;effectiveFrom&quot;: null,&#xd;
          &quot;effectiveTo&quot;: null,&#xd;
          &quot;status&quot;: &quot;A&quot;,&#xd;
          &quot;createid&quot;: 3989,&#xd;
          &quot;createdate&quot;: 1586193035000,&#xd;
          &quot;updateid&quot;: 3989,&#xd;
          &quot;updatedate&quot;: 1586193042000,&#xd;
          &quot;isActive&quot;: 1,&#xd;
          &quot;fieldType&quot;: &quot;&quot;,&#xd;
          &quot;tooltip&quot;: &quot;&quot;,&#xd;
          &quot;encrypted&quot;: &quot;D&quot;,&#xd;
          &quot;displayOrder&quot;: 1,&#xd;
          &quot;isFixedField&quot;: &quot;Y&quot;,&#xd;
          &quot;isEnabled&quot;: &quot;Y&quot;,&#xd;
          &quot;mandatory&quot;: &quot;N&quot;,&#xd;
          &quot;formula&quot;: &quot;&quot;,&#xd;
          &quot;validation&quot;: &quot;&quot;,&#xd;
          &quot;isVisible&quot;: &quot;Y&quot;,&#xd;
          &quot;isException&quot;: &quot;N&quot;,&#xd;
          &quot;value&quot;: null,&#xd;
          &quot;roleWiseFieldEntry&quot;: &quot;E&quot;,&#xd;
          &quot;groupTemplateFieldRoleExceptionList&quot;: null,&#xd;
          &quot;fieldValidationList&quot;: null,&#xd;
          &quot;aggregationtypeid&quot;: null,&#xd;
          &quot;isAggregation&quot;: &quot;N&quot;,&#xd;
          &quot;bidValueFlag&quot;: &quot;N&quot;,&#xd;
          &quot;itemWiseRankingFlag&quot;: &quot;&quot;,&#xd;
          &quot;fieldValEditableFlag&quot;: null,&#xd;
          &quot;amountInWords&quot;: &quot;&quot;,&#xd;
          &quot;restrictIncreaseAtNegotiation&quot;: &quot;N&quot;,&#xd;
          &quot;relativePath&quot;: null,&#xd;
          &quot;listOfValues&quot;: null,&#xd;
          &quot;dataHash&quot;: null,&#xd;
          &quot;excludedVendorsForDifferentialRfq&quot;: null,&#xd;
          &quot;genInfoGrpId&quot;: null,&#xd;
          &quot;displayText&quot;: null&#xd;
        },&#xd;
        {&#xd;
          &quot;fieldtemplategroupId&quot;: 251761,&#xd;
          &quot;dataTypeId&quot;: 101,&#xd;
          &quot;templategroupId&quot;: 32522,&#xd;
          &quot;groupId&quot;: ${GROUP_ID},&#xd;
          &quot;indicatorType&quot;: &quot;&quot;,&#xd;
          &quot;controlTypeId&quot;: 100,&#xd;
          &quot;orgid&quot;: 606,&#xd;
          &quot;deptid&quot;: 606,&#xd;
          &quot;fieldId&quot;: null,&#xd;
          &quot;code&quot;: &quot;file_name&quot;,&#xd;
          &quot;userType&quot;: &quot;S&quot;,&#xd;
          &quot;shortName&quot;: &quot;file_name&quot;,&#xd;
          &quot;longName&quot;: &quot;File Name&quot;,&#xd;
          &quot;minLength&quot;: 1,&#xd;
          &quot;maxLength&quot;: 100,&#xd;
          &quot;displayWidth&quot;: null,&#xd;
          &quot;displayHeight&quot;: null,&#xd;
          &quot;listValues&quot;: &quot;&quot;,&#xd;
          &quot;displaySize&quot;: &quot;M&quot;,&#xd;
          &quot;defaultValue&quot;: &quot;&quot;,&#xd;
          &quot;dataFormat&quot;: &quot;&quot;,&#xd;
          &quot;effectiveFrom&quot;: null,&#xd;
          &quot;effectiveTo&quot;: null,&#xd;
          &quot;status&quot;: &quot;A&quot;,&#xd;
          &quot;createid&quot;: 3989,&#xd;
          &quot;createdate&quot;: 1586193035000,&#xd;
          &quot;updateid&quot;: 3989,&#xd;
          &quot;updatedate&quot;: 1586193042000,&#xd;
          &quot;isActive&quot;: 1,&#xd;
          &quot;fieldType&quot;: &quot;&quot;,&#xd;
          &quot;tooltip&quot;: &quot;&quot;,&#xd;
          &quot;encrypted&quot;: &quot;D&quot;,&#xd;
          &quot;displayOrder&quot;: 2,&#xd;
          &quot;isFixedField&quot;: &quot;Y&quot;,&#xd;
          &quot;isEnabled&quot;: &quot;Y&quot;,&#xd;
          &quot;mandatory&quot;: &quot;N&quot;,&#xd;
          &quot;formula&quot;: &quot;&quot;,&#xd;
          &quot;validation&quot;: &quot;&quot;,&#xd;
          &quot;isVisible&quot;: &quot;Y&quot;,&#xd;
          &quot;isException&quot;: &quot;N&quot;,&#xd;
          &quot;value&quot;: null,&#xd;
          &quot;roleWiseFieldEntry&quot;: &quot;E&quot;,&#xd;
          &quot;groupTemplateFieldRoleExceptionList&quot;: null,&#xd;
          &quot;fieldValidationList&quot;: null,&#xd;
          &quot;aggregationtypeid&quot;: null,&#xd;
          &quot;isAggregation&quot;: &quot;N&quot;,&#xd;
          &quot;bidValueFlag&quot;: &quot;N&quot;,&#xd;
          &quot;itemWiseRankingFlag&quot;: &quot;&quot;,&#xd;
          &quot;fieldValEditableFlag&quot;: null,&#xd;
          &quot;amountInWords&quot;: &quot;&quot;,&#xd;
          &quot;restrictIncreaseAtNegotiation&quot;: &quot;N&quot;,&#xd;
          &quot;relativePath&quot;: null,&#xd;
          &quot;listOfValues&quot;: null,&#xd;
          &quot;dataHash&quot;: null,&#xd;
          &quot;excludedVendorsForDifferentialRfq&quot;: null,&#xd;
          &quot;genInfoGrpId&quot;: null,&#xd;
          &quot;displayText&quot;: null&#xd;
        },&#xd;
        {&#xd;
          &quot;fieldtemplategroupId&quot;: 251762,&#xd;
          &quot;dataTypeId&quot;: 104,&#xd;
          &quot;templategroupId&quot;: 32522,&#xd;
          &quot;groupId&quot;: ${GROUP_ID},&#xd;
          &quot;indicatorType&quot;: &quot;&quot;,&#xd;
          &quot;controlTypeId&quot;: 108,&#xd;
          &quot;orgid&quot;: 606,&#xd;
          &quot;deptid&quot;: 606,&#xd;
          &quot;fieldId&quot;: null,&#xd;
          &quot;code&quot;: &quot;attach_file&quot;,&#xd;
          &quot;userType&quot;: &quot;S&quot;,&#xd;
          &quot;shortName&quot;: &quot;attach_file&quot;,&#xd;
          &quot;longName&quot;: &quot;Attach File&quot;,&#xd;
          &quot;minLength&quot;: 1,&#xd;
          &quot;maxLength&quot;: 100,&#xd;
          &quot;displayWidth&quot;: null,&#xd;
          &quot;displayHeight&quot;: null,&#xd;
          &quot;listValues&quot;: &quot;&quot;,&#xd;
          &quot;displaySize&quot;: &quot;S&quot;,&#xd;
          &quot;defaultValue&quot;: &quot;&quot;,&#xd;
          &quot;dataFormat&quot;: &quot;&quot;,&#xd;
          &quot;effectiveFrom&quot;: null,&#xd;
          &quot;effectiveTo&quot;: null,&#xd;
          &quot;status&quot;: &quot;A&quot;,&#xd;
          &quot;createid&quot;: 3989,&#xd;
          &quot;createdate&quot;: 1586193035000,&#xd;
          &quot;updateid&quot;: 3989,&#xd;
          &quot;updatedate&quot;: 1586193042000,&#xd;
          &quot;isActive&quot;: 1,&#xd;
          &quot;fieldType&quot;: &quot;&quot;,&#xd;
          &quot;tooltip&quot;: &quot;&quot;,&#xd;
          &quot;encrypted&quot;: &quot;D&quot;,&#xd;
          &quot;displayOrder&quot;: 3,&#xd;
          &quot;isFixedField&quot;: &quot;Y&quot;,&#xd;
          &quot;isEnabled&quot;: &quot;Y&quot;,&#xd;
          &quot;mandatory&quot;: &quot;N&quot;,&#xd;
          &quot;formula&quot;: &quot;&quot;,&#xd;
          &quot;validation&quot;: &quot;&quot;,&#xd;
          &quot;isVisible&quot;: &quot;Y&quot;,&#xd;
          &quot;isException&quot;: &quot;N&quot;,&#xd;
          &quot;value&quot;: null,&#xd;
          &quot;roleWiseFieldEntry&quot;: &quot;E&quot;,&#xd;
          &quot;groupTemplateFieldRoleExceptionList&quot;: null,&#xd;
          &quot;fieldValidationList&quot;: null,&#xd;
          &quot;aggregationtypeid&quot;: null,&#xd;
          &quot;isAggregation&quot;: &quot;N&quot;,&#xd;
          &quot;bidValueFlag&quot;: &quot;N&quot;,&#xd;
          &quot;itemWiseRankingFlag&quot;: &quot;&quot;,&#xd;
          &quot;fieldValEditableFlag&quot;: null,&#xd;
          &quot;amountInWords&quot;: &quot;&quot;,&#xd;
          &quot;restrictIncreaseAtNegotiation&quot;: &quot;N&quot;,&#xd;
          &quot;relativePath&quot;: null,&#xd;
          &quot;listOfValues&quot;: null,&#xd;
          &quot;dataHash&quot;: null,&#xd;
          &quot;excludedVendorsForDifferentialRfq&quot;: null,&#xd;
          &quot;genInfoGrpId&quot;: null,&#xd;
          &quot;displayText&quot;: null&#xd;
        }&#xd;
      ],&#xd;
      &quot;subProcess&quot;: null,&#xd;
      &quot;identifystring&quot;: null,&#xd;
      &quot;indexSerialNo&quot;: null,&#xd;
      &quot;excelRowNumber&quot;: null,&#xd;
      &quot;sorItemFlag&quot;: null,&#xd;
      &quot;tabWiseApproverComment&quot;: null,&#xd;
      &quot;bidableflag&quot;: null,&#xd;
      &quot;mandatory_flag&quot;: null,&#xd;
      &quot;mandatoryItem&quot;: null,&#xd;
      &quot;prePopulatedRfqData&quot;: 0,&#xd;
      &quot;corrAttachmentFlag&quot;: null,&#xd;
      &quot;bidSectionwiseApproverComment&quot;: null,&#xd;
      &quot;bidSectionwiseInitiotorComment&quot;: null,&#xd;
      &quot;itemParentCode&quot;: null,&#xd;
      &quot;itemCode&quot;: null,&#xd;
      &quot;templates&quot;: null,&#xd;
      &quot;tenderTemplateGroupId&quot;: 0,&#xd;
      &quot;relTablePrimaryKeyId&quot;: 0,&#xd;
      &quot;tablePrimaryKeyId&quot;: 0,&#xd;
      &quot;isValidated&quot;: null,&#xd;
      &quot;modifiedFlag&quot;: false,&#xd;
      &quot;itemActionFlag&quot;: null,&#xd;
      &quot;bidderWiseActivityDoneStatus&quot;: null,&#xd;
      &quot;excelUploadFlag&quot;: false,&#xd;
      &quot;paymenttypeId&quot;: null,&#xd;
      &quot;liveNodeItemFlag&quot;: &quot;Y&quot;,&#xd;
      &quot;dscPublicKey&quot;: null,&#xd;
      &quot;dscCertString&quot;: null,&#xd;
      &quot;isOriginal&quot;: null,&#xd;
      &quot;isAssigned&quot;: null,&#xd;
      &quot;sourceItemId&quot;: null,&#xd;
      &quot;mainItemQty&quot;: null,&#xd;
      &quot;dueDate&quot;: null,&#xd;
      &quot;descriptionTC&quot;: null,&#xd;
      &quot;isPaymentTerm&quot;: null,&#xd;
      &quot;isSpecialFileDownload&quot;: null,&#xd;
      &quot;itemQty&quot;: null,&#xd;
      &quot;isvalidExcel&quot;: false,&#xd;
      &quot;indentAttachmentFlag&quot;: null,&#xd;
      &quot;isQualifiedQuotationItem&quot;: null,&#xd;
      &quot;usedInCatalog&quot;: null,&#xd;
      &quot;oldItemCode&quot;: null,&#xd;
      &quot;fileSignHash&quot;: null,&#xd;
      &quot;isDownloadPossible&quot;: null,&#xd;
      &quot;filevisibleType&quot;: null,&#xd;
      &quot;aceptedOn&quot;: null,&#xd;
      &quot;qualDecTakenInLabelId&quot;: null,&#xd;
      &quot;mainEstimatedPrice&quot;: null,&#xd;
      &quot;isVisibleForMerge&quot;: true,&#xd;
      &quot;currentSanctionObjectPrimaryKey&quot;: 0,&#xd;
      &quot;validationMessage&quot;: null,&#xd;
      &quot;orderedQty&quot;: null,&#xd;
      &quot;poConsumedqty&quot;: null,&#xd;
      &quot;certSelectedUserName&quot;: null,&#xd;
      &quot;signBy&quot;: null,&#xd;
      &quot;signDate&quot;: null,&#xd;
      &quot;exemptionValue&quot;: null,&#xd;
      &quot;quotationItemDecryptList&quot;: null,&#xd;
      &quot;quotationDetailDecryptList&quot;: null,&#xd;
      &quot;quotationFeesMasterDecryptList&quot;: null,&#xd;
      &quot;quotAttachListMap&quot;: null,&#xd;
      &quot;amendedQty&quot;: null,&#xd;
      &quot;hashString&quot;: null,&#xd;
      &quot;eoiquotAttachListMap&quot;: null,&#xd;
      &quot;eoiquotationDetailDecryptList&quot;: null,&#xd;
      &quot;showMinusIcon&quot;: true,&#xd;
      &quot;isOpen&quot;: true&#xd;
    }&#xd;
  ],&#xd;
  &quot;quotationDetailList&quot;: null,&#xd;
  &quot;quotationFeesList&quot;: null,&#xd;
  &quot;quotationFeesMasterList&quot;: null,&#xd;
  &quot;tendercat&quot;: 0,&#xd;
  &quot;pacAmt&quot;: null,&#xd;
  &quot;quotAttachListMap&quot;: {&#xd;
    &quot;quotationattachment&quot;: {&#xd;
      &quot;quotationattachment&quot;: [&#xd;
        &#xd;
      ]&#xd;
    },&#xd;
    &quot;tenderattachment&quot;: {&#xd;
      &quot;tenderattachment&quot;: [&#xd;
        {&#xd;
          &quot;attachmentid&quot;: ${VAR_ATTACHMENTID},&#xd;
          &quot;tenderbidderattachid&quot;: ${VAR_TENDER_BIDDER_ATTACHID},&#xd;
          &quot;tenderid&quot;: ${VAR_TENDER_ID},&#xd;
          &quot;quotationid&quot;: ${VAR_QUOTATION_ID},&#xd;
          &quot;templategroupid&quot;: 32522,&#xd;
          &quot;label&quot;: &quot;Dummy&quot;,&#xd;
          &quot;fileName&quot;: &quot;Receipt-5.jpg&quot;,&#xd;
          &quot;targetsystem&quot;: &quot;32521\\1586507557868_Receipt-5.jpg&quot;,&#xd;
          &quot;filesize&quot;: null,&#xd;
          &quot;supportingdoc&quot;: null,&#xd;
          &quot;mandatoryflag&quot;: null,&#xd;
          &quot;exemptionflag&quot;: null,&#xd;
          &quot;attachgroup&quot;: null,&#xd;
          &quot;attachType&quot;: null,&#xd;
          &quot;status&quot;: &quot;1&quot;,&#xd;
          &quot;attachmentcategory&quot;: &quot;tenderattachment&quot;,&#xd;
          &quot;createId&quot;: ${LOGIN_USER_ID},&#xd;
          &quot;createDate&quot;: 1586365433000,&#xd;
          &quot;updateId&quot;: ${LOGIN_USER_ID},&#xd;
          &quot;updateDate&quot;: 1586365433000,&#xd;
          &quot;isActive&quot;: 1,&#xd;
          &quot;bidderRemarks&quot;: null,&#xd;
          &quot;templateShortName&quot;: null,&#xd;
          &quot;signHash&quot;: null,&#xd;
          &quot;userDigitalCertId&quot;: 0,&#xd;
          &quot;dscPublicKey&quot;: null,&#xd;
          &quot;fileVisible&quot;: &quot;BOTH&quot;,&#xd;
          &quot;dscCertString&quot;: null,&#xd;
          &quot;signDate&quot;: null,&#xd;
          &quot;signBy&quot;: null,&#xd;
          &quot;exemptionFlagValue&quot;: null,&#xd;
          &quot;remarks&quot;: null,&#xd;
          &quot;hashString&quot;: null,&#xd;
          &quot;acceptanceFlag&quot;: null,&#xd;
          &quot;buyerRemarks&quot;: null&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;quotationItemList&quot;: null,&#xd;
  &quot;tender&quot;: null,&#xd;
  &quot;groupid&quot;: null,&#xd;
  &quot;templategroupid&quot;: ${VAR_TEMPLATE_GROUP_ID},&#xd;
  &quot;orgtenderid&quot;: 0,&#xd;
  &quot;tenderCategory&quot;: null,&#xd;
  &quot;vendorId&quot;: ${VAR_ORGANIZATION_ID},&#xd;
  &quot;negotiationStartdate&quot;: null,&#xd;
  &quot;negotiationEnddate&quot;: null,&#xd;
  &quot;draftQuotationCreatedDate&quot;: null,&#xd;
  &quot;tenderListDto&quot;: null,&#xd;
  &quot;bidSubmissionDate&quot;: null,&#xd;
  &quot;quotationDetailTemplateIdList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;quotationItemTemplateIdList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;proxyBidFlag&quot;: null,&#xd;
  &quot;vendorUserId&quot;: ${LOGIN_USER_ID},&#xd;
  &quot;lastSavedOnByBidder&quot;: 1586365304000,&#xd;
  &quot;tenderCurrency&quot;: null,&#xd;
  &quot;reloadFlagForCorrig&quot;: false,&#xd;
  &quot;draftQuotationFeesList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;isRevisedOrImpactBid&quot;: &quot;N&quot;,&#xd;
  &quot;isRevisedOrImpactBidApplicable&quot;: &quot;N&quot;,&#xd;
  &quot;signDate&quot;: null,&#xd;
  &quot;signBy&quot;: null,&#xd;
  &quot;hashString&quot;: null,&#xd;
  &quot;previousTemplates&quot;: null,&#xd;
  &quot;quotationSubmittedDate&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/insertDraftQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/checkCancelledTender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/checkCancelledTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/checkWithdrawBidList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/checkWithdrawBidList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/checkEligiblityForBid" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/checkEligiblityForBid</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/getQuotationDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">${VAR_QUOTATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/getQuotationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/getTenderNDADetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderNDADetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="final_submit_bid" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/vendor/checkVendorStatus?bidderId=3827" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="bidderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bidderId</stringProp>
                  <stringProp name="Argument.value">${VAR_ORGANIZATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/vendor/checkVendorStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/submitQuotation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="dscCertString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dscCertString</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dscPublicKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dscPublicKey</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">${VAR_QUOTATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationsignHash" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationsignHash</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="signUserId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">signUserId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="signUserDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">signUserDate</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/submitQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/updateAuthorizedBidStatusForQuotation?quotationId=14491&amp;pkiEnabled=N" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">${VAR_QUOTATION_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pkiEnabled" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pkiEnabled</stringProp>
                  <stringProp name="Argument.value">N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/updateAuthorizedBidStatusForQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/quotation/listTender.action *" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_5}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/quotation/listTender.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbuat.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AUTH_6</stringProp>
              <stringProp name="RegexExtractor.regex">value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">2</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_6}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_6}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2MzY2MzgzLCJpYXQiOjE1ODYzNjU0ODMsImp0aSI6IjQ0MjgifQ.JUiB_8hSqhIp2R7HxUo4vscR_Ooi3jQJSIWdB5j2Dko" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_6}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_6}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_6}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/showRfqCategoryRfqTypeProcCatBidPartList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/showRfqCategoryRfqTypeProcCatBidPartList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_6}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/showTenderListForBidder?tabId=live_tender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tabId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tabId</stringProp>
                  <stringProp name="Argument.value">live_tender</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/showTenderListForBidder</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_6}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_6}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/organization/loadOrgLevelInfoMap" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/organization/loadOrgLevelInfoMap</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_6}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/general/getHelpdeskTopicList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getHelpdeskTopicList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_6}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Download" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/generateQuotationExcel.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="templateIdList" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateIdList</stringProp>
                  <stringProp name="Argument.value">32526</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">14530</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currencyValue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">currencyValue</stringProp>
                  <stringProp name="Argument.value">BSD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bidderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bidderId</stringProp>
                  <stringProp name="Argument.value">3827</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">11557</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/generateQuotationExcel.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbuat.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="upload in general info" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/readQuotationExcel" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="file" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">file</stringProp>
                  <stringProp name="Argument.value">QuotationExcel.xlsx</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">14530</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currencyValue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">currencyValue</stringProp>
                  <stringProp name="Argument.value">BSD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bidderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bidderId</stringProp>
                  <stringProp name="Argument.value">3827</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeZone" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">timeZone</stringProp>
                  <stringProp name="Argument.value">-330</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">11557</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="proxyBidFlag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">proxyBidFlag</stringProp>
                  <stringProp name="Argument.value">N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/readQuotationExcel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=----WebKitFormBoundaryMkrn6K6wjSaHvH1X</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="attachements" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/getTenderNDADetails?tenderId=11557" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">11557</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderNDADetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls?quotationId=14530&amp;templategroupid=32522" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="templategroupid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">templategroupid</stringProp>
                  <stringProp name="Argument.value">32522</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">14530</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getTimestamp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getTimestamp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T &amp; C" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/getTenderNDADetails?tenderId=11557" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">11557</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderNDADetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls?quotationId=14530&amp;templategroupid=32523" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="templategroupid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">templategroupid</stringProp>
                  <stringProp name="Argument.value">32523</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">14530</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/getTenderNDADetails?tenderId=11557" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">11557</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderNDADetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getTimestamp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getTimestamp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TCT" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/getTenderNDADetails?tenderId=11557" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">11557</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderNDADetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls?quotationId=14530&amp;templategroupid=32520" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="templategroupid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">templategroupid</stringProp>
                  <stringProp name="Argument.value">32520</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">14530</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getTimestamp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getTimestamp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PRICE SHEET" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/getTenderNDADetails?tenderId=11557" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">11557</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderNDADetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls?quotationId=14530&amp;templategroupid=32526" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="templategroupid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">templategroupid</stringProp>
                  <stringProp name="Argument.value">32526</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">14530</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/getDraftQuotationTabFieldDtls</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/getTimestamp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getTimestamp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CLICK SUBMIT" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/insertDraftQuotation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;quotationId&quot;:14530,&quot;quotationRefNo&quot;:&quot;a1&quot;,&quot;tenderId&quot;:11557,&quot;currencyId&quot;:&quot;BSD&quot;,&quot;statusId&quot;:0,&quot;userDigitalcertId&quot;:0,&quot;createId&quot;:4428,&quot;createDate&quot;:1586508697000,&quot;updateId&quot;:4428,&quot;updateDate&quot;:1586508697000,&quot;isActive&quot;:1,&quot;bidduedate&quot;:1586525798255,&quot;bidpartno&quot;:1,&quot;tenderDescription&quot;:&quot;NEW TENDER&quot;,&quot;negotiatioFlag&quot;:null,&quot;negotiationId&quot;:null,&quot;isCorrigendum&quot;:&quot;No&quot;,&quot;signHash&quot;:&quot;&quot;,&quot;tenderResponseId&quot;:9991,&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;templates&quot;:[{&quot;templategroupId&quot;:32518,&quot;displayLayoutid&quot;:101,&quot;templateTypeId&quot;:101,&quot;templateCatId&quot;:1553,&quot;groupId&quot;:2564,&quot;templateId&quot;:1,&quot;shortName&quot;:&quot;quot_gen_info&quot;,&quot;longName&quot;:&quot;Quotation_General_Info&quot;,&quot;description&quot;:&quot;Quotation General Information&quot;,&quot;orgId&quot;:606,&quot;deptId&quot;:606,&quot;status&quot;:&quot;A&quot;,&quot;visibility&quot;:&quot;A&quot;,&quot;levelMapId&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;masterProcessId&quot;:2,&quot;subProcessId&quot;:18624,&quot;associatedBidPart&quot;:1,&quot;isFixedTemplate&quot;:&quot;Y&quot;,&quot;displaySequenceNo&quot;:1,&quot;mappedTemplateId&quot;:null,&quot;mappedTemplateShortName&quot;:&quot;&quot;,&quot;quotationDependencyFlag&quot;:&quot;N&quot;,&quot;subProcessName&quot;:&quot;General Information&quot;,&quot;mappedDepartmentId&quot;:null,&quot;templateFieldList&quot;:[{&quot;fieldtemplategroupId&quot;:251746,&quot;dataTypeId&quot;:100,&quot;templategroupId&quot;:32518,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:107,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;orgtenderid&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;orgtenderid&quot;,&quot;longName&quot;:&quot;Tender ID&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:1,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;1050&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false,&quot;checkBoxRoles&quot;:[],&quot;listValuesData&quot;:&quot;&quot;},{&quot;fieldtemplategroupId&quot;:251745,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32518,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:107,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;tender_desc&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;tender_desc&quot;,&quot;longName&quot;:&quot;Tender Description&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:2,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;NEW TENDER&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false,&quot;checkBoxRoles&quot;:[],&quot;listValuesData&quot;:&quot;&quot;},{&quot;fieldtemplategroupId&quot;:251744,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32518,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;pac_amt&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;pac_amt&quot;,&quot;longName&quot;:&quot;Probable Amount of the Contract&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:3,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;N&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:&quot;10000&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251743,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32518,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:106,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;tender_cat&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;tender_cat&quot;,&quot;longName&quot;:&quot;Tender Category&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;ITEM RATE LUMPSUM&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:4,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;ITEM RATE LUMPSUM&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251741,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32518,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;quote_ref_no&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;quote_ref_no&quot;,&quot;longName&quot;:&quot;Quotation Reference Code&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:5,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;a1&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251742,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32518,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:105,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;quote_currency&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;quote_currency&quot;,&quot;longName&quot;:&quot;Quotation Currency&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;BSD&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:6,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;BSD&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251740,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32518,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:105,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;excel_bidding&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;excel_bidding&quot;,&quot;longName&quot;:&quot;Excel Bidding&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;32520,32523,32526&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:7,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;32526&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false}],&quot;subProcess&quot;:null,&quot;identifystring&quot;:null,&quot;indexSerialNo&quot;:&quot;0&quot;,&quot;excelRowNumber&quot;:null,&quot;sorItemFlag&quot;:null,&quot;tabWiseApproverComment&quot;:null,&quot;bidableflag&quot;:null,&quot;mandatory_flag&quot;:null,&quot;mandatoryItem&quot;:null,&quot;prePopulatedRfqData&quot;:0,&quot;corrAttachmentFlag&quot;:null,&quot;bidSectionwiseApproverComment&quot;:null,&quot;bidSectionwiseInitiotorComment&quot;:null,&quot;itemParentCode&quot;:null,&quot;itemCode&quot;:null,&quot;templates&quot;:null,&quot;tenderTemplateGroupId&quot;:0,&quot;relTablePrimaryKeyId&quot;:0,&quot;tablePrimaryKeyId&quot;:150147,&quot;isValidated&quot;:&quot;E&quot;,&quot;modifiedFlag&quot;:false,&quot;itemActionFlag&quot;:null,&quot;bidderWiseActivityDoneStatus&quot;:null,&quot;excelUploadFlag&quot;:false,&quot;paymenttypeId&quot;:null,&quot;liveNodeItemFlag&quot;:&quot;Y&quot;,&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;isOriginal&quot;:null,&quot;isAssigned&quot;:null,&quot;sourceItemId&quot;:null,&quot;mainItemQty&quot;:null,&quot;dueDate&quot;:null,&quot;descriptionTC&quot;:null,&quot;isPaymentTerm&quot;:null,&quot;isSpecialFileDownload&quot;:null,&quot;itemQty&quot;:null,&quot;isvalidExcel&quot;:false,&quot;indentAttachmentFlag&quot;:null,&quot;isQualifiedQuotationItem&quot;:null,&quot;usedInCatalog&quot;:null,&quot;oldItemCode&quot;:null,&quot;fileSignHash&quot;:null,&quot;isDownloadPossible&quot;:null,&quot;filevisibleType&quot;:null,&quot;aceptedOn&quot;:null,&quot;qualDecTakenInLabelId&quot;:null,&quot;mainEstimatedPrice&quot;:null,&quot;isVisibleForMerge&quot;:true,&quot;currentSanctionObjectPrimaryKey&quot;:0,&quot;validationMessage&quot;:null,&quot;orderedQty&quot;:null,&quot;poConsumedqty&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;signBy&quot;:null,&quot;signDate&quot;:null,&quot;exemptionValue&quot;:null,&quot;quotationItemDecryptList&quot;:null,&quot;quotationDetailDecryptList&quot;:null,&quot;quotationFeesMasterDecryptList&quot;:null,&quot;quotAttachListMap&quot;:null,&quot;amendedQty&quot;:null,&quot;hashString&quot;:null,&quot;eoiquotationDetailDecryptList&quot;:null,&quot;eoiquotAttachListMap&quot;:null,&quot;showMinusIcon&quot;:true,&quot;isOpen&quot;:true}],&quot;quotationDetailList&quot;:null,&quot;quotationFeesList&quot;:null,&quot;quotationFeesMasterList&quot;:null,&quot;tendercat&quot;:0,&quot;pacAmt&quot;:null,&quot;quotAttachListMap&quot;:{},&quot;quotationItemList&quot;:null,&quot;tender&quot;:null,&quot;groupid&quot;:null,&quot;templategroupid&quot;:32518,&quot;orgtenderid&quot;:0,&quot;tenderCategory&quot;:null,&quot;vendorId&quot;:3827,&quot;negotiationStartdate&quot;:null,&quot;negotiationEnddate&quot;:null,&quot;draftQuotationCreatedDate&quot;:null,&quot;tenderListDto&quot;:null,&quot;bidSubmissionDate&quot;:null,&quot;quotationDetailTemplateIdList&quot;:[],&quot;quotationItemTemplateIdList&quot;:[],&quot;proxyBidFlag&quot;:null,&quot;vendorUserId&quot;:4428,&quot;lastSavedOnByBidder&quot;:1586508697000,&quot;tenderCurrency&quot;:null,&quot;reloadFlagForCorrig&quot;:false,&quot;draftQuotationFeesList&quot;:[],&quot;isRevisedOrImpactBid&quot;:&quot;N&quot;,&quot;isRevisedOrImpactBidApplicable&quot;:&quot;N&quot;,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;hashString&quot;:null,&quot;previousTemplates&quot;:null,&quot;quotationSubmittedDate&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/insertDraftQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/insertDraftQuotation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;quotationId&quot;:14530,&quot;quotationRefNo&quot;:&quot;a1&quot;,&quot;tenderId&quot;:11557,&quot;currencyId&quot;:&quot;BSD&quot;,&quot;statusId&quot;:0,&quot;userDigitalcertId&quot;:0,&quot;createId&quot;:4428,&quot;createDate&quot;:1586508697000,&quot;updateId&quot;:4428,&quot;updateDate&quot;:1586508697000,&quot;isActive&quot;:1,&quot;bidduedate&quot;:1586525798255,&quot;bidpartno&quot;:1,&quot;tenderDescription&quot;:&quot;NEW TENDER&quot;,&quot;negotiatioFlag&quot;:null,&quot;negotiationId&quot;:null,&quot;isCorrigendum&quot;:&quot;No&quot;,&quot;signHash&quot;:&quot;&quot;,&quot;tenderResponseId&quot;:9991,&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;templates&quot;:[{&quot;templategroupId&quot;:32523,&quot;displayLayoutid&quot;:101,&quot;templateTypeId&quot;:101,&quot;templateCatId&quot;:1553,&quot;groupId&quot;:2564,&quot;templateId&quot;:6,&quot;shortName&quot;:&quot;tril_quotation_headerrg&quot;,&quot;longName&quot;:&quot;TRIL_QUOTATION_HEADER RG&quot;,&quot;description&quot;:&quot;tril_quotation_header_RG&quot;,&quot;orgId&quot;:606,&quot;deptId&quot;:606,&quot;status&quot;:&quot;A&quot;,&quot;visibility&quot;:&quot;A&quot;,&quot;levelMapId&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;masterProcessId&quot;:2,&quot;subProcessId&quot;:18629,&quot;associatedBidPart&quot;:1,&quot;isFixedTemplate&quot;:&quot;N&quot;,&quot;displaySequenceNo&quot;:3,&quot;mappedTemplateId&quot;:null,&quot;mappedTemplateShortName&quot;:&quot;&quot;,&quot;quotationDependencyFlag&quot;:&quot;N&quot;,&quot;subProcessName&quot;:&quot;Terms and Conditions&quot;,&quot;mappedDepartmentId&quot;:null,&quot;templateFieldList&quot;:[{&quot;fieldtemplategroupId&quot;:251765,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf1&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;UNLOADING&quot;,&quot;longName&quot;:&quot;UNLOADING&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:1,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251764,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf2&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;DISPATCH_LOCATION&quot;,&quot;longName&quot;:&quot;DISPATCH LOCATION&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:2,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251766,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf3&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;DELIVERY_TIME&quot;,&quot;longName&quot;:&quot;DELIVERY TIME&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:3,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251767,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf4&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Price_Validity&quot;,&quot;longName&quot;:&quot;PRICE VALIDITY&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:4,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251768,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf5&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Warranty_Guarantee&quot;,&quot;longName&quot;:&quot;WARRANTY/ GUARANTEE&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:500,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:5,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251769,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf6&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;paymenttermsrfq&quot;,&quot;longName&quot;:&quot;PAYMENT TERMS AS PER RFQ&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:6,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;={{term_conditions.Payment_Terms}}&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251770,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:106,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf7&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;PaymentTerms&quot;,&quot;longName&quot;:&quot;PAYMENT TERMS (ACCEPTANCE)&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:500,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;ACCEPTED AS PER RFQ,NOT ACCEPTED&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:7,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;ACCEPTED AS PER RFQ&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:[{&quot;fieldValidationId&quot;:64923,&quot;groupId&quot;:2564,&quot;templateGroupId&quot;:32523,&quot;fieldTemplateGroupId&quot;:251770,&quot;fieldValidationTypeId&quot;:102,&quot;fieldOperatorId&quot;:103,&quot;dependingTemplateGroupId&quot;:32523,&quot;dependingFieldTemplateGroupId&quot;:251771,&quot;fieldValidationActionId&quot;:102,&quot;serialNo&quot;:1,&quot;fieldValue&quot;:&quot;ACCEPTED AS PER RFQ&quot;,&quot;message&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldShortName&quot;:&quot;PaymentTerms&quot;,&quot;dependingFieldShortName&quot;:&quot;PAYMENT&quot;,&quot;templateShortName&quot;:&quot;tril_quotation_headerrg&quot;,&quot;dependingTemplateShortName&quot;:&quot;tril_quotation_headerrg&quot;},{&quot;fieldValidationId&quot;:64924,&quot;groupId&quot;:2564,&quot;templateGroupId&quot;:32523,&quot;fieldTemplateGroupId&quot;:251770,&quot;fieldValidationTypeId&quot;:102,&quot;fieldOperatorId&quot;:103,&quot;dependingTemplateGroupId&quot;:32523,&quot;dependingFieldTemplateGroupId&quot;:251771,&quot;fieldValidationActionId&quot;:101,&quot;serialNo&quot;:2,&quot;fieldValue&quot;:&quot;NOT ACCEPTED&quot;,&quot;message&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldShortName&quot;:&quot;PaymentTerms&quot;,&quot;dependingFieldShortName&quot;:&quot;PAYMENT&quot;,&quot;templateShortName&quot;:&quot;tril_quotation_headerrg&quot;,&quot;dependingTemplateShortName&quot;:&quot;tril_quotation_headerrg&quot;}],&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251771,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf8&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;PAYMENT&quot;,&quot;longName&quot;:&quot;IF PAYMENT NOT ACCEPTED&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:8,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;N&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251763,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32523,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf9&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Remark&quot;,&quot;longName&quot;:&quot;REMARKS&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:9,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false}],&quot;subProcess&quot;:null,&quot;identifystring&quot;:null,&quot;indexSerialNo&quot;:null,&quot;excelRowNumber&quot;:null,&quot;sorItemFlag&quot;:null,&quot;tabWiseApproverComment&quot;:null,&quot;bidableflag&quot;:null,&quot;mandatory_flag&quot;:null,&quot;mandatoryItem&quot;:null,&quot;prePopulatedRfqData&quot;:0,&quot;corrAttachmentFlag&quot;:null,&quot;bidSectionwiseApproverComment&quot;:null,&quot;bidSectionwiseInitiotorComment&quot;:null,&quot;itemParentCode&quot;:null,&quot;itemCode&quot;:null,&quot;templates&quot;:null,&quot;tenderTemplateGroupId&quot;:0,&quot;relTablePrimaryKeyId&quot;:0,&quot;tablePrimaryKeyId&quot;:0,&quot;isValidated&quot;:&quot;E&quot;,&quot;modifiedFlag&quot;:false,&quot;itemActionFlag&quot;:null,&quot;bidderWiseActivityDoneStatus&quot;:null,&quot;excelUploadFlag&quot;:false,&quot;paymenttypeId&quot;:null,&quot;liveNodeItemFlag&quot;:&quot;Y&quot;,&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;isOriginal&quot;:null,&quot;isAssigned&quot;:null,&quot;sourceItemId&quot;:null,&quot;mainItemQty&quot;:null,&quot;dueDate&quot;:null,&quot;descriptionTC&quot;:null,&quot;isPaymentTerm&quot;:null,&quot;isSpecialFileDownload&quot;:null,&quot;itemQty&quot;:null,&quot;isvalidExcel&quot;:false,&quot;indentAttachmentFlag&quot;:null,&quot;isQualifiedQuotationItem&quot;:null,&quot;usedInCatalog&quot;:null,&quot;oldItemCode&quot;:null,&quot;fileSignHash&quot;:null,&quot;isDownloadPossible&quot;:null,&quot;filevisibleType&quot;:null,&quot;aceptedOn&quot;:null,&quot;qualDecTakenInLabelId&quot;:null,&quot;mainEstimatedPrice&quot;:null,&quot;isVisibleForMerge&quot;:true,&quot;currentSanctionObjectPrimaryKey&quot;:0,&quot;validationMessage&quot;:null,&quot;orderedQty&quot;:null,&quot;poConsumedqty&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;signBy&quot;:null,&quot;signDate&quot;:null,&quot;exemptionValue&quot;:null,&quot;quotationItemDecryptList&quot;:null,&quot;quotationDetailDecryptList&quot;:null,&quot;quotationFeesMasterDecryptList&quot;:null,&quot;quotAttachListMap&quot;:null,&quot;amendedQty&quot;:null,&quot;hashString&quot;:null,&quot;eoiquotAttachListMap&quot;:null,&quot;eoiquotationDetailDecryptList&quot;:null,&quot;showMinusIcon&quot;:true,&quot;isOpen&quot;:true}],&quot;quotationDetailList&quot;:null,&quot;quotationFeesList&quot;:null,&quot;quotationFeesMasterList&quot;:null,&quot;tendercat&quot;:0,&quot;pacAmt&quot;:null,&quot;quotAttachListMap&quot;:{},&quot;quotationItemList&quot;:null,&quot;tender&quot;:null,&quot;groupid&quot;:null,&quot;templategroupid&quot;:32518,&quot;orgtenderid&quot;:0,&quot;tenderCategory&quot;:null,&quot;vendorId&quot;:3827,&quot;negotiationStartdate&quot;:null,&quot;negotiationEnddate&quot;:null,&quot;draftQuotationCreatedDate&quot;:null,&quot;tenderListDto&quot;:null,&quot;bidSubmissionDate&quot;:null,&quot;quotationDetailTemplateIdList&quot;:[],&quot;quotationItemTemplateIdList&quot;:[],&quot;proxyBidFlag&quot;:null,&quot;vendorUserId&quot;:4428,&quot;lastSavedOnByBidder&quot;:1586508697000,&quot;tenderCurrency&quot;:null,&quot;reloadFlagForCorrig&quot;:false,&quot;draftQuotationFeesList&quot;:[],&quot;isRevisedOrImpactBid&quot;:&quot;N&quot;,&quot;isRevisedOrImpactBidApplicable&quot;:&quot;N&quot;,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;hashString&quot;:null,&quot;previousTemplates&quot;:null,&quot;quotationSubmittedDate&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/insertDraftQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/insertDraftQuotation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;quotationId&quot;:14530,&quot;quotationRefNo&quot;:&quot;a1&quot;,&quot;tenderId&quot;:11557,&quot;currencyId&quot;:&quot;BSD&quot;,&quot;statusId&quot;:0,&quot;userDigitalcertId&quot;:0,&quot;createId&quot;:4428,&quot;createDate&quot;:1586508697000,&quot;updateId&quot;:4428,&quot;updateDate&quot;:1586508697000,&quot;isActive&quot;:1,&quot;bidduedate&quot;:1586525798255,&quot;bidpartno&quot;:1,&quot;tenderDescription&quot;:&quot;NEW TENDER&quot;,&quot;negotiatioFlag&quot;:null,&quot;negotiationId&quot;:null,&quot;isCorrigendum&quot;:&quot;No&quot;,&quot;signHash&quot;:&quot;&quot;,&quot;tenderResponseId&quot;:9991,&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;templates&quot;:[{&quot;templategroupId&quot;:32520,&quot;displayLayoutid&quot;:102,&quot;templateTypeId&quot;:101,&quot;templateCatId&quot;:1553,&quot;groupId&quot;:2564,&quot;templateId&quot;:3,&quot;shortName&quot;:&quot;qt_technical_specifi&quot;,&quot;longName&quot;:&quot;QH_TECHNICAL  SPECIFICATION RG&quot;,&quot;description&quot;:&quot;TECHNICAL  SPECIFICATION&quot;,&quot;orgId&quot;:606,&quot;deptId&quot;:606,&quot;status&quot;:&quot;A&quot;,&quot;visibility&quot;:&quot;A&quot;,&quot;levelMapId&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;masterProcessId&quot;:2,&quot;subProcessId&quot;:18652,&quot;associatedBidPart&quot;:1,&quot;isFixedTemplate&quot;:&quot;N&quot;,&quot;displaySequenceNo&quot;:4,&quot;mappedTemplateId&quot;:null,&quot;mappedTemplateShortName&quot;:&quot;&quot;,&quot;quotationDependencyFlag&quot;:&quot;N&quot;,&quot;subProcessName&quot;:&quot;Technical Compliance Table&quot;,&quot;mappedDepartmentId&quot;:null,&quot;templateFieldList&quot;:[{&quot;fieldtemplategroupId&quot;:251753,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32520,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf1&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;ITEM_NO&quot;,&quot;longName&quot;:&quot;ITEM_NO&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:1,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;={{technical_specification.ITEM_NO}}&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;ITEM2&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251754,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32520,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf2&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;ITEM_SPECIFICATION&quot;,&quot;longName&quot;:&quot;ITEM_SPECIFICATION&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:2,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;={{technical_specification.ITEM_SPECIFICATION}}&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;SPECIFICATION&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251751,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32520,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf3&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;ITEM_QTY&quot;,&quot;longName&quot;:&quot;ITEM QTY&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:500,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:3,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;={{technical_specification.ITEM_QTY}}&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;2&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:251752,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32520,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf4&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;RESPONSE&quot;,&quot;longName&quot;:&quot;RESPONSE&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:4,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false}],&quot;subProcess&quot;:null,&quot;identifystring&quot;:null,&quot;indexSerialNo&quot;:&quot;1&quot;,&quot;excelRowNumber&quot;:null,&quot;sorItemFlag&quot;:null,&quot;tabWiseApproverComment&quot;:null,&quot;bidableflag&quot;:null,&quot;mandatory_flag&quot;:null,&quot;mandatoryItem&quot;:null,&quot;prePopulatedRfqData&quot;:1,&quot;corrAttachmentFlag&quot;:null,&quot;bidSectionwiseApproverComment&quot;:null,&quot;bidSectionwiseInitiotorComment&quot;:null,&quot;itemParentCode&quot;:null,&quot;itemCode&quot;:null,&quot;templates&quot;:null,&quot;tenderTemplateGroupId&quot;:0,&quot;relTablePrimaryKeyId&quot;:0,&quot;tablePrimaryKeyId&quot;:0,&quot;isValidated&quot;:&quot;E&quot;,&quot;modifiedFlag&quot;:false,&quot;itemActionFlag&quot;:null,&quot;bidderWiseActivityDoneStatus&quot;:null,&quot;excelUploadFlag&quot;:false,&quot;paymenttypeId&quot;:null,&quot;liveNodeItemFlag&quot;:&quot;Y&quot;,&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;isOriginal&quot;:null,&quot;isAssigned&quot;:null,&quot;sourceItemId&quot;:null,&quot;mainItemQty&quot;:null,&quot;dueDate&quot;:null,&quot;descriptionTC&quot;:null,&quot;isPaymentTerm&quot;:null,&quot;isSpecialFileDownload&quot;:null,&quot;itemQty&quot;:null,&quot;isvalidExcel&quot;:false,&quot;indentAttachmentFlag&quot;:null,&quot;isQualifiedQuotationItem&quot;:null,&quot;usedInCatalog&quot;:null,&quot;oldItemCode&quot;:null,&quot;fileSignHash&quot;:null,&quot;isDownloadPossible&quot;:null,&quot;filevisibleType&quot;:null,&quot;aceptedOn&quot;:null,&quot;qualDecTakenInLabelId&quot;:null,&quot;mainEstimatedPrice&quot;:null,&quot;isVisibleForMerge&quot;:true,&quot;currentSanctionObjectPrimaryKey&quot;:0,&quot;validationMessage&quot;:null,&quot;orderedQty&quot;:null,&quot;poConsumedqty&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;signBy&quot;:null,&quot;signDate&quot;:null,&quot;exemptionValue&quot;:null,&quot;quotationItemDecryptList&quot;:null,&quot;quotationDetailDecryptList&quot;:null,&quot;quotationFeesMasterDecryptList&quot;:null,&quot;quotAttachListMap&quot;:null,&quot;amendedQty&quot;:null,&quot;hashString&quot;:null,&quot;eoiquotAttachListMap&quot;:null,&quot;eoiquotationDetailDecryptList&quot;:null,&quot;showMinusIcon&quot;:true,&quot;isOpen&quot;:true}],&quot;quotationDetailList&quot;:null,&quot;quotationFeesList&quot;:null,&quot;quotationFeesMasterList&quot;:null,&quot;tendercat&quot;:0,&quot;pacAmt&quot;:null,&quot;quotAttachListMap&quot;:{},&quot;quotationItemList&quot;:null,&quot;tender&quot;:null,&quot;groupid&quot;:null,&quot;templategroupid&quot;:32518,&quot;orgtenderid&quot;:0,&quot;tenderCategory&quot;:null,&quot;vendorId&quot;:3827,&quot;negotiationStartdate&quot;:null,&quot;negotiationEnddate&quot;:null,&quot;draftQuotationCreatedDate&quot;:null,&quot;tenderListDto&quot;:null,&quot;bidSubmissionDate&quot;:null,&quot;quotationDetailTemplateIdList&quot;:[],&quot;quotationItemTemplateIdList&quot;:[],&quot;proxyBidFlag&quot;:null,&quot;vendorUserId&quot;:4428,&quot;lastSavedOnByBidder&quot;:1586508697000,&quot;tenderCurrency&quot;:null,&quot;reloadFlagForCorrig&quot;:false,&quot;draftQuotationFeesList&quot;:[],&quot;isRevisedOrImpactBid&quot;:&quot;N&quot;,&quot;isRevisedOrImpactBidApplicable&quot;:&quot;N&quot;,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;hashString&quot;:null,&quot;previousTemplates&quot;:null,&quot;quotationSubmittedDate&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/insertDraftQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/insertDraftQuotation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;quotationId&quot;:14530,&quot;quotationRefNo&quot;:&quot;a1&quot;,&quot;tenderId&quot;:11557,&quot;currencyId&quot;:&quot;BSD&quot;,&quot;statusId&quot;:0,&quot;userDigitalcertId&quot;:0,&quot;createId&quot;:4428,&quot;createDate&quot;:1586508697000,&quot;updateId&quot;:4428,&quot;updateDate&quot;:1586508697000,&quot;isActive&quot;:1,&quot;bidduedate&quot;:1586525798255,&quot;bidpartno&quot;:1,&quot;tenderDescription&quot;:&quot;NEW TENDER&quot;,&quot;negotiatioFlag&quot;:null,&quot;negotiationId&quot;:null,&quot;isCorrigendum&quot;:&quot;No&quot;,&quot;signHash&quot;:&quot;&quot;,&quot;tenderResponseId&quot;:9991,&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;templates&quot;:[{&quot;templategroupId&quot;:32526,&quot;displayLayoutid&quot;:102,&quot;templateTypeId&quot;:102,&quot;templateCatId&quot;:1553,&quot;groupId&quot;:2564,&quot;templateId&quot;:9,&quot;shortName&quot;:&quot;qi_supply_01&quot;,&quot;longName&quot;:&quot;QI General Supply RG&quot;,&quot;description&quot;:&quot;qi_supply&quot;,&quot;orgId&quot;:606,&quot;deptId&quot;:606,&quot;status&quot;:&quot;A&quot;,&quot;visibility&quot;:&quot;A&quot;,&quot;levelMapId&quot;:null,&quot;createid&quot;:4428,&quot;createdate&quot;:1586508865000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;masterProcessId&quot;:2,&quot;subProcessId&quot;:18675,&quot;associatedBidPart&quot;:2,&quot;isFixedTemplate&quot;:&quot;N&quot;,&quot;displaySequenceNo&quot;:5,&quot;mappedTemplateId&quot;:32527,&quot;mappedTemplateShortName&quot;:&quot;rfq_item_rg&quot;,&quot;quotationDependencyFlag&quot;:&quot;N&quot;,&quot;subProcessName&quot;:&quot;Price Sheet&quot;,&quot;mappedDepartmentId&quot;:null,&quot;templateFieldList&quot;:[{&quot;fieldtemplategroupId&quot;:251791,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;item_code&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;item_code&quot;,&quot;longName&quot;:&quot;Item  No&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:1,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;100&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251795,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;item_name&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;item_name&quot;,&quot;longName&quot;:&quot;Item Description&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:2,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;Test&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251786,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:106,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;uom&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;uom&quot;,&quot;longName&quot;:&quot;U.O.M&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;194,192,141,142,144,143,145,146,216,4,5,6,8,7,20,9,10,19,18,21,12,22,24,16,13,15,220,14,17,28,11,32,31,34,74,33,36,35,37,38,40,39,45,44,43,223,23,42,51,53,52,46,54,61,49,57,58,59,56,50,47,60,48,63,62,70,66,67,69,71,68,199,72,73,76,75,77,80,78,219,79,81,110,93,87,86,98,94,92,97,99,96,88,95,84,100,101,102,104,226,103,82,83,111,89,107,90,112,85,108,109,91,113,203,114,116,117,119,115,120,118,Lump sump unit,131,133,169,168,134,227,228,229,25,26,27,124,123,121,125,158,160,130,159,140,132,127,151,231,167,148,155,152,150,161,154,162,232,29,122,126,164,171,170,136,153,137,163,165,138,135,149,166,139,147,156,128,129,172,174,106,176,177,178,175,217,218,180,201,184,181,186,190,191,195,183,182,197,202,187,188,189,185,64,196,179,198,200,193,205,105,204,206,207,157,55,209,208,211,210,173,212,213,221,214,215,224,222,225,230,234,235,238,237,245,239,240,241,242,236,243,244,246,248,247,249,250,41,65,251,233,30,252&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:3,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;%&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251787,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;item_qty&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;item_qty&quot;,&quot;longName&quot;:&quot;Quantity&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;##.##&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:4,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;1&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:100,&quot;isAggregation&quot;:&quot;Y&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251788,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;sor_rate&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;sor_rate&quot;,&quot;longName&quot;:&quot;SOR Rate&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:5,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;N&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251785,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;estimat_price&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;estimat_price&quot;,&quot;longName&quot;:&quot;Estimated Price&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:6,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;N&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251789,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf1&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;QI_Basic_rate&quot;,&quot;longName&quot;:&quot;Rate&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;##.##&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;Y&quot;,&quot;displayOrder&quot;:7,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;5&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251783,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf2&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Basic_total&quot;,&quot;longName&quot;:&quot;Amount&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;Y&quot;,&quot;displayOrder&quot;:8,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;=Round({{qi_supply_01.item_qty}}*{{qi_supply_01.QI_Basic_rate}},2)&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;5&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:100,&quot;isAggregation&quot;:&quot;Y&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251784,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf3&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;FPUV&quot;,&quot;longName&quot;:&quot;Freight per unit value&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;Y&quot;,&quot;displayOrder&quot;:9,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;5&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251790,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf4&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Freight_total&quot;,&quot;longName&quot;:&quot;Total Freight&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:10,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;=Round({{qi_supply_01.FPUV}}*{{qi_supply_01.item_qty}},2)&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;5&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:100,&quot;isAggregation&quot;:&quot;Y&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251792,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf5&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;gstp&quot;,&quot;longName&quot;:&quot;GST Percentage&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:11,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;5&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251793,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf6&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;gstv&quot;,&quot;longName&quot;:&quot;GST Value&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;Y&quot;,&quot;displayOrder&quot;:12,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;=({{qi_supply_01.Basic_total}}+{{qi_supply_01.Freight_total}})*{{qi_supply_01.gstp}}%&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;0.5&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:100,&quot;isAggregation&quot;:&quot;Y&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;N&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251794,&quot;dataTypeId&quot;:102,&quot;templategroupId&quot;:32526,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf7&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Grand_total&quot;,&quot;longName&quot;:&quot;Total&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;Y&quot;,&quot;displayOrder&quot;:13,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;={{qi_supply_01.Basic_total}}+{{qi_supply_01.Freight_total}}+{{qi_supply_01.gstv}}&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;10.5&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:100,&quot;isAggregation&quot;:&quot;Y&quot;,&quot;bidValueFlag&quot;:&quot;Y&quot;,&quot;itemWiseRankingFlag&quot;:&quot;Y&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null}],&quot;subProcess&quot;:null,&quot;identifystring&quot;:null,&quot;indexSerialNo&quot;:&quot;1&quot;,&quot;excelRowNumber&quot;:null,&quot;sorItemFlag&quot;:null,&quot;tabWiseApproverComment&quot;:null,&quot;bidableflag&quot;:&quot;Y&quot;,&quot;mandatory_flag&quot;:&quot;Yes&quot;,&quot;mandatoryItem&quot;:null,&quot;prePopulatedRfqData&quot;:0,&quot;corrAttachmentFlag&quot;:null,&quot;bidSectionwiseApproverComment&quot;:null,&quot;bidSectionwiseInitiotorComment&quot;:null,&quot;itemParentCode&quot;:&quot;0&quot;,&quot;itemCode&quot;:&quot;100&quot;,&quot;templates&quot;:null,&quot;tenderTemplateGroupId&quot;:32527,&quot;relTablePrimaryKeyId&quot;:71805,&quot;tablePrimaryKeyId&quot;:115148,&quot;isValidated&quot;:&quot;V&quot;,&quot;modifiedFlag&quot;:false,&quot;itemActionFlag&quot;:null,&quot;bidderWiseActivityDoneStatus&quot;:null,&quot;excelUploadFlag&quot;:true,&quot;paymenttypeId&quot;:null,&quot;liveNodeItemFlag&quot;:&quot;Y&quot;,&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;isOriginal&quot;:null,&quot;isAssigned&quot;:null,&quot;sourceItemId&quot;:null,&quot;mainItemQty&quot;:null,&quot;dueDate&quot;:null,&quot;descriptionTC&quot;:null,&quot;isPaymentTerm&quot;:null,&quot;isSpecialFileDownload&quot;:null,&quot;itemQty&quot;:null,&quot;isvalidExcel&quot;:false,&quot;indentAttachmentFlag&quot;:null,&quot;isQualifiedQuotationItem&quot;:null,&quot;usedInCatalog&quot;:null,&quot;oldItemCode&quot;:null,&quot;fileSignHash&quot;:null,&quot;isDownloadPossible&quot;:null,&quot;filevisibleType&quot;:null,&quot;aceptedOn&quot;:null,&quot;qualDecTakenInLabelId&quot;:null,&quot;mainEstimatedPrice&quot;:null,&quot;isVisibleForMerge&quot;:true,&quot;currentSanctionObjectPrimaryKey&quot;:0,&quot;validationMessage&quot;:null,&quot;orderedQty&quot;:null,&quot;poConsumedqty&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;signBy&quot;:null,&quot;signDate&quot;:null,&quot;exemptionValue&quot;:null,&quot;quotationItemDecryptList&quot;:null,&quot;quotationDetailDecryptList&quot;:null,&quot;quotationFeesMasterDecryptList&quot;:null,&quot;quotAttachListMap&quot;:null,&quot;amendedQty&quot;:null,&quot;hashString&quot;:null,&quot;eoiquotAttachListMap&quot;:null,&quot;eoiquotationDetailDecryptList&quot;:null,&quot;showMinusIcon&quot;:true,&quot;isOpen&quot;:true}],&quot;quotationDetailList&quot;:null,&quot;quotationFeesList&quot;:null,&quot;quotationFeesMasterList&quot;:null,&quot;tendercat&quot;:0,&quot;pacAmt&quot;:null,&quot;quotAttachListMap&quot;:{},&quot;quotationItemList&quot;:null,&quot;tender&quot;:null,&quot;groupid&quot;:null,&quot;templategroupid&quot;:32518,&quot;orgtenderid&quot;:0,&quot;tenderCategory&quot;:null,&quot;vendorId&quot;:3827,&quot;negotiationStartdate&quot;:null,&quot;negotiationEnddate&quot;:null,&quot;draftQuotationCreatedDate&quot;:null,&quot;tenderListDto&quot;:null,&quot;bidSubmissionDate&quot;:null,&quot;quotationDetailTemplateIdList&quot;:[],&quot;quotationItemTemplateIdList&quot;:[],&quot;proxyBidFlag&quot;:null,&quot;vendorUserId&quot;:4428,&quot;lastSavedOnByBidder&quot;:1586508697000,&quot;tenderCurrency&quot;:null,&quot;reloadFlagForCorrig&quot;:false,&quot;draftQuotationFeesList&quot;:[],&quot;isRevisedOrImpactBid&quot;:&quot;N&quot;,&quot;isRevisedOrImpactBidApplicable&quot;:&quot;N&quot;,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;hashString&quot;:null,&quot;previousTemplates&quot;:null,&quot;quotationSubmittedDate&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/insertDraftQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/insertDraftQuotation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;quotationId&quot;:14530,&quot;quotationRefNo&quot;:&quot;a1&quot;,&quot;tenderId&quot;:11557,&quot;currencyId&quot;:&quot;BSD&quot;,&quot;statusId&quot;:0,&quot;userDigitalcertId&quot;:0,&quot;createId&quot;:4428,&quot;createDate&quot;:1586508697000,&quot;updateId&quot;:4428,&quot;updateDate&quot;:1586508697000,&quot;isActive&quot;:1,&quot;bidduedate&quot;:1586525798255,&quot;bidpartno&quot;:1,&quot;tenderDescription&quot;:&quot;NEW TENDER&quot;,&quot;negotiatioFlag&quot;:null,&quot;negotiationId&quot;:null,&quot;isCorrigendum&quot;:&quot;No&quot;,&quot;signHash&quot;:&quot;&quot;,&quot;tenderResponseId&quot;:9991,&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;templates&quot;:[{&quot;templategroupId&quot;:32522,&quot;displayLayoutid&quot;:102,&quot;templateTypeId&quot;:101,&quot;templateCatId&quot;:1553,&quot;groupId&quot;:2564,&quot;templateId&quot;:5,&quot;shortName&quot;:&quot;qout_attachment&quot;,&quot;longName&quot;:&quot;qtnattachment_fixed_dataset&quot;,&quot;description&quot;:&quot;This is for  quotation attachment&quot;,&quot;orgId&quot;:606,&quot;deptId&quot;:606,&quot;status&quot;:&quot;A&quot;,&quot;visibility&quot;:&quot;A&quot;,&quot;levelMapId&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;masterProcessId&quot;:2,&quot;subProcessId&quot;:18627,&quot;associatedBidPart&quot;:1,&quot;isFixedTemplate&quot;:&quot;Y&quot;,&quot;displaySequenceNo&quot;:2,&quot;mappedTemplateId&quot;:null,&quot;mappedTemplateShortName&quot;:&quot;&quot;,&quot;quotationDependencyFlag&quot;:&quot;N&quot;,&quot;subProcessName&quot;:&quot;Attachments&quot;,&quot;mappedDepartmentId&quot;:null,&quot;templateFieldList&quot;:[{&quot;fieldtemplategroupId&quot;:251760,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32522,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;label&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;label&quot;,&quot;longName&quot;:&quot;Label&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:1,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251761,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:32522,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;file_name&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;file_name&quot;,&quot;longName&quot;:&quot;File Name&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:2,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:251762,&quot;dataTypeId&quot;:104,&quot;templategroupId&quot;:32522,&quot;groupId&quot;:2564,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:108,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;attach_file&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;attach_file&quot;,&quot;longName&quot;:&quot;Attach File&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1586193035000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1586193042000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:3,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;restrictIncreaseAtNegotiation&quot;:&quot;N&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null}],&quot;subProcess&quot;:null,&quot;identifystring&quot;:null,&quot;indexSerialNo&quot;:null,&quot;excelRowNumber&quot;:null,&quot;sorItemFlag&quot;:null,&quot;tabWiseApproverComment&quot;:null,&quot;bidableflag&quot;:null,&quot;mandatory_flag&quot;:null,&quot;mandatoryItem&quot;:null,&quot;prePopulatedRfqData&quot;:0,&quot;corrAttachmentFlag&quot;:null,&quot;bidSectionwiseApproverComment&quot;:null,&quot;bidSectionwiseInitiotorComment&quot;:null,&quot;itemParentCode&quot;:null,&quot;itemCode&quot;:null,&quot;templates&quot;:null,&quot;tenderTemplateGroupId&quot;:0,&quot;relTablePrimaryKeyId&quot;:0,&quot;tablePrimaryKeyId&quot;:0,&quot;isValidated&quot;:null,&quot;modifiedFlag&quot;:false,&quot;itemActionFlag&quot;:null,&quot;bidderWiseActivityDoneStatus&quot;:null,&quot;excelUploadFlag&quot;:false,&quot;paymenttypeId&quot;:null,&quot;liveNodeItemFlag&quot;:&quot;Y&quot;,&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;isOriginal&quot;:null,&quot;isAssigned&quot;:null,&quot;sourceItemId&quot;:null,&quot;mainItemQty&quot;:null,&quot;dueDate&quot;:null,&quot;descriptionTC&quot;:null,&quot;isPaymentTerm&quot;:null,&quot;isSpecialFileDownload&quot;:null,&quot;itemQty&quot;:null,&quot;isvalidExcel&quot;:false,&quot;indentAttachmentFlag&quot;:null,&quot;isQualifiedQuotationItem&quot;:null,&quot;usedInCatalog&quot;:null,&quot;oldItemCode&quot;:null,&quot;fileSignHash&quot;:null,&quot;isDownloadPossible&quot;:null,&quot;filevisibleType&quot;:null,&quot;aceptedOn&quot;:null,&quot;qualDecTakenInLabelId&quot;:null,&quot;mainEstimatedPrice&quot;:null,&quot;isVisibleForMerge&quot;:true,&quot;currentSanctionObjectPrimaryKey&quot;:0,&quot;validationMessage&quot;:null,&quot;orderedQty&quot;:null,&quot;poConsumedqty&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;signBy&quot;:null,&quot;signDate&quot;:null,&quot;exemptionValue&quot;:null,&quot;quotationItemDecryptList&quot;:null,&quot;quotationDetailDecryptList&quot;:null,&quot;quotationFeesMasterDecryptList&quot;:null,&quot;quotAttachListMap&quot;:null,&quot;amendedQty&quot;:null,&quot;hashString&quot;:null,&quot;eoiquotationDetailDecryptList&quot;:null,&quot;eoiquotAttachListMap&quot;:null,&quot;showMinusIcon&quot;:true,&quot;isOpen&quot;:true}],&quot;quotationDetailList&quot;:null,&quot;quotationFeesList&quot;:null,&quot;quotationFeesMasterList&quot;:null,&quot;tendercat&quot;:0,&quot;pacAmt&quot;:null,&quot;quotAttachListMap&quot;:{&quot;quotationattachment&quot;:{&quot;quotationattachment&quot;:[]},&quot;tenderattachment&quot;:{&quot;tenderattachment&quot;:[{&quot;attachmentid&quot;:34371,&quot;tenderbidderattachid&quot;:9970,&quot;tenderid&quot;:11557,&quot;quotationid&quot;:14530,&quot;templategroupid&quot;:32522,&quot;label&quot;:&quot;Dummy&quot;,&quot;fileName&quot;:&quot;Receipt-5.jpg&quot;,&quot;targetsystem&quot;:&quot;32521\\1586507557868_Receipt-5.jpg&quot;,&quot;filesize&quot;:null,&quot;supportingdoc&quot;:null,&quot;mandatoryflag&quot;:null,&quot;exemptionflag&quot;:null,&quot;attachgroup&quot;:null,&quot;attachType&quot;:null,&quot;status&quot;:&quot;1&quot;,&quot;attachmentcategory&quot;:&quot;tenderattachment&quot;,&quot;createId&quot;:4428,&quot;createDate&quot;:1586508897000,&quot;updateId&quot;:4428,&quot;updateDate&quot;:1586508897000,&quot;isActive&quot;:1,&quot;bidderRemarks&quot;:null,&quot;templateShortName&quot;:null,&quot;signHash&quot;:null,&quot;userDigitalCertId&quot;:0,&quot;dscPublicKey&quot;:null,&quot;fileVisible&quot;:&quot;BOTH&quot;,&quot;dscCertString&quot;:null,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;exemptionFlagValue&quot;:null,&quot;remarks&quot;:null,&quot;hashString&quot;:null,&quot;acceptanceFlag&quot;:null,&quot;buyerRemarks&quot;:null}]}},&quot;quotationItemList&quot;:null,&quot;tender&quot;:null,&quot;groupid&quot;:null,&quot;templategroupid&quot;:32518,&quot;orgtenderid&quot;:0,&quot;tenderCategory&quot;:null,&quot;vendorId&quot;:3827,&quot;negotiationStartdate&quot;:null,&quot;negotiationEnddate&quot;:null,&quot;draftQuotationCreatedDate&quot;:null,&quot;tenderListDto&quot;:null,&quot;bidSubmissionDate&quot;:null,&quot;quotationDetailTemplateIdList&quot;:[],&quot;quotationItemTemplateIdList&quot;:[],&quot;proxyBidFlag&quot;:null,&quot;vendorUserId&quot;:4428,&quot;lastSavedOnByBidder&quot;:1586508697000,&quot;tenderCurrency&quot;:null,&quot;reloadFlagForCorrig&quot;:false,&quot;draftQuotationFeesList&quot;:[],&quot;isRevisedOrImpactBid&quot;:&quot;N&quot;,&quot;isRevisedOrImpactBidApplicable&quot;:&quot;N&quot;,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;hashString&quot;:null,&quot;previousTemplates&quot;:null,&quot;quotationSubmittedDate&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/insertDraftQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/checkCancelledTender?tenderId=11557" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">11557</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/checkCancelledTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/checkWithdrawBidList?tenderId=11557" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">11557</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/checkWithdrawBidList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/checkEligiblityForBid?tenderId=11557" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">11557</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/checkEligiblityForBid</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/getQuotationDetails?quotationId=14530" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">14530</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/getQuotationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/tender/getTenderNDADetails?tenderId=11557" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">11557</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderNDADetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="FINAL SUBMIT" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/vendor/checkVendorStatus?bidderId=3827" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="bidderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bidderId</stringProp>
                  <stringProp name="Argument.value">3827</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/vendor/checkVendorStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CONFIRM" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/submitQuotation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="dscCertString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dscCertString</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dscPublicKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dscPublicKey</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">14530</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationsignHash" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationsignHash</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="signUserId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">signUserId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="signUserDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">signUserDate</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/submitQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/updateAuthorizedBidStatusForQuotation?quotationId=14530&amp;pkiEnabled=N" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">14530</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pkiEnabled" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pkiEnabled</stringProp>
                  <stringProp name="Argument.value">N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/updateAuthorizedBidStatusForQuotation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OK" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/quotation/listTender.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5NTkwLCJpYXQiOjE1ODY1MDg2OTAsImp0aSI6IjQ0MjgifQ.l6VBYH8Vk_x2ZUw10mqP-78atM-QWBK9UZwLJ3RZLEY</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/quotation/listTender.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbuat.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">171490.0</stringProp>
              <stringProp name="ConstantTimer.delay">85745</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 171490 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5ODk0LCJpYXQiOjE1ODY1MDg5OTQsImp0aSI6IjQ0MjgifQ.hMfC3-oed0bTgSPAPCYgid3k4G2Ma_84VLU2TbQg_f4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5ODk0LCJpYXQiOjE1ODY1MDg5OTQsImp0aSI6IjQ0MjgifQ.hMfC3-oed0bTgSPAPCYgid3k4G2Ma_84VLU2TbQg_f4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5ODk0LCJpYXQiOjE1ODY1MDg5OTQsImp0aSI6IjQ0MjgifQ.hMfC3-oed0bTgSPAPCYgid3k4G2Ma_84VLU2TbQg_f4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5ODk0LCJpYXQiOjE1ODY1MDg5OTQsImp0aSI6IjQ0MjgifQ.hMfC3-oed0bTgSPAPCYgid3k4G2Ma_84VLU2TbQg_f4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5ODk0LCJpYXQiOjE1ODY1MDg5OTQsImp0aSI6IjQ0MjgifQ.hMfC3-oed0bTgSPAPCYgid3k4G2Ma_84VLU2TbQg_f4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5ODk0LCJpYXQiOjE1ODY1MDg5OTQsImp0aSI6IjQ0MjgifQ.hMfC3-oed0bTgSPAPCYgid3k4G2Ma_84VLU2TbQg_f4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/master/showRfqCategoryRfqTypeProcCatBidPartList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/showRfqCategoryRfqTypeProcCatBidPartList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5ODk0LCJpYXQiOjE1ODY1MDg5OTQsImp0aSI6IjQ0MjgifQ.hMfC3-oed0bTgSPAPCYgid3k4G2Ma_84VLU2TbQg_f4</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/quotation/showTenderListForBidder?tabId=live_tender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tabId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tabId</stringProp>
                  <stringProp name="Argument.value">live_tender</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/quotation/showTenderListForBidder</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5ODk0LCJpYXQiOjE1ODY1MDg5OTQsImp0aSI6IjQ0MjgifQ.hMfC3-oed0bTgSPAPCYgid3k4G2Ma_84VLU2TbQg_f4</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5ODk0LCJpYXQiOjE1ODY1MDg5OTQsImp0aSI6IjQ0MjgifQ.hMfC3-oed0bTgSPAPCYgid3k4G2Ma_84VLU2TbQg_f4</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/organization/loadOrgLevelInfoMap" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/organization/loadOrgLevelInfoMap</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5ODk0LCJpYXQiOjE1ODY1MDg5OTQsImp0aSI6IjQ0MjgifQ.hMfC3-oed0bTgSPAPCYgid3k4G2Ma_84VLU2TbQg_f4</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbuat.mjunction.in/EPSV2Web/rest/general/getHelpdeskTopicList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getHelpdeskTopicList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoyLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJiaWQxIiwidmVuZG9ySWQiOjM4MjcsInVzZXJSb2xlTGlzdCI6WzRdLCJiaWRkZXJDb21wYW55TmFtZSI6ImNvbXAxIiwidXNlckNvZGUiOiJQVF9CSURERVJfMDAxIiwiYXVkIjoiNjA2IiwiZXhwIjoxNTg2NTA5ODk0LCJpYXQiOjE1ODY1MDg5OTQsImp0aSI6IjQ0MjgifQ.hMfC3-oed0bTgSPAPCYgid3k4G2Ma_84VLU2TbQg_f4</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
