<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="TENDER CREATION PROCESS" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.2.3.14. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">E:\JMeterProject\apache-jmeter-5.2.1\bin\EPSv2\Resources\JmeterUtilityTools.jar</stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">ofbuat.mjunction.in</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="TestData" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">EPSv2/Resources/TenderCreationData.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="HOME" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LOGIN" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/login/provideTokenObject" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/login/provideTokenObject</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AUTH_1</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;jwt&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/general/getAllMessageList?Authorization=${AUTH_1}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllMessageList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_1}</stringProp>
                </elementProp>
                <elementProp name="X-Login-Ajax-call" elementType="Header">
                  <stringProp name="Header.name">X-Login-Ajax-call</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/login/provideCaptcha.action?Authorization=${AUTH_1}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="date" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">date</stringProp>
                  <stringProp name="Argument.value">Sat Apr 04 2020 12:02:45 GMT 0530 (India Standard Time)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/login/provideCaptcha.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_1}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/login/login" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rememberme&quot;:false,&quot;captcha&quot;:&quot;n1zUT&quot;,&quot;userCode&quot;:&quot;PT_BUYER_001&quot;,&quot;password&quot;:&quot;$2a$12$PT1BUYER1001123456789ucIDE4G0kikpPLFLwM2P4b.2Fj23zLUi&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/login/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_1}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AUTH_2</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_2}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/login/loginDashboard.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="loginSignUserId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loginSignUserId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="destField" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">destField</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="getInfo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">getInfo</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pkiEnabledFlag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pkiEnabledFlag</stringProp>
                  <stringProp name="Argument.value">N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="callBackMethodName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">callBackMethodName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="methodName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">methodName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="orgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgId</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="loginSignHash" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loginSignHash</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="serverDateValue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">serverDateValue</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dscCertString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dscCertString</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="paramString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">paramString</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="macAddress" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">macAddress</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isShowDialog" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isShowDialog</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dscPublicKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dscPublicKey</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="textForSign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">textForSign</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cancelCallBackMethodName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cancelCallBackMethodName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hrserverDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hrserverDate</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="loginDetailsUpdateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loginDetailsUpdateId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/login/loginDashboard.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AUTH_3</stringProp>
              <stringProp name="RegexExtractor.regex">value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 25796 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=${AUTH_3}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/dashboard/getDashboardData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/dashboard/getDashboardData</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CREATE NEW TENDER MENU" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/general/pageNavigateEvent" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="menuKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">menuKey</stringProp>
                  <stringProp name="Argument.value">menu.tender.tenderCreation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/pageNavigateEvent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/tender/tender.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderStateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderStateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value">menu.tender</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/tender/tender.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 70266 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AUTH_4</stringProp>
              <stringProp name="RegexExtractor.regex">value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">2</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=${AUTH_4}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_4}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/master/getUomList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getUomList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rest/ebriefcase/getEBriefcasePerUser?catId=0&amp;status=A" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="catId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">catId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/ebriefcase/getEBriefcasePerUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/ebriefcase/getEBriefcaseCategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/ebriefcase/getEBriefcaseCategory</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="IndentWeb/rest/master/getBudegtHeadList?orgId=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="orgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">orgId</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">IndentWeb/rest/master/getBudegtHeadList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/master/getApproverType/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getApproverType/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/vendor/loadVendorListByItemGroup?itemGroupId=0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="itemGroupId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">itemGroupId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/vendor/loadVendorListByItemGroup</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/getMasterTemplate" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getMasterTemplate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/getTenderListForRecallTender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderListForRecallTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/master/getFeesTypeList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFeesTypeList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/user/geLoggedInUserDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/geLoggedInUserDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SAVE GENERAL INFORMATION" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/getTenderCategoryByGroupId?groupId=2534" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="groupId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">groupId</stringProp>
                  <stringProp name="Argument.value">2534</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderCategoryByGroupId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/insertTender" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;auctionflag&quot;:&quot;N&quot;,&quot;indentFlag&quot;:&quot;N&quot;,&quot;parentid&quot;:&quot;0&quot;,&quot;tendercallno&quot;:1,&quot;minbidno&quot;:&quot;${Minimum_Number_Of_Bids}&quot;,&quot;rankingsequence&quot;:&quot;${Ranking_Sequence}&quot;,&quot;pacVisibilityFlag&quot;:&quot;${Estimated_Value_Visibility_Flag}&quot;,&quot;offerValidity&quot;:&quot;${Offer_Validity}&quot;,&quot;differntialFlag&quot;:&quot;N&quot;,&quot;tendertypeid&quot;:&quot;101&quot;,&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;bidcurrency&quot;:&quot;${Bidding_Currency}&quot;,&quot;groupid&quot;:&quot;2534&quot;,&quot;tendercatid&quot;:&quot;104&quot;,&quot;bidPartNo&quot;:&quot;${Bid_Parts}&quot;,&quot;bidpartValue&quot;:&quot;1&amp;2&quot;,&quot;tenderrefno&quot;:&quot;${Tender_Reference_No}&quot;,&quot;proccatid&quot;:&quot;1553&quot;,&quot;tendercurrency&quot;:&quot;${Tender_Currency}&quot;,&quot;pacamt&quot;:&quot;100&quot;,&quot;vendorclass&quot;:[],&quot;description&quot;:&quot;${Tender_Description}&quot;,&quot;prRefNo&quot;:&quot;&quot;,&quot;isIntegratedTender&quot;:&quot;N&quot;,&quot;prRfqidentifierNo&quot;:&quot;0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/insertTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_4}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">VAR_TENDER_ID</stringProp>
              <stringProp name="RegexExtractor.regex">\[(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/tender/tender.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">12149</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isIntegratedTender" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isIntegratedTender</stringProp>
                  <stringProp name="Argument.value">N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_4}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="documentNo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">documentNo</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value">menu.tender</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/tender/tender.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AUTH_5</stringProp>
              <stringProp name="RegexExtractor.regex">value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">2</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=${AUTH_5}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">${AUTH_5}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/master/getUomList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getUomList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/ebriefcase/getEBriefcasePerUser?catId=0&amp;status=A" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="catId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">catId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/ebriefcase/getEBriefcasePerUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/ebriefcase/getEBriefcaseCategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/ebriefcase/getEBriefcaseCategory</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="IndentWeb/rest/master/getBudegtHeadList?orgId=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="orgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">orgId</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">IndentWeb/rest/master/getBudegtHeadList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/master/getApproverType/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getApproverType/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/vendor/loadVendorListByItemGroup?itemGroupId=0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="itemGroupId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">itemGroupId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/vendor/loadVendorListByItemGroup</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/getMasterTemplate" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getMasterTemplate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/getTenderListForRecallTender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderListForRecallTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/master/getFeesTypeList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFeesTypeList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/user/geLoggedInUserDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/geLoggedInUserDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/getTender?tenderId=${VAR_TENDER_ID}&amp;userRoleId=5" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userRoleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userRoleId</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/getTenderCategoryByGroupId?groupId=2534" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="groupId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">groupId</stringProp>
                  <stringProp name="Argument.value">2534</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderCategoryByGroupId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SUBMIT TENDER" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/readRfqExcel" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="${PriceListFilePath}" elementType="HTTPFileArg">
                  <stringProp name="File.path">${PriceListFilePath}</stringProp>
                  <stringProp name="File.paramname">file</stringProp>
                  <stringProp name="File.mimetype">application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="currencyValue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currencyValue</stringProp>
                  <stringProp name="Argument.value">INR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeZone" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeZone</stringProp>
                  <stringProp name="Argument.value">-330</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/readRfqExcel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/getTenderDetail" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderDetail</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="params" elementType="Header">
                  <stringProp name="Header.name">params</stringProp>
                  <stringProp name="Header.value">{&quot;tenderId&quot;:${VAR_TENDER_ID},&quot;templategroupId&quot;:32519,&quot;approvalId&quot;:0,&quot;userRoleId&quot;:5}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/getTenderDetail" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderDetail</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="params" elementType="Header">
                  <stringProp name="Header.name">params</stringProp>
                  <stringProp name="Header.value">{&quot;tenderId&quot;:${VAR_TENDER_ID},&quot;templategroupId&quot;:32521,&quot;approvalId&quot;:0,&quot;userRoleId&quot;:5}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/getTenderDetail" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderDetail</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="params" elementType="Header">
                  <stringProp name="Header.name">params</stringProp>
                  <stringProp name="Header.value">{&quot;tenderId&quot;:${VAR_TENDER_ID},&quot;templategroupId&quot;:32525,&quot;approvalId&quot;:0,&quot;userRoleId&quot;:5}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/getTenderDetail" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderDetail</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="params" elementType="Header">
                  <stringProp name="Header.name">params</stringProp>
                  <stringProp name="Header.value">{&quot;tenderId&quot;:${VAR_TENDER_ID},&quot;templategroupId&quot;:32524,&quot;approvalId&quot;:0,&quot;userRoleId&quot;:5}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/getTenderDetail" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderDetail</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="params" elementType="Header">
                  <stringProp name="Header.name">params</stringProp>
                  <stringProp name="Header.value">{&quot;tenderId&quot;:${VAR_TENDER_ID},&quot;templategroupId&quot;:32527,&quot;approvalId&quot;:0,&quot;userRoleId&quot;:5}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/master/searchitemparameter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;orgId&quot;:0,&quot;sorId&quot;:0}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/searchitemparameter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/checkDibaredBidderPresentInRFQ?tenderId=${VAR_TENDER_ID}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/checkDibaredBidderPresentInRFQ</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">import util.DateTime;

DateTime dt = new DateTime();
vars.put(&quot;bid_start_date&quot;, dt.getUNIX(&quot;5 minute&quot;));
vars.put(&quot;bid_end_date&quot;, dt.getUNIX(&quot;10 minute&quot;));
vars.put(&quot;bid_open_date&quot;, dt.getUNIX(&quot;12 minute&quot;));</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/insertTender-Date" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;tenderid&quot;:${var_tenderId},&quot;tenderrefno&quot;:&quot;${Tender_Reference_No}&quot;,&quot;groupid&quot;:&quot;2534&quot;,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;tendertypeid&quot;:&quot;101&quot;,&quot;tendercatid&quot;:&quot;104&quot;,&quot;proccatid&quot;:&quot;1553&quot;,&quot;pacamt&quot;:&quot;10&quot;,&quot;budgetheadids&quot;:null,&quot;status&quot;:1,&quot;auctionflag&quot;:&quot;N&quot;,&quot;auctiontype&quot;:null,&quot;initiateauction&quot;:null,&quot;description&quot;:&quot;${Tender_Description}&quot;,&quot;ownerdegitalcertid&quot;:null,&quot;tendercurrency&quot;:&quot;${Tender_Currency}&quot;,&quot;bidcurrency&quot;:&quot;${Bidding_Currency}&quot;,&quot;minbidno&quot;:${Minimum_Number_Of_Bids},&quot;tendercallno&quot;:1,&quot;createid&quot;:4168,&quot;createdate&quot;:1583186361479,&quot;updateid&quot;:4168,&quot;updatedate&quot;:1583186361000,&quot;isactive&quot;:1,&quot;bidPartNo&quot;:&quot;1&quot;,&quot;queryString&quot;:&quot;606.&quot;,&quot;parentid&quot;:&quot;0&quot;,&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;indentFlag&quot;:&quot;N&quot;,&quot;indentNo&quot;:null,&quot;tenderownerid&quot;:4168,&quot;orgtenderid&quot;:1014,&quot;publishdate&quot;:null,&quot;rankingsequence&quot;:&quot;L1&quot;,&quot;dataHash&quot;:null,&quot;prRefNo&quot;:&quot;&quot;,&quot;isIntegratedTender&quot;:&quot;N&quot;,&quot;differntialFlag&quot;:&quot;N&quot;,&quot;approvalFlag&quot;:&quot;Y&quot;,&quot;signHash&quot;:null,&quot;userDigitalCertId&quot;:null,&quot;dscCertString&quot;:null,&quot;dscPublicKey&quot;:null,&quot;ppcTenderNo&quot;:null,&quot;limitedTenderReason&quot;:null,&quot;pacVisibilityFlag&quot;:&quot;Y&quot;,&quot;eoiFlag&quot;:null,&quot;eoiNumber&quot;:null,&quot;nit&quot;:null,&quot;isFullIntegratedTender&quot;:null,&quot;offerValidity&quot;:10,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;auctionStatusId&quot;:0,&quot;vendorclass&quot;:null,&quot;templates&quot;:[{&quot;templategroupId&quot;:31483,&quot;displayLayoutid&quot;:101,&quot;templateTypeId&quot;:100,&quot;templateCatId&quot;:1553,&quot;groupId&quot;:2534,&quot;templateId&quot;:6,&quot;shortName&quot;:&quot;rfqdate&quot;,&quot;longName&quot;:&quot;Fixed_rfqdate_dataset&quot;,&quot;description&quot;:&quot;RFQ DATE&quot;,&quot;orgId&quot;:606,&quot;deptId&quot;:606,&quot;status&quot;:&quot;A&quot;,&quot;visibility&quot;:&quot;&quot;,&quot;levelMapId&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;masterProcessId&quot;:1,&quot;subProcessId&quot;:18600,&quot;associatedBidPart&quot;:0,&quot;isFixedTemplate&quot;:&quot;Y&quot;,&quot;displaySequenceNo&quot;:1,&quot;mappedTemplateId&quot;:null,&quot;mappedTemplateShortName&quot;:&quot;&quot;,&quot;quotationDependencyFlag&quot;:&quot;N&quot;,&quot;subProcessName&quot;:&quot;Date Schedule&quot;,&quot;mappedDepartmentId&quot;:null,&quot;templateFieldList&quot;:[{&quot;fieldtemplategroupId&quot;:238078,&quot;dataTypeId&quot;:103,&quot;templategroupId&quot;:31483,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:104,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;bid_start_date&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;bid_start_date&quot;,&quot;longName&quot;:&quot;Bid Submission Start Date&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:1,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:${bid_start_date},&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:238080,&quot;dataTypeId&quot;:103,&quot;templategroupId&quot;:31483,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:104,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;bid_end_date&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;bid_end_date&quot;,&quot;longName&quot;:&quot;Bid Submission Due Date&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:2,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:${bid_end_date},&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:238077,&quot;dataTypeId&quot;:103,&quot;templategroupId&quot;:31483,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:104,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;bid_open_date&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;bid_open_date&quot;,&quot;longName&quot;:&quot;Bid Open Date&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:3,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:${bid_open_date},&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:238079,&quot;dataTypeId&quot;:103,&quot;templategroupId&quot;:31483,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:104,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;doc_sub_date&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;doc_sub_date&quot;,&quot;longName&quot;:&quot;Physical Doc Submission End Date&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:4,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;N&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null}],&quot;subProcess&quot;:null,&quot;identifystring&quot;:null,&quot;indexSerialNo&quot;:null,&quot;excelRowNumber&quot;:null,&quot;sorItemFlag&quot;:null,&quot;tabWiseApproverComment&quot;:null,&quot;bidableflag&quot;:null,&quot;mandatory_flag&quot;:null,&quot;mandatoryItem&quot;:null,&quot;prePopulatedRfqData&quot;:0,&quot;corrAttachmentFlag&quot;:null,&quot;bidSectionwiseApproverComment&quot;:null,&quot;bidSectionwiseInitiotorComment&quot;:null,&quot;itemParentCode&quot;:null,&quot;itemCode&quot;:null,&quot;templates&quot;:null,&quot;tenderTemplateGroupId&quot;:0,&quot;relTablePrimaryKeyId&quot;:0,&quot;tablePrimaryKeyId&quot;:0,&quot;isValidated&quot;:null,&quot;modifiedFlag&quot;:true,&quot;itemActionFlag&quot;:null,&quot;bidderWiseActivityDoneStatus&quot;:null,&quot;excelUploadFlag&quot;:false,&quot;paymenttypeId&quot;:null,&quot;liveNodeItemFlag&quot;:&quot;Y&quot;,&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;isOriginal&quot;:null,&quot;isAssigned&quot;:null,&quot;sourceItemId&quot;:null,&quot;mainItemQty&quot;:null,&quot;dueDate&quot;:null,&quot;descriptionTC&quot;:null,&quot;isPaymentTerm&quot;:null,&quot;isSpecialFileDownload&quot;:null,&quot;itemQty&quot;:null,&quot;isvalidExcel&quot;:false,&quot;indentAttachmentFlag&quot;:null,&quot;isQualifiedQuotationItem&quot;:null,&quot;usedInCatalog&quot;:null,&quot;oldItemCode&quot;:null,&quot;fileSignHash&quot;:null,&quot;isDownloadPossible&quot;:null,&quot;filevisibleType&quot;:null,&quot;aceptedOn&quot;:null,&quot;qualDecTakenInLabelId&quot;:null,&quot;mainEstimatedPrice&quot;:null,&quot;isVisibleForMerge&quot;:true,&quot;currentSanctionObjectPrimaryKey&quot;:0,&quot;validationMessage&quot;:null,&quot;orderedQty&quot;:null,&quot;poConsumedqty&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;signBy&quot;:null,&quot;signDate&quot;:null,&quot;exemptionValue&quot;:null,&quot;quotationItemDecryptList&quot;:null,&quot;quotationDetailDecryptList&quot;:null,&quot;quotationFeesMasterDecryptList&quot;:null,&quot;quotAttachListMap&quot;:null,&quot;eoiquotationDetailDecryptList&quot;:null,&quot;eoiquotAttachListMap&quot;:null}],&quot;bidpartValue&quot;:&quot;1&amp;2&quot;,&quot;tenderPreviewMap&quot;:null,&quot;indent&quot;:null,&quot;tenderVendors&quot;:[],&quot;fieldFormulaMap&quot;:{},&quot;pacamtAsString&quot;:&quot;10&quot;,&quot;reviewMap&quot;:null,&quot;integratedTemplateGrpId&quot;:null,&quot;erpHeaderId&quot;:null,&quot;prRfqidentifierNo&quot;:null,&quot;indentAttachments&quot;:null,&quot;poConsumingStatus&quot;:1,&quot;approvalWorkFlow&quot;:null,&quot;tenderFeesList&quot;:null,&quot;tenderItemList&quot;:null,&quot;tenderDetailList&quot;:null,&quot;tenderDetailForDeliveryLocationList&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;quotationDecryptList&quot;:null,&quot;certSelectedUserTime&quot;:null,&quot;approvalCommentsAndAttachmentsDTOList&quot;:null,&quot;templategroupids&quot;:[&quot;31481&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/insertTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/saveAttachment" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="${AttachFilePath}   " elementType="HTTPFileArg">
                  <stringProp name="File.path">${AttachFilePath}   </stringProp>
                  <stringProp name="File.paramname">file</stringProp>
                  <stringProp name="File.mimetype">image/jpg</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tempGrpId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tempGrpId</stringProp>
                  <stringProp name="Argument.value">31485</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="serialNo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">serialNo</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/saveAttachment</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">var_attachment_file   </stringProp>
              <stringProp name="RegexExtractor.regex">&quot;filePath&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">file_size</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;fileSize&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/insertTender-Terms And Conditions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;tenderid&quot;:${var_tenderId},&quot;tenderrefno&quot;:&quot;${Tender_Reference_No}&quot;,&quot;groupid&quot;:&quot;2534&quot;,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;tendertypeid&quot;:&quot;101&quot;,&quot;tendercatid&quot;:&quot;104&quot;,&quot;proccatid&quot;:&quot;1553&quot;,&quot;pacamt&quot;:&quot;10&quot;,&quot;budgetheadids&quot;:null,&quot;status&quot;:1,&quot;auctionflag&quot;:&quot;N&quot;,&quot;auctiontype&quot;:null,&quot;initiateauction&quot;:null,&quot;description&quot;:&quot;${Tender_Description}&quot;,&quot;ownerdegitalcertid&quot;:null,&quot;tendercurrency&quot;:&quot;${Bidding_Currency}&quot;,&quot;bidcurrency&quot;:&quot;${Minimum_Number_Of_Bids}&quot;,&quot;minbidno&quot;:1,&quot;tendercallno&quot;:1,&quot;createid&quot;:4168,&quot;createdate&quot;:1583186361479,&quot;updateid&quot;:4168,&quot;updatedate&quot;:1583186361000,&quot;isactive&quot;:1,&quot;bidPartNo&quot;:&quot;1&quot;,&quot;queryString&quot;:&quot;606.&quot;,&quot;parentid&quot;:&quot;0&quot;,&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;indentFlag&quot;:&quot;N&quot;,&quot;indentNo&quot;:null,&quot;tenderownerid&quot;:4168,&quot;orgtenderid&quot;:1014,&quot;publishdate&quot;:null,&quot;rankingsequence&quot;:&quot;L1&quot;,&quot;dataHash&quot;:null,&quot;prRefNo&quot;:&quot;&quot;,&quot;isIntegratedTender&quot;:&quot;N&quot;,&quot;differntialFlag&quot;:&quot;N&quot;,&quot;approvalFlag&quot;:&quot;Y&quot;,&quot;signHash&quot;:null,&quot;userDigitalCertId&quot;:null,&quot;dscCertString&quot;:null,&quot;dscPublicKey&quot;:null,&quot;ppcTenderNo&quot;:null,&quot;limitedTenderReason&quot;:null,&quot;pacVisibilityFlag&quot;:&quot;Y&quot;,&quot;eoiFlag&quot;:null,&quot;eoiNumber&quot;:null,&quot;nit&quot;:null,&quot;isFullIntegratedTender&quot;:null,&quot;offerValidity&quot;:10,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;auctionStatusId&quot;:0,&quot;vendorclass&quot;:null,&quot;templates&quot;:[{&quot;templategroupId&quot;:31479,&quot;displayLayoutid&quot;:101,&quot;templateTypeId&quot;:100,&quot;templateCatId&quot;:1553,&quot;groupId&quot;:2534,&quot;templateId&quot;:2,&quot;shortName&quot;:&quot;term_conditions&quot;,&quot;longName&quot;:&quot;RH_TERMS_CONDITIONS_RG&quot;,&quot;description&quot;:&quot;Terms &amp; Conditions&quot;,&quot;orgId&quot;:606,&quot;deptId&quot;:606,&quot;status&quot;:&quot;A&quot;,&quot;visibility&quot;:&quot;A&quot;,&quot;levelMapId&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;masterProcessId&quot;:1,&quot;subProcessId&quot;:18604,&quot;associatedBidPart&quot;:0,&quot;isFixedTemplate&quot;:&quot;N&quot;,&quot;displaySequenceNo&quot;:3,&quot;mappedTemplateId&quot;:null,&quot;mappedTemplateShortName&quot;:&quot;&quot;,&quot;quotationDependencyFlag&quot;:&quot;Y&quot;,&quot;subProcessName&quot;:&quot;Terms and Conditions&quot;,&quot;mappedDepartmentId&quot;:null,&quot;templateFieldList&quot;:[{&quot;fieldtemplategroupId&quot;:238049,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31479,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:106,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf1&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Project_Name&quot;,&quot;longName&quot;:&quot;Project Name&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;AVENIDA,GURGAON PRIMANTI - EWS,PRIMANTI,PRIMANTI VILLA,PRIMANTI SCHOOL,AMANTRA,AVEZA,SANTORINI,LA MONTANA,TRITVAM KOCHI,SEREIN,88 EAST,ARIANA,MYST - KASAULI,GURGAON GATEWAY,LA VIDA,THE PROMONT,NEW HAVEN PEENYA,BOISAR II-NEW HAVEN,BAHADURGARH-NEW HAVEN,EUREKA PARK,TCG GURUGRAM,TRIL IT 4 MALAD,TGBL BENGALURU,TRILT IT CITY  GURUGRAM,IMCC NAVI MUMBAI&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:1,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:&quot;88 EAST&quot;,&quot;roleWiseFieldEntry&quot;:null,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;UpdatedListValues&quot;:[{&quot;code&quot;:&quot;88 EAST&quot;,&quot;description&quot;:&quot;88 EAST&quot;},{&quot;code&quot;:&quot;AMANTRA&quot;,&quot;description&quot;:&quot;AMANTRA&quot;},{&quot;code&quot;:&quot;ARIANA&quot;,&quot;description&quot;:&quot;ARIANA&quot;},{&quot;code&quot;:&quot;AVENIDA&quot;,&quot;description&quot;:&quot;AVENIDA&quot;},{&quot;code&quot;:&quot;AVEZA&quot;,&quot;description&quot;:&quot;AVEZA&quot;},{&quot;code&quot;:&quot;BAHADURGARH-NEW HAVEN&quot;,&quot;description&quot;:&quot;BAHADURGARH-NEW HAVEN&quot;},{&quot;code&quot;:&quot;BOISAR II-NEW HAVEN&quot;,&quot;description&quot;:&quot;BOISAR II-NEW HAVEN&quot;},{&quot;code&quot;:&quot;EUREKA PARK&quot;,&quot;description&quot;:&quot;EUREKA PARK&quot;},{&quot;code&quot;:&quot;GURGAON GATEWAY&quot;,&quot;description&quot;:&quot;GURGAON GATEWAY&quot;},{&quot;code&quot;:&quot;GURGAON PRIMANTI - EWS&quot;,&quot;description&quot;:&quot;GURGAON PRIMANTI - EWS&quot;},{&quot;code&quot;:&quot;IMCC NAVI MUMBAI&quot;,&quot;description&quot;:&quot;IMCC NAVI MUMBAI&quot;},{&quot;code&quot;:&quot;LA MONTANA&quot;,&quot;description&quot;:&quot;LA MONTANA&quot;},{&quot;code&quot;:&quot;LA VIDA&quot;,&quot;description&quot;:&quot;LA VIDA&quot;},{&quot;code&quot;:&quot;MYST - KASAULI&quot;,&quot;description&quot;:&quot;MYST - KASAULI&quot;},{&quot;code&quot;:&quot;NEW HAVEN PEENYA&quot;,&quot;description&quot;:&quot;NEW HAVEN PEENYA&quot;},{&quot;code&quot;:&quot;PRIMANTI&quot;,&quot;description&quot;:&quot;PRIMANTI&quot;},{&quot;code&quot;:&quot;PRIMANTI SCHOOL&quot;,&quot;description&quot;:&quot;PRIMANTI SCHOOL&quot;},{&quot;code&quot;:&quot;PRIMANTI VILLA&quot;,&quot;description&quot;:&quot;PRIMANTI VILLA&quot;},{&quot;code&quot;:&quot;SANTORINI&quot;,&quot;description&quot;:&quot;SANTORINI&quot;},{&quot;code&quot;:&quot;SEREIN&quot;,&quot;description&quot;:&quot;SEREIN&quot;},{&quot;code&quot;:&quot;TCG GURUGRAM&quot;,&quot;description&quot;:&quot;TCG GURUGRAM&quot;},{&quot;code&quot;:&quot;TGBL BENGALURU&quot;,&quot;description&quot;:&quot;TGBL BENGALURU&quot;},{&quot;code&quot;:&quot;THE PROMONT&quot;,&quot;description&quot;:&quot;THE PROMONT&quot;},{&quot;code&quot;:&quot;TRIL IT 4 MALAD&quot;,&quot;description&quot;:&quot;TRIL IT 4 MALAD&quot;},{&quot;code&quot;:&quot;TRILT IT CITY  GURUGRAM&quot;,&quot;description&quot;:&quot;TRILT IT CITY  GURUGRAM&quot;},{&quot;code&quot;:&quot;TRITVAM KOCHI&quot;,&quot;description&quot;:&quot;TRITVAM KOCHI&quot;}]},{&quot;fieldtemplategroupId&quot;:238044,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31479,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf2&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;location&quot;,&quot;longName&quot;:&quot;Location&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:2,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:null,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:238042,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31479,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf3&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;material_group&quot;,&quot;longName&quot;:&quot;Material Group&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:3,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;Y&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:null,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:238045,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31479,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf4&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Price_Basis&quot;,&quot;longName&quot;:&quot;Price Basis&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:4,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:238046,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31479,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf5&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Delivery_Schedule&quot;,&quot;longName&quot;:&quot;Delivery Schedule&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:5,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:238047,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31479,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf6&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Delivery_At&quot;,&quot;longName&quot;:&quot;Delivery At&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:6,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:238048,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31479,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf7&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Payment_Terms&quot;,&quot;longName&quot;:&quot;Payment Terms&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:7,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:238043,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31479,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf8&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;Validity_Offer&quot;,&quot;longName&quot;:&quot;Validity of Offer&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;S&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:8,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:null,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null}],&quot;subProcess&quot;:null,&quot;identifystring&quot;:null,&quot;indexSerialNo&quot;:null,&quot;excelRowNumber&quot;:null,&quot;sorItemFlag&quot;:null,&quot;tabWiseApproverComment&quot;:null,&quot;bidableflag&quot;:null,&quot;mandatory_flag&quot;:null,&quot;mandatoryItem&quot;:null,&quot;prePopulatedRfqData&quot;:0,&quot;corrAttachmentFlag&quot;:null,&quot;bidSectionwiseApproverComment&quot;:null,&quot;bidSectionwiseInitiotorComment&quot;:null,&quot;itemParentCode&quot;:null,&quot;itemCode&quot;:null,&quot;templates&quot;:null,&quot;tenderTemplateGroupId&quot;:0,&quot;relTablePrimaryKeyId&quot;:0,&quot;tablePrimaryKeyId&quot;:0,&quot;isValidated&quot;:null,&quot;modifiedFlag&quot;:false,&quot;itemActionFlag&quot;:null,&quot;bidderWiseActivityDoneStatus&quot;:null,&quot;excelUploadFlag&quot;:false,&quot;paymenttypeId&quot;:null,&quot;liveNodeItemFlag&quot;:&quot;Y&quot;,&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;isOriginal&quot;:null,&quot;isAssigned&quot;:null,&quot;sourceItemId&quot;:null,&quot;mainItemQty&quot;:null,&quot;dueDate&quot;:null,&quot;descriptionTC&quot;:null,&quot;isPaymentTerm&quot;:null,&quot;isSpecialFileDownload&quot;:null,&quot;itemQty&quot;:null,&quot;isvalidExcel&quot;:false,&quot;indentAttachmentFlag&quot;:null,&quot;isQualifiedQuotationItem&quot;:null,&quot;usedInCatalog&quot;:null,&quot;oldItemCode&quot;:null,&quot;fileSignHash&quot;:null,&quot;isDownloadPossible&quot;:null,&quot;filevisibleType&quot;:null,&quot;aceptedOn&quot;:null,&quot;qualDecTakenInLabelId&quot;:null,&quot;mainEstimatedPrice&quot;:null,&quot;isVisibleForMerge&quot;:true,&quot;currentSanctionObjectPrimaryKey&quot;:0,&quot;validationMessage&quot;:null,&quot;orderedQty&quot;:null,&quot;poConsumedqty&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;signBy&quot;:null,&quot;signDate&quot;:null,&quot;exemptionValue&quot;:null,&quot;quotationItemDecryptList&quot;:null,&quot;quotationDetailDecryptList&quot;:null,&quot;quotationFeesMasterDecryptList&quot;:null,&quot;quotAttachListMap&quot;:null,&quot;eoiquotationDetailDecryptList&quot;:null,&quot;eoiquotAttachListMap&quot;:null}],&quot;bidpartValue&quot;:&quot;1&amp;2&quot;,&quot;tenderPreviewMap&quot;:null,&quot;indent&quot;:null,&quot;tenderVendors&quot;:[],&quot;fieldFormulaMap&quot;:{},&quot;pacamtAsString&quot;:&quot;10&quot;,&quot;reviewMap&quot;:null,&quot;integratedTemplateGrpId&quot;:null,&quot;erpHeaderId&quot;:null,&quot;prRfqidentifierNo&quot;:null,&quot;indentAttachments&quot;:null,&quot;poConsumingStatus&quot;:1,&quot;approvalWorkFlow&quot;:null,&quot;tenderFeesList&quot;:null,&quot;tenderItemList&quot;:null,&quot;tenderDetailList&quot;:null,&quot;tenderDetailForDeliveryLocationList&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;quotationDecryptList&quot;:null,&quot;certSelectedUserTime&quot;:null,&quot;approvalCommentsAndAttachmentsDTOList&quot;:null,&quot;templategroupids&quot;:[&quot;31481&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/insertTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/insertTender-Technical Specification" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;tenderid&quot;:${var_tenderId},&quot;tenderrefno&quot;:&quot;${Tender_Reference_No}&quot;,&quot;groupid&quot;:&quot;2534&quot;,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;tendertypeid&quot;:&quot;101&quot;,&quot;tendercatid&quot;:&quot;104&quot;,&quot;proccatid&quot;:&quot;1553&quot;,&quot;pacamt&quot;:&quot;10&quot;,&quot;budgetheadids&quot;:null,&quot;status&quot;:1,&quot;auctionflag&quot;:&quot;N&quot;,&quot;auctiontype&quot;:null,&quot;initiateauction&quot;:null,&quot;description&quot;:&quot;${Tender_Description}&quot;,&quot;ownerdegitalcertid&quot;:null,&quot;tendercurrency&quot;:&quot;${Bidding_Currency}&quot;,&quot;bidcurrency&quot;:&quot;${Minimum_Number_Of_Bids}&quot;,&quot;minbidno&quot;:1,&quot;tendercallno&quot;:1,&quot;createid&quot;:4168,&quot;createdate&quot;:1583186361479,&quot;updateid&quot;:4168,&quot;updatedate&quot;:1583186361000,&quot;isactive&quot;:1,&quot;bidPartNo&quot;:&quot;1&quot;,&quot;queryString&quot;:&quot;606.&quot;,&quot;parentid&quot;:&quot;0&quot;,&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;indentFlag&quot;:&quot;N&quot;,&quot;indentNo&quot;:null,&quot;tenderownerid&quot;:4168,&quot;orgtenderid&quot;:1014,&quot;publishdate&quot;:null,&quot;rankingsequence&quot;:&quot;L1&quot;,&quot;dataHash&quot;:null,&quot;prRefNo&quot;:&quot;&quot;,&quot;isIntegratedTender&quot;:&quot;N&quot;,&quot;differntialFlag&quot;:&quot;N&quot;,&quot;approvalFlag&quot;:&quot;Y&quot;,&quot;signHash&quot;:null,&quot;userDigitalCertId&quot;:null,&quot;dscCertString&quot;:null,&quot;dscPublicKey&quot;:null,&quot;ppcTenderNo&quot;:null,&quot;limitedTenderReason&quot;:null,&quot;pacVisibilityFlag&quot;:&quot;Y&quot;,&quot;eoiFlag&quot;:null,&quot;eoiNumber&quot;:null,&quot;nit&quot;:null,&quot;isFullIntegratedTender&quot;:null,&quot;offerValidity&quot;:10,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;auctionStatusId&quot;:0,&quot;vendorclass&quot;:null,&quot;templates&quot;:[{&quot;templategroupId&quot;:31478,&quot;displayLayoutid&quot;:102,&quot;templateTypeId&quot;:100,&quot;templateCatId&quot;:1553,&quot;groupId&quot;:2534,&quot;templateId&quot;:1,&quot;shortName&quot;:&quot;technical_specification&quot;,&quot;longName&quot;:&quot;RH_TECHNICAL  SPECIFICATION_RG&quot;,&quot;description&quot;:&quot;TECHNICAL  SPECIFICATION&quot;,&quot;orgId&quot;:606,&quot;deptId&quot;:606,&quot;status&quot;:&quot;A&quot;,&quot;visibility&quot;:&quot;A&quot;,&quot;levelMapId&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;masterProcessId&quot;:1,&quot;subProcessId&quot;:18610,&quot;associatedBidPart&quot;:0,&quot;isFixedTemplate&quot;:&quot;N&quot;,&quot;displaySequenceNo&quot;:4,&quot;mappedTemplateId&quot;:null,&quot;mappedTemplateShortName&quot;:&quot;&quot;,&quot;quotationDependencyFlag&quot;:&quot;Y&quot;,&quot;subProcessName&quot;:&quot;Technical Compliance Table&quot;,&quot;mappedDepartmentId&quot;:null,&quot;templateFieldList&quot;:[{&quot;fieldtemplategroupId&quot;:238040,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31478,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf1&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;ITEM_NO&quot;,&quot;longName&quot;:&quot;ITEM_NO&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:1,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:&quot;${ITEM_NO}&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:238041,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31478,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf2&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;ITEM_SPECIFICATION&quot;,&quot;longName&quot;:&quot;ITEM_SPECIFICATION&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:2,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:&quot;{ITEM_SPECIFICATION}&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:238039,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31478,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;unf3&quot;,&quot;userType&quot;:&quot;U&quot;,&quot;shortName&quot;:&quot;ITEM_QTY&quot;,&quot;longName&quot;:&quot;ITEM QTY&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:500,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;&quot;,&quot;displayOrder&quot;:3,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:&quot;${ITEM_QTY}&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false}],&quot;subProcess&quot;:null,&quot;identifystring&quot;:null,&quot;indexSerialNo&quot;:null,&quot;excelRowNumber&quot;:null,&quot;sorItemFlag&quot;:null,&quot;tabWiseApproverComment&quot;:null,&quot;bidableflag&quot;:null,&quot;mandatory_flag&quot;:null,&quot;mandatoryItem&quot;:null,&quot;prePopulatedRfqData&quot;:0,&quot;corrAttachmentFlag&quot;:null,&quot;bidSectionwiseApproverComment&quot;:null,&quot;bidSectionwiseInitiotorComment&quot;:null,&quot;itemParentCode&quot;:null,&quot;itemCode&quot;:null,&quot;templates&quot;:null,&quot;tenderTemplateGroupId&quot;:0,&quot;relTablePrimaryKeyId&quot;:0,&quot;tablePrimaryKeyId&quot;:0,&quot;isValidated&quot;:null,&quot;modifiedFlag&quot;:true,&quot;itemActionFlag&quot;:null,&quot;bidderWiseActivityDoneStatus&quot;:null,&quot;excelUploadFlag&quot;:false,&quot;paymenttypeId&quot;:null,&quot;liveNodeItemFlag&quot;:&quot;Y&quot;,&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;isOriginal&quot;:null,&quot;isAssigned&quot;:null,&quot;sourceItemId&quot;:null,&quot;mainItemQty&quot;:null,&quot;dueDate&quot;:null,&quot;descriptionTC&quot;:null,&quot;isPaymentTerm&quot;:null,&quot;isSpecialFileDownload&quot;:null,&quot;itemQty&quot;:null,&quot;isvalidExcel&quot;:false,&quot;indentAttachmentFlag&quot;:null,&quot;isQualifiedQuotationItem&quot;:null,&quot;usedInCatalog&quot;:null,&quot;oldItemCode&quot;:null,&quot;fileSignHash&quot;:null,&quot;isDownloadPossible&quot;:null,&quot;filevisibleType&quot;:null,&quot;aceptedOn&quot;:null,&quot;qualDecTakenInLabelId&quot;:null,&quot;mainEstimatedPrice&quot;:null,&quot;isVisibleForMerge&quot;:true,&quot;currentSanctionObjectPrimaryKey&quot;:0,&quot;validationMessage&quot;:null,&quot;orderedQty&quot;:null,&quot;poConsumedqty&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;signBy&quot;:null,&quot;signDate&quot;:null,&quot;exemptionValue&quot;:null,&quot;quotationItemDecryptList&quot;:null,&quot;quotationDetailDecryptList&quot;:null,&quot;quotationFeesMasterDecryptList&quot;:null,&quot;quotAttachListMap&quot;:null,&quot;eoiquotationDetailDecryptList&quot;:null,&quot;eoiquotAttachListMap&quot;:null,&quot;loadedData&quot;:30}],&quot;bidpartValue&quot;:&quot;1&amp;2&quot;,&quot;tenderPreviewMap&quot;:null,&quot;indent&quot;:null,&quot;tenderVendors&quot;:[],&quot;fieldFormulaMap&quot;:{},&quot;pacamtAsString&quot;:&quot;10&quot;,&quot;reviewMap&quot;:null,&quot;integratedTemplateGrpId&quot;:null,&quot;erpHeaderId&quot;:null,&quot;prRfqidentifierNo&quot;:null,&quot;indentAttachments&quot;:null,&quot;poConsumingStatus&quot;:1,&quot;approvalWorkFlow&quot;:null,&quot;tenderFeesList&quot;:null,&quot;tenderItemList&quot;:null,&quot;tenderDetailList&quot;:null,&quot;tenderDetailForDeliveryLocationList&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;quotationDecryptList&quot;:null,&quot;certSelectedUserTime&quot;:null,&quot;approvalCommentsAndAttachmentsDTOList&quot;:null,&quot;templategroupids&quot;:[&quot;31481&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/insertTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/insertTender-File Attachment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;tenderid&quot;: ${var_tenderId},&#xd;
  &quot;tenderrefno&quot;: &quot;${Tender_Reference_No}&quot;,&#xd;
  &quot;groupid&quot;: &quot;2534&quot;,&#xd;
  &quot;orgid&quot;: 606,&#xd;
  &quot;deptid&quot;: 606,&#xd;
  &quot;tendertypeid&quot;: &quot;101&quot;,&#xd;
  &quot;tendercatid&quot;: &quot;104&quot;,&#xd;
  &quot;proccatid&quot;: &quot;1553&quot;,&#xd;
  &quot;pacamt&quot;: &quot;10&quot;,&#xd;
  &quot;budgetheadids&quot;: null,&#xd;
  &quot;status&quot;: 1,&#xd;
  &quot;auctionflag&quot;: &quot;N&quot;,&#xd;
  &quot;auctiontype&quot;: null,&#xd;
  &quot;initiateauction&quot;: null,&#xd;
  &quot;description&quot;: &quot;${Tender_Description}&quot;,&#xd;
  &quot;ownerdegitalcertid&quot;: null,&#xd;
  &quot;tendercurrency&quot;: &quot;${Bidding_Currency}&quot;,&#xd;
  &quot;bidcurrency&quot;: &quot;${Minimum_Number_Of_Bids}&quot;,&#xd;
  &quot;minbidno&quot;: 1,&#xd;
  &quot;tendercallno&quot;: 1,&#xd;
  &quot;createid&quot;: 4168,&#xd;
  &quot;createdate&quot;: 1583186361479,&#xd;
  &quot;updateid&quot;: 4168,&#xd;
  &quot;updatedate&quot;: 1583186361000,&#xd;
  &quot;isactive&quot;: 1,&#xd;
  &quot;bidPartNo&quot;: &quot;1&quot;,&#xd;
  &quot;queryString&quot;: &quot;606.&quot;,&#xd;
  &quot;parentid&quot;: &quot;0&quot;,&#xd;
  &quot;pkiEnabled&quot;: &quot;N&quot;,&#xd;
  &quot;indentFlag&quot;: &quot;N&quot;,&#xd;
  &quot;indentNo&quot;: null,&#xd;
  &quot;tenderownerid&quot;: 4168,&#xd;
  &quot;orgtenderid&quot;: 1014,&#xd;
  &quot;publishdate&quot;: null,&#xd;
  &quot;rankingsequence&quot;: &quot;L1&quot;,&#xd;
  &quot;dataHash&quot;: null,&#xd;
  &quot;prRefNo&quot;: &quot;&quot;,&#xd;
  &quot;isIntegratedTender&quot;: &quot;N&quot;,&#xd;
  &quot;differntialFlag&quot;: &quot;N&quot;,&#xd;
  &quot;approvalFlag&quot;: &quot;Y&quot;,&#xd;
  &quot;signHash&quot;: null,&#xd;
  &quot;userDigitalCertId&quot;: null,&#xd;
  &quot;dscCertString&quot;: null,&#xd;
  &quot;dscPublicKey&quot;: null,&#xd;
  &quot;ppcTenderNo&quot;: null,&#xd;
  &quot;limitedTenderReason&quot;: null,&#xd;
  &quot;pacVisibilityFlag&quot;: &quot;Y&quot;,&#xd;
  &quot;eoiFlag&quot;: null,&#xd;
  &quot;eoiNumber&quot;: null,&#xd;
  &quot;nit&quot;: null,&#xd;
  &quot;isFullIntegratedTender&quot;: null,&#xd;
  &quot;offerValidity&quot;: 10,&#xd;
  &quot;signDate&quot;: null,&#xd;
  &quot;signBy&quot;: null,&#xd;
  &quot;auctionStatusId&quot;: 0,&#xd;
  &quot;vendorclass&quot;: null,&#xd;
  &quot;templates&quot;: [&#xd;
    {&#xd;
      &quot;templategroupId&quot;: 31485,&#xd;
      &quot;displayLayoutid&quot;: 102,&#xd;
      &quot;templateTypeId&quot;: 100,&#xd;
      &quot;templateCatId&quot;: 1553,&#xd;
      &quot;groupId&quot;: 2534,&#xd;
      &quot;templateId&quot;: 8,&#xd;
      &quot;shortName&quot;: &quot;rfqattachment&quot;,&#xd;
      &quot;longName&quot;: &quot;Fixed_rfqattachment_dataset&quot;,&#xd;
      &quot;description&quot;: &quot;RFQ ATTACHMENT&quot;,&#xd;
      &quot;orgId&quot;: 606,&#xd;
      &quot;deptId&quot;: 606,&#xd;
      &quot;status&quot;: &quot;A&quot;,&#xd;
      &quot;visibility&quot;: &quot;&quot;,&#xd;
      &quot;levelMapId&quot;: null,&#xd;
      &quot;createid&quot;: 3989,&#xd;
      &quot;createdate&quot;: 1583130334000,&#xd;
      &quot;updateid&quot;: 3989,&#xd;
      &quot;updatedate&quot;: 1583130382000,&#xd;
      &quot;isActive&quot;: 1,&#xd;
      &quot;masterProcessId&quot;: 1,&#xd;
      &quot;subProcessId&quot;: 18602,&#xd;
      &quot;associatedBidPart&quot;: 0,&#xd;
      &quot;isFixedTemplate&quot;: &quot;Y&quot;,&#xd;
      &quot;displaySequenceNo&quot;: 2,&#xd;
      &quot;mappedTemplateId&quot;: null,&#xd;
      &quot;mappedTemplateShortName&quot;: &quot;&quot;,&#xd;
      &quot;quotationDependencyFlag&quot;: &quot;Y&quot;,&#xd;
      &quot;subProcessName&quot;: &quot;Attachments&quot;,&#xd;
      &quot;mappedDepartmentId&quot;: null,&#xd;
      &quot;templateFieldList&quot;: [&#xd;
        {&#xd;
          &quot;fieldtemplategroupId&quot;: 238085,&#xd;
          &quot;dataTypeId&quot;: 101,&#xd;
          &quot;templategroupId&quot;: 31485,&#xd;
          &quot;groupId&quot;: 2534,&#xd;
          &quot;indicatorType&quot;: &quot;&quot;,&#xd;
          &quot;controlTypeId&quot;: 100,&#xd;
          &quot;orgid&quot;: 606,&#xd;
          &quot;deptid&quot;: 606,&#xd;
          &quot;fieldId&quot;: null,&#xd;
          &quot;code&quot;: &quot;label&quot;,&#xd;
          &quot;userType&quot;: &quot;S&quot;,&#xd;
          &quot;shortName&quot;: &quot;label&quot;,&#xd;
          &quot;longName&quot;: &quot;Label&quot;,&#xd;
          &quot;minLength&quot;: 1,&#xd;
          &quot;maxLength&quot;: 200,&#xd;
          &quot;displayWidth&quot;: null,&#xd;
          &quot;displayHeight&quot;: null,&#xd;
          &quot;listValues&quot;: &quot;&quot;,&#xd;
          &quot;displaySize&quot;: &quot;M&quot;,&#xd;
          &quot;defaultValue&quot;: &quot;&quot;,&#xd;
          &quot;dataFormat&quot;: &quot;&quot;,&#xd;
          &quot;effectiveFrom&quot;: null,&#xd;
          &quot;effectiveTo&quot;: null,&#xd;
          &quot;status&quot;: &quot;A&quot;,&#xd;
          &quot;createid&quot;: 3989,&#xd;
          &quot;createdate&quot;: 1583130334000,&#xd;
          &quot;updateid&quot;: 3989,&#xd;
          &quot;updatedate&quot;: 1583130382000,&#xd;
          &quot;isActive&quot;: 1,&#xd;
          &quot;fieldType&quot;: &quot;&quot;,&#xd;
          &quot;tooltip&quot;: &quot;&quot;,&#xd;
          &quot;encrypted&quot;: &quot;D&quot;,&#xd;
          &quot;displayOrder&quot;: 1,&#xd;
          &quot;isFixedField&quot;: &quot;Y&quot;,&#xd;
          &quot;isEnabled&quot;: &quot;Y&quot;,&#xd;
          &quot;mandatory&quot;: &quot;N&quot;,&#xd;
          &quot;formula&quot;: &quot;&quot;,&#xd;
          &quot;validation&quot;: &quot;&quot;,&#xd;
          &quot;isVisible&quot;: &quot;Y&quot;,&#xd;
          &quot;isException&quot;: &quot;N&quot;,&#xd;
          &quot;value&quot;: &quot;${Label}&quot;,&#xd;
          &quot;roleWiseFieldEntry&quot;: &quot;E&quot;,&#xd;
          &quot;groupTemplateFieldRoleExceptionList&quot;: null,&#xd;
          &quot;fieldValidationList&quot;: null,&#xd;
          &quot;aggregationtypeid&quot;: null,&#xd;
          &quot;isAggregation&quot;: &quot;N&quot;,&#xd;
          &quot;bidValueFlag&quot;: &quot;N&quot;,&#xd;
          &quot;itemWiseRankingFlag&quot;: &quot;&quot;,&#xd;
          &quot;fieldValEditableFlag&quot;: null,&#xd;
          &quot;amountInWords&quot;: &quot;&quot;,&#xd;
          &quot;relativePath&quot;: null,&#xd;
          &quot;listOfValues&quot;: null,&#xd;
          &quot;dataHash&quot;: null,&#xd;
          &quot;excludedVendorsForDifferentialRfq&quot;: null,&#xd;
          &quot;genInfoGrpId&quot;: null,&#xd;
          &quot;displayText&quot;: null,&#xd;
          &quot;showText&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;fieldtemplategroupId&quot;: 238087,&#xd;
          &quot;dataTypeId&quot;: 101,&#xd;
          &quot;templategroupId&quot;: 31485,&#xd;
          &quot;groupId&quot;: 2534,&#xd;
          &quot;indicatorType&quot;: &quot;&quot;,&#xd;
          &quot;controlTypeId&quot;: 100,&#xd;
          &quot;orgid&quot;: 606,&#xd;
          &quot;deptid&quot;: 606,&#xd;
          &quot;fieldId&quot;: null,&#xd;
          &quot;code&quot;: &quot;file_name&quot;,&#xd;
          &quot;userType&quot;: &quot;S&quot;,&#xd;
          &quot;shortName&quot;: &quot;file_name&quot;,&#xd;
          &quot;longName&quot;: &quot;File Name&quot;,&#xd;
          &quot;minLength&quot;: 1,&#xd;
          &quot;maxLength&quot;: 200,&#xd;
          &quot;displayWidth&quot;: null,&#xd;
          &quot;displayHeight&quot;: null,&#xd;
          &quot;listValues&quot;: &quot;&quot;,&#xd;
          &quot;displaySize&quot;: &quot;M&quot;,&#xd;
          &quot;defaultValue&quot;: &quot;&quot;,&#xd;
          &quot;dataFormat&quot;: &quot;&quot;,&#xd;
          &quot;effectiveFrom&quot;: null,&#xd;
          &quot;effectiveTo&quot;: null,&#xd;
          &quot;status&quot;: &quot;A&quot;,&#xd;
          &quot;createid&quot;: 3989,&#xd;
          &quot;createdate&quot;: 1583130334000,&#xd;
          &quot;updateid&quot;: 3989,&#xd;
          &quot;updatedate&quot;: 1583130382000,&#xd;
          &quot;isActive&quot;: 1,&#xd;
          &quot;fieldType&quot;: &quot;&quot;,&#xd;
          &quot;tooltip&quot;: &quot;&quot;,&#xd;
          &quot;encrypted&quot;: &quot;D&quot;,&#xd;
          &quot;displayOrder&quot;: 2,&#xd;
          &quot;isFixedField&quot;: &quot;Y&quot;,&#xd;
          &quot;isEnabled&quot;: &quot;Y&quot;,&#xd;
          &quot;mandatory&quot;: &quot;Y&quot;,&#xd;
          &quot;formula&quot;: &quot;&quot;,&#xd;
          &quot;validation&quot;: &quot;&quot;,&#xd;
          &quot;isVisible&quot;: &quot;Y&quot;,&#xd;
          &quot;isException&quot;: &quot;N&quot;,&#xd;
          &quot;value&quot;: &quot;${file_name}&quot;,&#xd;
          &quot;roleWiseFieldEntry&quot;: &quot;V&quot;,&#xd;
          &quot;groupTemplateFieldRoleExceptionList&quot;: null,&#xd;
          &quot;fieldValidationList&quot;: null,&#xd;
          &quot;aggregationtypeid&quot;: null,&#xd;
          &quot;isAggregation&quot;: &quot;N&quot;,&#xd;
          &quot;bidValueFlag&quot;: &quot;N&quot;,&#xd;
          &quot;itemWiseRankingFlag&quot;: &quot;&quot;,&#xd;
          &quot;fieldValEditableFlag&quot;: null,&#xd;
          &quot;amountInWords&quot;: &quot;&quot;,&#xd;
          &quot;relativePath&quot;: null,&#xd;
          &quot;listOfValues&quot;: null,&#xd;
          &quot;dataHash&quot;: null,&#xd;
          &quot;excludedVendorsForDifferentialRfq&quot;: null,&#xd;
          &quot;genInfoGrpId&quot;: null,&#xd;
          &quot;displayText&quot;: null&#xd;
        },&#xd;
        {&#xd;
          &quot;fieldtemplategroupId&quot;: 238088,&#xd;
          &quot;dataTypeId&quot;: 104,&#xd;
          &quot;templategroupId&quot;: 31485,&#xd;
          &quot;groupId&quot;: 2534,&#xd;
          &quot;indicatorType&quot;: &quot;&quot;,&#xd;
          &quot;controlTypeId&quot;: 108,&#xd;
          &quot;orgid&quot;: 606,&#xd;
          &quot;deptid&quot;: 606,&#xd;
          &quot;fieldId&quot;: null,&#xd;
          &quot;code&quot;: &quot;attach_file&quot;,&#xd;
          &quot;userType&quot;: &quot;S&quot;,&#xd;
          &quot;shortName&quot;: &quot;attach_file&quot;,&#xd;
          &quot;longName&quot;: &quot;Attach File&quot;,&#xd;
          &quot;minLength&quot;: 1,&#xd;
          &quot;maxLength&quot;: 200,&#xd;
          &quot;displayWidth&quot;: null,&#xd;
          &quot;displayHeight&quot;: null,&#xd;
          &quot;listValues&quot;: &quot;&quot;,&#xd;
          &quot;displaySize&quot;: &quot;M&quot;,&#xd;
          &quot;defaultValue&quot;: &quot;&quot;,&#xd;
          &quot;dataFormat&quot;: &quot;&quot;,&#xd;
          &quot;effectiveFrom&quot;: null,&#xd;
          &quot;effectiveTo&quot;: null,&#xd;
          &quot;status&quot;: &quot;A&quot;,&#xd;
          &quot;createid&quot;: 3989,&#xd;
          &quot;createdate&quot;: 1583130334000,&#xd;
          &quot;updateid&quot;: 3989,&#xd;
          &quot;updatedate&quot;: 1583130382000,&#xd;
          &quot;isActive&quot;: 1,&#xd;
          &quot;fieldType&quot;: &quot;&quot;,&#xd;
          &quot;tooltip&quot;: &quot;&quot;,&#xd;
          &quot;encrypted&quot;: &quot;D&quot;,&#xd;
          &quot;displayOrder&quot;: 3,&#xd;
          &quot;isFixedField&quot;: &quot;Y&quot;,&#xd;
          &quot;isEnabled&quot;: &quot;Y&quot;,&#xd;
          &quot;mandatory&quot;: &quot;N&quot;,&#xd;
          &quot;formula&quot;: &quot;&quot;,&#xd;
          &quot;validation&quot;: &quot;&quot;,&#xd;
          &quot;isVisible&quot;: &quot;Y&quot;,&#xd;
          &quot;isException&quot;: &quot;N&quot;,&#xd;
          &quot;value&quot;: &quot;${var_attachment_file}|${file_size}|${file_name}&quot;,&#xd;
          &quot;roleWiseFieldEntry&quot;: &quot;E&quot;,&#xd;
          &quot;groupTemplateFieldRoleExceptionList&quot;: null,&#xd;
          &quot;fieldValidationList&quot;: null,&#xd;
          &quot;aggregationtypeid&quot;: null,&#xd;
          &quot;isAggregation&quot;: &quot;N&quot;,&#xd;
          &quot;bidValueFlag&quot;: &quot;N&quot;,&#xd;
          &quot;itemWiseRankingFlag&quot;: &quot;&quot;,&#xd;
          &quot;fieldValEditableFlag&quot;: null,&#xd;
          &quot;amountInWords&quot;: &quot;&quot;,&#xd;
          &quot;relativePath&quot;: null,&#xd;
          &quot;listOfValues&quot;: null,&#xd;
          &quot;dataHash&quot;: &quot;22845ad5110e23816c2a3030951605dbf95668477e90d94551898e64016bc5ae&quot;,&#xd;
          &quot;excludedVendorsForDifferentialRfq&quot;: null,&#xd;
          &quot;genInfoGrpId&quot;: null,&#xd;
          &quot;displayText&quot;: null&#xd;
        },&#xd;
        {&#xd;
          &quot;fieldtemplategroupId&quot;: 238086,&#xd;
          &quot;dataTypeId&quot;: 101,&#xd;
          &quot;templategroupId&quot;: 31485,&#xd;
          &quot;groupId&quot;: 2534,&#xd;
          &quot;indicatorType&quot;: &quot;&quot;,&#xd;
          &quot;controlTypeId&quot;: 106,&#xd;
          &quot;orgid&quot;: 606,&#xd;
          &quot;deptid&quot;: 606,&#xd;
          &quot;fieldId&quot;: null,&#xd;
          &quot;code&quot;: &quot;visible&quot;,&#xd;
          &quot;userType&quot;: &quot;S&quot;,&#xd;
          &quot;shortName&quot;: &quot;visible&quot;,&#xd;
          &quot;longName&quot;: &quot;Visible To&quot;,&#xd;
          &quot;minLength&quot;: 1,&#xd;
          &quot;maxLength&quot;: 100,&#xd;
          &quot;displayWidth&quot;: null,&#xd;
          &quot;displayHeight&quot;: null,&#xd;
          &quot;listValues&quot;: &quot;BOTH,INTERNAL&quot;,&#xd;
          &quot;displaySize&quot;: &quot;M&quot;,&#xd;
          &quot;defaultValue&quot;: &quot;&quot;,&#xd;
          &quot;dataFormat&quot;: &quot;&quot;,&#xd;
          &quot;effectiveFrom&quot;: null,&#xd;
          &quot;effectiveTo&quot;: null,&#xd;
          &quot;status&quot;: &quot;A&quot;,&#xd;
          &quot;createid&quot;: 3989,&#xd;
          &quot;createdate&quot;: 1583130334000,&#xd;
          &quot;updateid&quot;: 3989,&#xd;
          &quot;updatedate&quot;: 1583130382000,&#xd;
          &quot;isActive&quot;: 1,&#xd;
          &quot;fieldType&quot;: &quot;&quot;,&#xd;
          &quot;tooltip&quot;: &quot;&quot;,&#xd;
          &quot;encrypted&quot;: &quot;D&quot;,&#xd;
          &quot;displayOrder&quot;: 4,&#xd;
          &quot;isFixedField&quot;: &quot;N&quot;,&#xd;
          &quot;isEnabled&quot;: &quot;Y&quot;,&#xd;
          &quot;mandatory&quot;: &quot;Y&quot;,&#xd;
          &quot;formula&quot;: &quot;&quot;,&#xd;
          &quot;validation&quot;: &quot;&quot;,&#xd;
          &quot;isVisible&quot;: &quot;Y&quot;,&#xd;
          &quot;isException&quot;: &quot;N&quot;,&#xd;
          &quot;value&quot;: &quot;${Visible_To}&quot;,&#xd;
          &quot;roleWiseFieldEntry&quot;: &quot;E&quot;,&#xd;
          &quot;groupTemplateFieldRoleExceptionList&quot;: null,&#xd;
          &quot;fieldValidationList&quot;: null,&#xd;
          &quot;aggregationtypeid&quot;: null,&#xd;
          &quot;isAggregation&quot;: &quot;N&quot;,&#xd;
          &quot;bidValueFlag&quot;: &quot;N&quot;,&#xd;
          &quot;itemWiseRankingFlag&quot;: &quot;&quot;,&#xd;
          &quot;fieldValEditableFlag&quot;: null,&#xd;
          &quot;amountInWords&quot;: &quot;&quot;,&#xd;
          &quot;relativePath&quot;: null,&#xd;
          &quot;listOfValues&quot;: null,&#xd;
          &quot;dataHash&quot;: null,&#xd;
          &quot;excludedVendorsForDifferentialRfq&quot;: null,&#xd;
          &quot;genInfoGrpId&quot;: null,&#xd;
          &quot;displayText&quot;: null,&#xd;
          &quot;UpdatedListValues&quot;: [&#xd;
            {&#xd;
              &quot;code&quot;: &quot;BOTH&quot;,&#xd;
              &quot;description&quot;: &quot;BOTH&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;code&quot;: &quot;INTERNAL&quot;,&#xd;
              &quot;description&quot;: &quot;INTERNAL&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;fieldtemplategroupId&quot;: 238089,&#xd;
          &quot;dataTypeId&quot;: 101,&#xd;
          &quot;templategroupId&quot;: 31485,&#xd;
          &quot;groupId&quot;: 2534,&#xd;
          &quot;indicatorType&quot;: &quot;&quot;,&#xd;
          &quot;controlTypeId&quot;: 105,&#xd;
          &quot;orgid&quot;: 606,&#xd;
          &quot;deptid&quot;: 606,&#xd;
          &quot;fieldId&quot;: null,&#xd;
          &quot;code&quot;: &quot;bidder_selection&quot;,&#xd;
          &quot;userType&quot;: &quot;S&quot;,&#xd;
          &quot;shortName&quot;: &quot;bidder_selection&quot;,&#xd;
          &quot;longName&quot;: &quot;Differential RFQ Bidder Selection&quot;,&#xd;
          &quot;minLength&quot;: 1,&#xd;
          &quot;maxLength&quot;: 3000,&#xd;
          &quot;displayWidth&quot;: null,&#xd;
          &quot;displayHeight&quot;: null,&#xd;
          &quot;listValues&quot;: &quot;Bidder 1,Bidder 2,Bidder 3&quot;,&#xd;
          &quot;displaySize&quot;: &quot;L&quot;,&#xd;
          &quot;defaultValue&quot;: &quot;&quot;,&#xd;
          &quot;dataFormat&quot;: &quot;&quot;,&#xd;
          &quot;effectiveFrom&quot;: null,&#xd;
          &quot;effectiveTo&quot;: null,&#xd;
          &quot;status&quot;: &quot;A&quot;,&#xd;
          &quot;createid&quot;: 3989,&#xd;
          &quot;createdate&quot;: 1583130334000,&#xd;
          &quot;updateid&quot;: 3989,&#xd;
          &quot;updatedate&quot;: 1583130382000,&#xd;
          &quot;isActive&quot;: 1,&#xd;
          &quot;fieldType&quot;: &quot;&quot;,&#xd;
          &quot;tooltip&quot;: &quot;&quot;,&#xd;
          &quot;encrypted&quot;: &quot;D&quot;,&#xd;
          &quot;displayOrder&quot;: 5,&#xd;
          &quot;isFixedField&quot;: &quot;Y&quot;,&#xd;
          &quot;isEnabled&quot;: &quot;Y&quot;,&#xd;
          &quot;mandatory&quot;: &quot;N&quot;,&#xd;
          &quot;formula&quot;: &quot;&quot;,&#xd;
          &quot;validation&quot;: &quot;&quot;,&#xd;
          &quot;isVisible&quot;: &quot;N&quot;,&#xd;
          &quot;isException&quot;: &quot;N&quot;,&#xd;
          &quot;value&quot;: &quot;&quot;,&#xd;
          &quot;roleWiseFieldEntry&quot;: &quot;E&quot;,&#xd;
          &quot;groupTemplateFieldRoleExceptionList&quot;: null,&#xd;
          &quot;fieldValidationList&quot;: null,&#xd;
          &quot;aggregationtypeid&quot;: null,&#xd;
          &quot;isAggregation&quot;: &quot;N&quot;,&#xd;
          &quot;bidValueFlag&quot;: &quot;N&quot;,&#xd;
          &quot;itemWiseRankingFlag&quot;: &quot;&quot;,&#xd;
          &quot;fieldValEditableFlag&quot;: null,&#xd;
          &quot;amountInWords&quot;: &quot;&quot;,&#xd;
          &quot;relativePath&quot;: null,&#xd;
          &quot;listOfValues&quot;: null,&#xd;
          &quot;dataHash&quot;: null,&#xd;
          &quot;excludedVendorsForDifferentialRfq&quot;: null,&#xd;
          &quot;genInfoGrpId&quot;: null,&#xd;
          &quot;displayText&quot;: null,&#xd;
          &quot;UpdatedListValues&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;differentialRfqFieldShow&quot;: false&#xd;
        }&#xd;
      ],&#xd;
      &quot;subProcess&quot;: null,&#xd;
      &quot;identifystring&quot;: null,&#xd;
      &quot;indexSerialNo&quot;: null,&#xd;
      &quot;excelRowNumber&quot;: null,&#xd;
      &quot;sorItemFlag&quot;: null,&#xd;
      &quot;tabWiseApproverComment&quot;: null,&#xd;
      &quot;bidableflag&quot;: null,&#xd;
      &quot;mandatory_flag&quot;: null,&#xd;
      &quot;mandatoryItem&quot;: null,&#xd;
      &quot;prePopulatedRfqData&quot;: 0,&#xd;
      &quot;corrAttachmentFlag&quot;: null,&#xd;
      &quot;bidSectionwiseApproverComment&quot;: null,&#xd;
      &quot;bidSectionwiseInitiotorComment&quot;: null,&#xd;
      &quot;itemParentCode&quot;: null,&#xd;
      &quot;itemCode&quot;: null,&#xd;
      &quot;templates&quot;: null,&#xd;
      &quot;tenderTemplateGroupId&quot;: 0,&#xd;
      &quot;relTablePrimaryKeyId&quot;: 0,&#xd;
      &quot;tablePrimaryKeyId&quot;: 0,&#xd;
      &quot;isValidated&quot;: null,&#xd;
      &quot;modifiedFlag&quot;: false,&#xd;
      &quot;itemActionFlag&quot;: null,&#xd;
      &quot;bidderWiseActivityDoneStatus&quot;: null,&#xd;
      &quot;excelUploadFlag&quot;: false,&#xd;
      &quot;paymenttypeId&quot;: null,&#xd;
      &quot;liveNodeItemFlag&quot;: &quot;Y&quot;,&#xd;
      &quot;dscPublicKey&quot;: null,&#xd;
      &quot;dscCertString&quot;: null,&#xd;
      &quot;isOriginal&quot;: null,&#xd;
      &quot;isAssigned&quot;: null,&#xd;
      &quot;sourceItemId&quot;: null,&#xd;
      &quot;mainItemQty&quot;: null,&#xd;
      &quot;dueDate&quot;: null,&#xd;
      &quot;descriptionTC&quot;: null,&#xd;
      &quot;isPaymentTerm&quot;: null,&#xd;
      &quot;isSpecialFileDownload&quot;: null,&#xd;
      &quot;itemQty&quot;: null,&#xd;
      &quot;isvalidExcel&quot;: false,&#xd;
      &quot;indentAttachmentFlag&quot;: null,&#xd;
      &quot;isQualifiedQuotationItem&quot;: null,&#xd;
      &quot;usedInCatalog&quot;: null,&#xd;
      &quot;oldItemCode&quot;: null,&#xd;
      &quot;fileSignHash&quot;: null,&#xd;
      &quot;isDownloadPossible&quot;: null,&#xd;
      &quot;filevisibleType&quot;: null,&#xd;
      &quot;aceptedOn&quot;: null,&#xd;
      &quot;qualDecTakenInLabelId&quot;: null,&#xd;
      &quot;mainEstimatedPrice&quot;: null,&#xd;
      &quot;isVisibleForMerge&quot;: true,&#xd;
      &quot;currentSanctionObjectPrimaryKey&quot;: 0,&#xd;
      &quot;validationMessage&quot;: null,&#xd;
      &quot;orderedQty&quot;: null,&#xd;
      &quot;poConsumedqty&quot;: null,&#xd;
      &quot;certSelectedUserName&quot;: null,&#xd;
      &quot;signBy&quot;: null,&#xd;
      &quot;signDate&quot;: null,&#xd;
      &quot;exemptionValue&quot;: null,&#xd;
      &quot;quotationItemDecryptList&quot;: null,&#xd;
      &quot;quotationDetailDecryptList&quot;: null,&#xd;
      &quot;quotationFeesMasterDecryptList&quot;: null,&#xd;
      &quot;quotAttachListMap&quot;: null,&#xd;
      &quot;eoiquotationDetailDecryptList&quot;: null,&#xd;
      &quot;eoiquotAttachListMap&quot;: null,&#xd;
      &quot;loadedData&quot;: 30,&#xd;
      &quot;mode&quot;: &quot;V&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;bidpartValue&quot;: &quot;1&amp;2&quot;,&#xd;
  &quot;tenderPreviewMap&quot;: null,&#xd;
  &quot;indent&quot;: null,&#xd;
  &quot;tenderVendors&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;fieldFormulaMap&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;pacamtAsString&quot;: &quot;10&quot;,&#xd;
  &quot;reviewMap&quot;: null,&#xd;
  &quot;integratedTemplateGrpId&quot;: null,&#xd;
  &quot;erpHeaderId&quot;: null,&#xd;
  &quot;prRfqidentifierNo&quot;: null,&#xd;
  &quot;indentAttachments&quot;: null,&#xd;
  &quot;poConsumingStatus&quot;: 1,&#xd;
  &quot;approvalWorkFlow&quot;: null,&#xd;
  &quot;tenderFeesList&quot;: null,&#xd;
  &quot;tenderItemList&quot;: null,&#xd;
  &quot;tenderDetailList&quot;: null,&#xd;
  &quot;tenderDetailForDeliveryLocationList&quot;: null,&#xd;
  &quot;certSelectedUserName&quot;: null,&#xd;
  &quot;quotationDecryptList&quot;: null,&#xd;
  &quot;certSelectedUserTime&quot;: null,&#xd;
  &quot;approvalCommentsAndAttachmentsDTOList&quot;: null,&#xd;
  &quot;templategroupids&quot;: [&#xd;
    &quot;31481&quot;&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/insertTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tenderApproval/validateDateForTender/12149" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tenderApproval/validateDateForTender/12149</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/tender/getSendForApprovalFlag?tenderId=12149&amp;groupId=2534&amp;isvisited=31483,31485,31479,31478,31481" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="groupId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">groupId</stringProp>
                  <stringProp name="Argument.value">2534</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isvisited" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isvisited</stringProp>
                  <stringProp name="Argument.value">31483,31485,31479,31478,31481</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">${VAR_TENDER_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getSendForApprovalFlag</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WorkFlowWeb/rest/workflow/getApprovalObject" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WorkFlowWeb/rest/workflow/getApprovalObject</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/user/getUserListByIdentifyStringAndRole?identifyString=606.&amp;roleIdString=3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="identifyString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">identifyString</stringProp>
                  <stringProp name="Argument.value">606.</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="roleIdString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">roleIdString</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/getUserListByIdentifyStringAndRole</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/organization/getAllOrganizationByParticularOrganization?orgId=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="orgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">orgId</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/organization/getAllOrganizationByParticularOrganization</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EPSV2Web/rest/master/designationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/designationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${AUTH_5}</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SEND FOR APPROVAL" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/WorkFlowWeb/rest/workflow/getApprovalDetailsByDocTypeAndUserId?docTypeId=2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="docTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">docTypeId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WorkFlowWeb/rest/workflow/getApprovalDetailsByDocTypeAndUserId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzA4MiwiaWF0IjoxNTg1OTgyMTgyLCJqdGkiOiI0MTcxIn0.vPsdLqAYSCm7zotV0EcSo48md4I0d1SQfSOjouM0A3M</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/previewTenderByTenderId?tenderId=12149" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">12149</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/previewTenderByTenderId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzA4MiwiaWF0IjoxNTg1OTgyMTgyLCJqdGkiOiI0MTcxIn0.vPsdLqAYSCm7zotV0EcSo48md4I0d1SQfSOjouM0A3M</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tenderApproval/validateDateForTender/12149" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tenderApproval/validateDateForTender/12149</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzA4MiwiaWF0IjoxNTg1OTgyMTgyLCJqdGkiOiI0MTcxIn0.vPsdLqAYSCm7zotV0EcSo48md4I0d1SQfSOjouM0A3M</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/WorkFlowWeb/rest/workflow/createworkflow" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;approvalId&quot;:0,&quot;documentTypeId&quot;:2,&quot;documentId&quot;:12149,&quot;workflowType&quot;:&quot;U&quot;,&quot;dopId&quot;:null,&quot;currentSequence&quot;:null,&quot;sectionwiseComment&quot;:&quot;N&quot;,&quot;initiatorComment&quot;:&quot;READY TO APPROVE.&quot;,&quot;recallComment&quot;:null,&quot;statusCode&quot;:&quot;P&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:null,&quot;createdate&quot;:null,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;systemDocNumber&quot;:1944,&quot;approvalStatus&quot;:null,&quot;statusCodeAtRollback&quot;:null,&quot;approvalDetails&quot;:[{&quot;approvalDetailId&quot;:null,&quot;approvalId&quot;:0,&quot;userId&quot;:4171,&quot;sequence&quot;:1,&quot;approvalType&quot;:&quot;S&quot;,&quot;refApprovalDetailId&quot;:0,&quot;coordinatorFlag&quot;:&quot;N&quot;,&quot;minAapproval&quot;:0,&quot;noOfBranches&quot;:0,&quot;branchNumber&quot;:0,&quot;overallComment&quot;:&quot;&quot;,&quot;branchComment&quot;:&quot;&quot;,&quot;statusCode&quot;:&quot;WIP&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585980767000,&quot;updateid&quot;:0,&quot;updatedate&quot;:1585980767000,&quot;originalSequenceNo&quot;:1,&quot;approvalRecievedDate&quot;:null,&quot;actionTakenDate&quot;:null,&quot;signHash&quot;:null,&quot;dscCertString&quot;:null,&quot;dscPublicKey&quot;:null,&quot;commentDtls&quot;:[{&quot;templategroupid&quot;:31483},{&quot;templategroupid&quot;:31485},{&quot;templategroupid&quot;:31479},{&quot;templategroupid&quot;:31478},{&quot;templategroupid&quot;:31481}],&quot;attachementDtls&quot;:[],&quot;bidderDetailList&quot;:[],&quot;userName&quot;:null,&quot;userEmail&quot;:null,&quot;userRole&quot;:null,&quot;addedBy&quot;:null,&quot;memberLevelId&quot;:null,&quot;memberType&quot;:null,&quot;remarks&quot;:null,&quot;nextLevelInitiatorComment&quot;:null}],&quot;userName&quot;:null,&quot;userRole&quot;:null,&quot;userEmail&quot;:null,&quot;comment&quot;:&quot;READY TO APPROVE.&quot;,&quot;entityId&quot;:12149,&quot;moduleType&quot;:&quot;T&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WorkFlowWeb/rest/workflow/createworkflow</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzA4MiwiaWF0IjoxNTg1OTgyMTgyLCJqdGkiOiI0MTcxIn0.vPsdLqAYSCm7zotV0EcSo48md4I0d1SQfSOjouM0A3M</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tenderApproval/updateTenderApprovalStatus?entityId=12149&amp;approvalFlag=Y" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;approverMap&quot;:{&quot;115&quot;:[{&quot;hmpForMailParameterInfo&quot;:{&quot;USER_FULL_NAME&quot;:4171,&quot;SYSTEM_DOC_NO&quot;:&quot;1944&quot;,&quot;HELPDESK_TIME&quot;:1585982388000,&quot;DEPARTMENT&quot;:&quot;1&quot;,&quot;HELPDESK_EMAIL&quot;:&quot;1&quot;,&quot;OVERALL_COMMENT&quot;:&quot;&quot;,&quot;ORGANIZATION&quot;:&quot;1&quot;,&quot;USER_FROM_FULL_NAME&quot;:0,&quot;DOC_TYPE&quot;:&quot;TENDER&quot;,&quot;CURRENT_STATUS&quot;:&quot;WIP&quot;,&quot;APPROVER_DETAILS&quot;:null,&quot;PREVIOUS_STATUS&quot;:&quot;WIP&quot;,&quot;HELPDESK_PHONE&quot;:&quot;1&quot;},&quot;extraInfo1&quot;:null,&quot;extraInfo2&quot;:null,&quot;extraInfo3&quot;:null,&quot;extraInfo4&quot;:null,&quot;extraInfo5&quot;:null,&quot;attribute_EVENT_ID&quot;:115,&quot;attribute_KEY_MAIL_TO&quot;:null,&quot;attribute_KEY_MAIL_CC&quot;:null,&quot;attribute_KEY_MAIL_BODY&quot;:null,&quot;attribute_KEY_MAIL_BCC&quot;:null,&quot;attribute_KEY_MAIL_SUBJECT&quot;:null,&quot;attribute_KEY_MAIL_FROM&quot;:null}]},&quot;workFlowStatus&quot;:&quot;WIP&quot;,&quot;returnMessages&quot;:[],&quot;remarks&quot;:null,&quot;approval&quot;:{&quot;approvalId&quot;:4702,&quot;documentTypeId&quot;:2,&quot;documentId&quot;:12149,&quot;workflowType&quot;:&quot;U&quot;,&quot;dopId&quot;:null,&quot;currentSequence&quot;:1,&quot;sectionwiseComment&quot;:&quot;N&quot;,&quot;initiatorComment&quot;:&quot;READY TO APPROVE.&quot;,&quot;recallComment&quot;:null,&quot;statusCode&quot;:&quot;WIP&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585982388000,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;systemDocNumber&quot;:&quot;1944&quot;,&quot;approvalStatus&quot;:null,&quot;statusCodeAtRollback&quot;:null,&quot;approvalDetails&quot;:[{&quot;approvalDetailId&quot;:9066,&quot;approvalId&quot;:4702,&quot;userId&quot;:4171,&quot;sequence&quot;:1,&quot;approvalType&quot;:&quot;S&quot;,&quot;refApprovalDetailId&quot;:0,&quot;coordinatorFlag&quot;:&quot;N&quot;,&quot;minAapproval&quot;:0,&quot;noOfBranches&quot;:0,&quot;branchNumber&quot;:0,&quot;overallComment&quot;:&quot;&quot;,&quot;branchComment&quot;:&quot;&quot;,&quot;statusCode&quot;:&quot;WIP&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585982388000,&quot;updateid&quot;:0,&quot;updatedate&quot;:1585982388000,&quot;originalSequenceNo&quot;:1,&quot;approvalRecievedDate&quot;:1585982388000,&quot;actionTakenDate&quot;:null,&quot;signHash&quot;:null,&quot;dscCertString&quot;:null,&quot;dscPublicKey&quot;:null,&quot;commentDtls&quot;:[{&quot;approvalCommentDtlsId&quot;:null,&quot;approvalDetailId&quot;:null,&quot;documentTypeid&quot;:null,&quot;documentid&quot;:null,&quot;referenceid&quot;:null,&quot;templategroupid&quot;:31483,&quot;userid&quot;:null,&quot;comment&quot;:null,&quot;isActive&quot;:1,&quot;createid&quot;:null,&quot;createdate&quot;:null,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;bidderId&quot;:null},{&quot;approvalCommentDtlsId&quot;:null,&quot;approvalDetailId&quot;:null,&quot;documentTypeid&quot;:null,&quot;documentid&quot;:null,&quot;referenceid&quot;:null,&quot;templategroupid&quot;:31485,&quot;userid&quot;:null,&quot;comment&quot;:null,&quot;isActive&quot;:1,&quot;createid&quot;:null,&quot;createdate&quot;:null,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;bidderId&quot;:null},{&quot;approvalCommentDtlsId&quot;:null,&quot;approvalDetailId&quot;:null,&quot;documentTypeid&quot;:null,&quot;documentid&quot;:null,&quot;referenceid&quot;:null,&quot;templategroupid&quot;:31479,&quot;userid&quot;:null,&quot;comment&quot;:null,&quot;isActive&quot;:1,&quot;createid&quot;:null,&quot;createdate&quot;:null,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;bidderId&quot;:null},{&quot;approvalCommentDtlsId&quot;:null,&quot;approvalDetailId&quot;:null,&quot;documentTypeid&quot;:null,&quot;documentid&quot;:null,&quot;referenceid&quot;:null,&quot;templategroupid&quot;:31478,&quot;userid&quot;:null,&quot;comment&quot;:null,&quot;isActive&quot;:1,&quot;createid&quot;:null,&quot;createdate&quot;:null,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;bidderId&quot;:null},{&quot;approvalCommentDtlsId&quot;:null,&quot;approvalDetailId&quot;:null,&quot;documentTypeid&quot;:null,&quot;documentid&quot;:null,&quot;referenceid&quot;:null,&quot;templategroupid&quot;:31481,&quot;userid&quot;:null,&quot;comment&quot;:null,&quot;isActive&quot;:1,&quot;createid&quot;:null,&quot;createdate&quot;:null,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;bidderId&quot;:null}],&quot;attachementDtls&quot;:[],&quot;bidderDetailList&quot;:[],&quot;userName&quot;:null,&quot;userEmail&quot;:null,&quot;userRole&quot;:null,&quot;addedBy&quot;:null,&quot;memberLevelId&quot;:null,&quot;memberType&quot;:null,&quot;remarks&quot;:null,&quot;nextLevelInitiatorComment&quot;:null}],&quot;userName&quot;:null,&quot;userRole&quot;:null,&quot;userEmail&quot;:null},&quot;isEligible&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tenderApproval/updateTenderApprovalStatus?entityId=12149&amp;approvalFlag=Y</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzA4MiwiaWF0IjoxNTg1OTgyMTgyLCJqdGkiOiI0MTcxIn0.vPsdLqAYSCm7zotV0EcSo48md4I0d1SQfSOjouM0A3M</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/tender/listTender.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzA4MiwiaWF0IjoxNTg1OTgyMTgyLCJqdGkiOiI0MTcxIn0.vPsdLqAYSCm7zotV0EcSo48md4I0d1SQfSOjouM0A3M</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value">menu.tender</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/tender/listTender.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">212379.0</stringProp>
              <stringProp name="ConstantTimer.delay">106189.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 212379 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/statusNtenderEvaluationState" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/statusNtenderEvaluationState</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/getApproverType/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getApproverType/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/designationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/designationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/showRfqCategoryRfqTypeProcCatBidPartList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/showRfqCategoryRfqTypeProcCatBidPartList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/tenderState" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/tenderState</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/showRfqCategoryRfqTypeProcCatBidPartList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/showRfqCategoryRfqTypeProcCatBidPartList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/organization/loadOrgLevelInfoMap" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/organization/loadOrgLevelInfoMap</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/showTenderList?tabId=MyTender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tabId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tabId</stringProp>
                  <stringProp name="Argument.value">MyTender</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/showTenderList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="WORKFLOW-PENDING" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/general/pageNavigateEvent" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="menuKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">menuKey</stringProp>
                  <stringProp name="Argument.value">menu.workflow.pending</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/pageNavigateEvent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=----WebKitFormBoundaryFOYPOf4LIt2mdMkJ</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=----WebKitFormBoundaryFOYPOf4LIt2mdMkJ</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/tenderApproval/getTenderListForApproval.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzI5NCwiaWF0IjoxNTg1OTgyMzk0LCJqdGkiOiI0MTcxIn0.TQnPoYGzy7BGjhrB1TQEmh4J3-cRz0p8t6fb4MEWMKU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value">menu.workflow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/tenderApproval/getTenderListForApproval.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">52654.0</stringProp>
              <stringProp name="ConstantTimer.delay">26327</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 52654 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM0NywiaWF0IjoxNTg1OTgyNDQ3LCJqdGkiOiI0MTcxIn0.5ycpzSjlcF4gs7YeGzdxE-JNHkhWc-AHGcfXg9geMwk</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM0NywiaWF0IjoxNTg1OTgyNDQ3LCJqdGkiOiI0MTcxIn0.5ycpzSjlcF4gs7YeGzdxE-JNHkhWc-AHGcfXg9geMwk</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM0NywiaWF0IjoxNTg1OTgyNDQ3LCJqdGkiOiI0MTcxIn0.5ycpzSjlcF4gs7YeGzdxE-JNHkhWc-AHGcfXg9geMwk" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM0NywiaWF0IjoxNTg1OTgyNDQ3LCJqdGkiOiI0MTcxIn0.5ycpzSjlcF4gs7YeGzdxE-JNHkhWc-AHGcfXg9geMwk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM0NywiaWF0IjoxNTg1OTgyNDQ3LCJqdGkiOiI0MTcxIn0.5ycpzSjlcF4gs7YeGzdxE-JNHkhWc-AHGcfXg9geMwk</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/statusNtenderEvaluationState" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/statusNtenderEvaluationState</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM0NywiaWF0IjoxNTg1OTgyNDQ3LCJqdGkiOiI0MTcxIn0.5ycpzSjlcF4gs7YeGzdxE-JNHkhWc-AHGcfXg9geMwk</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/bidactivity/getApprovalListByUser?documentType=10&amp;statusCode=pending" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="documentType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentType</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="statusCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statusCode</stringProp>
                  <stringProp name="Argument.value">pending</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/bidactivity/getApprovalListByUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM0NywiaWF0IjoxNTg1OTgyNDQ3LCJqdGkiOiI0MTcxIn0.5ycpzSjlcF4gs7YeGzdxE-JNHkhWc-AHGcfXg9geMwk</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM0NywiaWF0IjoxNTg1OTgyNDQ3LCJqdGkiOiI0MTcxIn0.5ycpzSjlcF4gs7YeGzdxE-JNHkhWc-AHGcfXg9geMwk</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tenderApproval/geDocumentsByApprover?documentTypeId=2&amp;statusCode=pending" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="documentTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentTypeId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="statusCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statusCode</stringProp>
                  <stringProp name="Argument.value">pending</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tenderApproval/geDocumentsByApprover</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM0NywiaWF0IjoxNTg1OTgyNDQ3LCJqdGkiOiI0MTcxIn0.5ycpzSjlcF4gs7YeGzdxE-JNHkhWc-AHGcfXg9geMwk</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OPEN TENDER DETAILS" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/approval/actionPage/tender.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">12149</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">12149</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM0NywiaWF0IjoxNTg1OTgyNDQ3LCJqdGkiOiI0MTcxIn0.5ycpzSjlcF4gs7YeGzdxE-JNHkhWc-AHGcfXg9geMwk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value">menu.workflow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">9066</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">4702</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/approval/actionPage/tender.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">39363.0</stringProp>
              <stringProp name="ConstantTimer.delay">19681.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 39363 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/getUomList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getUomList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/ebriefcase/getEBriefcasePerUser?catId=0&amp;status=A" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="catId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">catId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/ebriefcase/getEBriefcasePerUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/ebriefcase/getEBriefcaseCategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/ebriefcase/getEBriefcaseCategory</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/IndentWeb/rest/master/getBudegtHeadList?orgId=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="orgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">orgId</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">IndentWeb/rest/master/getBudegtHeadList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/getApproverType/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getApproverType/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/vendor/loadVendorListByItemGroup?itemGroupId=0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="itemGroupId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">itemGroupId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/vendor/loadVendorListByItemGroup</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/getMasterTemplate" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getMasterTemplate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/getTenderListForRecallTender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderListForRecallTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/getFeesTypeList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFeesTypeList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/WorkFlowWeb/rest/workflow/getApprovalDetailsByDocId?documentId=12149&amp;documentType=2&amp;approvalId=4702" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="documentType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentType</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="documentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentId</stringProp>
                  <stringProp name="Argument.value">12149</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">4702</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WorkFlowWeb/rest/workflow/getApprovalDetailsByDocId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/user/geLoggedInUserDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/geLoggedInUserDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/getTender?tenderId=12149&amp;userRoleId=3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userRoleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userRoleId</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">12149</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/getTenderCategoryByGroupId?groupId=2534" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="groupId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">groupId</stringProp>
                  <stringProp name="Argument.value">2534</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderCategoryByGroupId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="APPROVER COMMENT" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/WorkFlowWeb/rest/workflow/getApprovalDetailsByDocId?documentId=12149&amp;documentType=2&amp;approvalId=4702" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="documentType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentType</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="documentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentId</stringProp>
                  <stringProp name="Argument.value">12149</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">4702</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WorkFlowWeb/rest/workflow/getApprovalDetailsByDocId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="APPROVE TENDER" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tenderApproval/submitFromApprover?status=A" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;approvalId&quot;:4702,&quot;documentTypeId&quot;:2,&quot;documentId&quot;:12149,&quot;workflowType&quot;:&quot;U&quot;,&quot;dopId&quot;:null,&quot;currentSequence&quot;:1,&quot;sectionwiseComment&quot;:&quot;N&quot;,&quot;initiatorComment&quot;:&quot;READY TO APPROVE.&quot;,&quot;recallComment&quot;:null,&quot;statusCode&quot;:&quot;WIP&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585982388000,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;systemDocNumber&quot;:&quot;1944&quot;,&quot;approvalStatus&quot;:null,&quot;statusCodeAtRollback&quot;:null,&quot;approvalDetails&quot;:[{&quot;approvalDetailId&quot;:9066,&quot;approvalId&quot;:4702,&quot;userId&quot;:4171,&quot;sequence&quot;:1,&quot;approvalType&quot;:&quot;S&quot;,&quot;refApprovalDetailId&quot;:0,&quot;coordinatorFlag&quot;:&quot;N&quot;,&quot;minAapproval&quot;:0,&quot;noOfBranches&quot;:0,&quot;branchNumber&quot;:0,&quot;overallComment&quot;:&quot;EVERYTHING IS OK.&quot;,&quot;branchComment&quot;:&quot;&quot;,&quot;statusCode&quot;:&quot;WIP&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585982388000,&quot;updateid&quot;:0,&quot;updatedate&quot;:1585982388000,&quot;originalSequenceNo&quot;:1,&quot;approvalRecievedDate&quot;:1585982388000,&quot;actionTakenDate&quot;:null,&quot;signHash&quot;:null,&quot;commentDtls&quot;:[],&quot;attachementDtls&quot;:[],&quot;bidderDetailList&quot;:[],&quot;userName&quot;:&quot;Buyer User 4&quot;,&quot;userEmail&quot;:&quot;amit.podder@mjunction.in&quot;,&quot;userRole&quot;:null,&quot;addedBy&quot;:null,&quot;memberLevelId&quot;:null,&quot;memberType&quot;:null,&quot;remarks&quot;:null,&quot;nextLevelInitiatorComment&quot;:null,&quot;$$hashKey&quot;:&quot;object:703&quot;}],&quot;userName&quot;:&quot;Buyer User 4&quot;,&quot;userRole&quot;:null,&quot;userEmail&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tenderApproval/submitFromApprover?status=A</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tenderApproval/updateTenderApprovalStatus?entityId=12149&amp;approvalFlag=Y" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;approverMap&quot;:{&quot;113&quot;:[{&quot;hmpForMailParameterInfo&quot;:{&quot;USER_FULL_NAME&quot;:4171,&quot;SYSTEM_DOC_NO&quot;:&quot;1944&quot;,&quot;HELPDESK_TIME&quot;:1585982543000,&quot;DEPARTMENT&quot;:&quot;1&quot;,&quot;HELPDESK_EMAIL&quot;:&quot;1&quot;,&quot;OVERALL_COMMENT&quot;:&quot;EVERYTHING IS OK.&quot;,&quot;ORGANIZATION&quot;:&quot;1&quot;,&quot;USER_FROM_FULL_NAME&quot;:0,&quot;DOC_TYPE&quot;:&quot;TENDER&quot;,&quot;CURRENT_STATUS&quot;:&quot;C&quot;,&quot;APPROVER_DETAILS&quot;:null,&quot;PREVIOUS_STATUS&quot;:&quot;WIP&quot;,&quot;HELPDESK_PHONE&quot;:&quot;1&quot;},&quot;extraInfo1&quot;:null,&quot;extraInfo2&quot;:null,&quot;extraInfo3&quot;:null,&quot;extraInfo4&quot;:null,&quot;extraInfo5&quot;:null,&quot;attribute_EVENT_ID&quot;:113,&quot;attribute_KEY_MAIL_TO&quot;:null,&quot;attribute_KEY_MAIL_CC&quot;:null,&quot;attribute_KEY_MAIL_BODY&quot;:null,&quot;attribute_KEY_MAIL_BCC&quot;:null,&quot;attribute_KEY_MAIL_SUBJECT&quot;:null,&quot;attribute_KEY_MAIL_FROM&quot;:null}]},&quot;workFlowStatus&quot;:&quot;C&quot;,&quot;returnMessages&quot;:[],&quot;remarks&quot;:null,&quot;approval&quot;:{&quot;approvalId&quot;:4702,&quot;documentTypeId&quot;:2,&quot;documentId&quot;:12149,&quot;workflowType&quot;:&quot;U&quot;,&quot;dopId&quot;:null,&quot;currentSequence&quot;:1,&quot;sectionwiseComment&quot;:&quot;N&quot;,&quot;initiatorComment&quot;:&quot;READY TO APPROVE.&quot;,&quot;recallComment&quot;:null,&quot;statusCode&quot;:&quot;C&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585982388000,&quot;updateid&quot;:4171,&quot;updatedate&quot;:1585982542000,&quot;systemDocNumber&quot;:&quot;1944&quot;,&quot;approvalStatus&quot;:null,&quot;statusCodeAtRollback&quot;:null,&quot;approvalDetails&quot;:[{&quot;approvalDetailId&quot;:9066,&quot;approvalId&quot;:4702,&quot;userId&quot;:4171,&quot;sequence&quot;:1,&quot;approvalType&quot;:&quot;S&quot;,&quot;refApprovalDetailId&quot;:0,&quot;coordinatorFlag&quot;:&quot;N&quot;,&quot;minAapproval&quot;:0,&quot;noOfBranches&quot;:0,&quot;branchNumber&quot;:0,&quot;overallComment&quot;:&quot;EVERYTHING IS OK.&quot;,&quot;branchComment&quot;:&quot;&quot;,&quot;statusCode&quot;:&quot;A&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585982388000,&quot;updateid&quot;:4171,&quot;updatedate&quot;:1585982543000,&quot;originalSequenceNo&quot;:1,&quot;approvalRecievedDate&quot;:1585982388000,&quot;actionTakenDate&quot;:1585982543000,&quot;signHash&quot;:null,&quot;dscCertString&quot;:null,&quot;dscPublicKey&quot;:null,&quot;commentDtls&quot;:[],&quot;attachementDtls&quot;:[],&quot;bidderDetailList&quot;:[],&quot;userName&quot;:null,&quot;userEmail&quot;:null,&quot;userRole&quot;:null,&quot;addedBy&quot;:null,&quot;memberLevelId&quot;:null,&quot;memberType&quot;:null,&quot;remarks&quot;:null,&quot;nextLevelInitiatorComment&quot;:null}],&quot;userName&quot;:null,&quot;userRole&quot;:null,&quot;userEmail&quot;:null},&quot;isEligible&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tenderApproval/updateTenderApprovalStatus?entityId=12149&amp;approvalFlag=Y</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/tenderApproval/getTenderListForApproval.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzM4NiwiaWF0IjoxNTg1OTgyNDg2LCJqdGkiOiI0MTcxIn0.se9VmlRfzOFz_0AUWs7AnPhUJ31t8iTIw0Ryet-idqM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value">menu.workflow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/tenderApproval/getTenderListForApproval.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">64061.0</stringProp>
              <stringProp name="ConstantTimer.delay">32030.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 64061 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzQ1MSwiaWF0IjoxNTg1OTgyNTUxLCJqdGkiOiI0MTcxIn0.8-qpaunlNMxXZUSZa8iOCQeesPfzDsEVPr_4IaIJCKE</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzQ1MSwiaWF0IjoxNTg1OTgyNTUxLCJqdGkiOiI0MTcxIn0.8-qpaunlNMxXZUSZa8iOCQeesPfzDsEVPr_4IaIJCKE</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzQ1MSwiaWF0IjoxNTg1OTgyNTUxLCJqdGkiOiI0MTcxIn0.8-qpaunlNMxXZUSZa8iOCQeesPfzDsEVPr_4IaIJCKE" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzQ1MSwiaWF0IjoxNTg1OTgyNTUxLCJqdGkiOiI0MTcxIn0.8-qpaunlNMxXZUSZa8iOCQeesPfzDsEVPr_4IaIJCKE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzQ1MSwiaWF0IjoxNTg1OTgyNTUxLCJqdGkiOiI0MTcxIn0.8-qpaunlNMxXZUSZa8iOCQeesPfzDsEVPr_4IaIJCKE</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/statusNtenderEvaluationState" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/statusNtenderEvaluationState</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzQ1MSwiaWF0IjoxNTg1OTgyNTUxLCJqdGkiOiI0MTcxIn0.8-qpaunlNMxXZUSZa8iOCQeesPfzDsEVPr_4IaIJCKE</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/bidactivity/getApprovalListByUser?documentType=10&amp;statusCode=pending" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="documentType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentType</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="statusCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statusCode</stringProp>
                  <stringProp name="Argument.value">pending</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/bidactivity/getApprovalListByUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzQ1MSwiaWF0IjoxNTg1OTgyNTUxLCJqdGkiOiI0MTcxIn0.8-qpaunlNMxXZUSZa8iOCQeesPfzDsEVPr_4IaIJCKE</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzQ1MSwiaWF0IjoxNTg1OTgyNTUxLCJqdGkiOiI0MTcxIn0.8-qpaunlNMxXZUSZa8iOCQeesPfzDsEVPr_4IaIJCKE</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LOGOUT" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/login/logout.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MzQ1MSwiaWF0IjoxNTg1OTgyNTUxLCJqdGkiOiI0MTcxIn0.8-qpaunlNMxXZUSZa8iOCQeesPfzDsEVPr_4IaIJCKE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value">menu.workflow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/login/logout.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">34427.0</stringProp>
              <stringProp name="ConstantTimer.delay">17213.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 34427 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">979.0</stringProp>
              <stringProp name="ConstantTimer.delay">489.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 979 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/login/provideTokenObject" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/login/provideTokenObject</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/general/getAllMessageList?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjowLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiU1lTVEVNIiwidmVuZG9ySWQiOjAsImV4cCI6MTU4NTk4MzQ5MCwidXNlclJvbGVMaXN0IjpudWxsLCJiaWRkZXJDb21wYW55TmFtZSI6bnVsbCwiaWF0IjoxNTg1OTgyNTkwLCJ1c2VyQ29kZSI6bnVsbCwianRpIjoiODc0NTYxNjMxIn0.3vIt2nkbAy-XlmgOLhAOLe6gybtgOKgA4Yv2FyTZUvo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjowLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiU1lTVEVNIiwidmVuZG9ySWQiOjAsImV4cCI6MTU4NTk4MzQ5MCwidXNlclJvbGVMaXN0IjpudWxsLCJiaWRkZXJDb21wYW55TmFtZSI6bnVsbCwiaWF0IjoxNTg1OTgyNTkwLCJ1c2VyQ29kZSI6bnVsbCwianRpIjoiODc0NTYxNjMxIn0.3vIt2nkbAy-XlmgOLhAOLe6gybtgOKgA4Yv2FyTZUvo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllMessageList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjowLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiU1lTVEVNIiwidmVuZG9ySWQiOjAsImV4cCI6MTU4NTk4MzQ5MCwidXNlclJvbGVMaXN0IjpudWxsLCJiaWRkZXJDb21wYW55TmFtZSI6bnVsbCwiaWF0IjoxNTg1OTgyNTkwLCJ1c2VyQ29kZSI6bnVsbCwianRpIjoiODc0NTYxNjMxIn0.3vIt2nkbAy-XlmgOLhAOLe6gybtgOKgA4Yv2FyTZUvo</stringProp>
                </elementProp>
                <elementProp name="X-Login-Ajax-call" elementType="Header">
                  <stringProp name="Header.name">X-Login-Ajax-call</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
