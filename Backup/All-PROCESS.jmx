<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="4.0">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="All PROCESS" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.2.3.14. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">ofbtraining.mjunction.in</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager">
        <collectionProp name="AuthManager.auth_list"/>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="WORKFLOW - PENDING" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTY3MywiaWF0IjoxNTg1OTgwNzczLCJqdGkiOiI0MTcxIn0.WdjS5rPvYWArWwX13GXpkzioD86TekHSnag3XzGdllA</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=----WebKitFormBoundaryJYQNaAuA9ijVwB26</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/login/provideTokenObject" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/login/provideTokenObject</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/general/getAllMessageList?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjowLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiU1lTVEVNIiwidmVuZG9ySWQiOjAsImV4cCI6MTU4NTk4MDk1OSwidXNlclJvbGVMaXN0IjpudWxsLCJiaWRkZXJDb21wYW55TmFtZSI6bnVsbCwiaWF0IjoxNTg1OTgwMDU5LCJ1c2VyQ29kZSI6bnVsbCwianRpIjoiMjU2MzAxNzY0In0.sZgrBfIBaOKwiSrtugFeG98JsOW03zyUYEhNqxQcADw" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjowLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiU1lTVEVNIiwidmVuZG9ySWQiOjAsImV4cCI6MTU4NTk4MDk1OSwidXNlclJvbGVMaXN0IjpudWxsLCJiaWRkZXJDb21wYW55TmFtZSI6bnVsbCwiaWF0IjoxNTg1OTgwMDU5LCJ1c2VyQ29kZSI6bnVsbCwianRpIjoiMjU2MzAxNzY0In0.sZgrBfIBaOKwiSrtugFeG98JsOW03zyUYEhNqxQcADw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllMessageList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjowLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiU1lTVEVNIiwidmVuZG9ySWQiOjAsImV4cCI6MTU4NTk4MDk1OSwidXNlclJvbGVMaXN0IjpudWxsLCJiaWRkZXJDb21wYW55TmFtZSI6bnVsbCwiaWF0IjoxNTg1OTgwMDU5LCJ1c2VyQ29kZSI6bnVsbCwianRpIjoiMjU2MzAxNzY0In0.sZgrBfIBaOKwiSrtugFeG98JsOW03zyUYEhNqxQcADw</stringProp>
                </elementProp>
                <elementProp name="X-Login-Ajax-call" elementType="Header">
                  <stringProp name="Header.name">X-Login-Ajax-call</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/login/provideCaptcha.action?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjowLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiU1lTVEVNIiwidmVuZG9ySWQiOjAsImV4cCI6MTU4NTk4MTAwNCwidXNlclJvbGVMaXN0IjpudWxsLCJiaWRkZXJDb21wYW55TmFtZSI6bnVsbCwiaWF0IjoxNTg1OTgwMTA0LCJ1c2VyQ29kZSI6bnVsbCwianRpIjoiMjkxOTEyMzUyIn0.x9u7ooHW4hGmvyQ0FSvmHZFOkg2frUzi9wRsIom51c4&amp;date=Sat%20Apr%2004%202020%2011:31:45%20GMT+0530%20(India%20Standard%20Time)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjowLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiU1lTVEVNIiwidmVuZG9ySWQiOjAsImV4cCI6MTU4NTk4MTAwNCwidXNlclJvbGVMaXN0IjpudWxsLCJiaWRkZXJDb21wYW55TmFtZSI6bnVsbCwiaWF0IjoxNTg1OTgwMTA0LCJ1c2VyQ29kZSI6bnVsbCwianRpIjoiMjkxOTEyMzUyIn0.x9u7ooHW4hGmvyQ0FSvmHZFOkg2frUzi9wRsIom51c4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="date" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">date</stringProp>
                  <stringProp name="Argument.value">Sat Apr 04 2020 11:31:45 GMT 0530 (India Standard Time)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/login/provideCaptcha.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjowLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiU1lTVEVNIiwidmVuZG9ySWQiOjAsImV4cCI6MTU4NTk4MTAwNCwidXNlclJvbGVMaXN0IjpudWxsLCJiaWRkZXJDb21wYW55TmFtZSI6bnVsbCwiaWF0IjoxNTg1OTgwMTA0LCJ1c2VyQ29kZSI6bnVsbCwianRpIjoiMjkxOTEyMzUyIn0.x9u7ooHW4hGmvyQ0FSvmHZFOkg2frUzi9wRsIom51c4</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/login/login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rememberme&quot;:false,&quot;captcha&quot;:&quot;n1zUT&quot;,&quot;userCode&quot;:&quot;PT_BUYER_004&quot;,&quot;password&quot;:&quot;$2a$12$PT1BUYER1004123456789uiVDMFDAsgqbXZepPvBqU1oJCeHoLape&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/login/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjowLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiU1lTVEVNIiwidmVuZG9ySWQiOjAsImV4cCI6MTU4NTk4MTAwNCwidXNlclJvbGVMaXN0IjpudWxsLCJiaWRkZXJDb21wYW55TmFtZSI6bnVsbCwiaWF0IjoxNTg1OTgwMTA0LCJ1c2VyQ29kZSI6bnVsbCwianRpIjoiMjkxOTEyMzUyIn0.x9u7ooHW4hGmvyQ0FSvmHZFOkg2frUzi9wRsIom51c4</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8;</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTc5OCwiaWF0IjoxNTg1OTgwODk4LCJqdGkiOiI0MTcxIn0.i4YFf3u0PYo76JdxDCqB4iX3GjvONBbxd6Fh1QHVUDE</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/login/loginDashboard.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="loginSignUserId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loginSignUserId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="destField" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">destField</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getInfo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">getInfo</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pkiEnabledFlag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pkiEnabledFlag</stringProp>
                  <stringProp name="Argument.value">N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="callBackMethodName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">callBackMethodName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="methodName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">methodName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="orgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgId</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="loginSignHash" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loginSignHash</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiQnV5ZXIiLCJ2ZW5kb3JJZCI6MCwiZXhwIjoxNTg1OTgxMDMzLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJpYXQiOjE1ODU5ODAxMzMsInVzZXJDb2RlIjoiUFRfQlVZRVJfMDA0IiwianRpIjoiNDE3MSJ9.EE7HWjIzmax9VL_g0OBmZN5KRIP1O_itME2XyFbptMQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="serverDateValue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">serverDateValue</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dscCertString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dscCertString</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="paramString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">paramString</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="macAddress" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">macAddress</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isShowDialog" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isShowDialog</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dscPublicKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dscPublicKey</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="textForSign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">textForSign</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cancelCallBackMethodName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cancelCallBackMethodName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hrserverDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hrserverDate</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="loginDetailsUpdateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loginDetailsUpdateId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/login/loginDashboard.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>0.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTc5OCwiaWF0IjoxNTg1OTgwODk4LCJqdGkiOiI0MTcxIn0.i4YFf3u0PYo76JdxDCqB4iX3GjvONBbxd6Fh1QHVUDE</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTc5OCwiaWF0IjoxNTg1OTgwODk4LCJqdGkiOiI0MTcxIn0.i4YFf3u0PYo76JdxDCqB4iX3GjvONBbxd6Fh1QHVUDE</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[9]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTc5OCwiaWF0IjoxNTg1OTgwODk4LCJqdGkiOiI0MTcxIn0.i4YFf3u0PYo76JdxDCqB4iX3GjvONBbxd6Fh1QHVUDE" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTc5OCwiaWF0IjoxNTg1OTgwODk4LCJqdGkiOiI0MTcxIn0.i4YFf3u0PYo76JdxDCqB4iX3GjvONBbxd6Fh1QHVUDE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTc5OCwiaWF0IjoxNTg1OTgwODk4LCJqdGkiOiI0MTcxIn0.i4YFf3u0PYo76JdxDCqB4iX3GjvONBbxd6Fh1QHVUDE</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[10]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/dashboard/getDashboardData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/dashboard/getDashboardData</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTAzNywiaWF0IjoxNTg1OTgwMTM3LCJqdGkiOiI0MTcxIn0.tDIls_2N3zq64MplsbenzuwQhxGR5gIS5R2eVgObIR8</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[11]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/general/pageNavigateEvent" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="menuKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">menuKey</stringProp>
                  <stringProp name="Argument.value">menu.workflow.pending</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/pageNavigateEvent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTY3MywiaWF0IjoxNTg1OTgwNzczLCJqdGkiOiI0MTcxIn0.WdjS5rPvYWArWwX13GXpkzioD86TekHSnag3XzGdllA</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=----WebKitFormBoundaryJYQNaAuA9ijVwB26</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[12]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/tender/tender.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">12148</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isIntegratedTender" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isIntegratedTender</stringProp>
                  <stringProp name="Argument.value">N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTEwNiwiaWF0IjoxNTg1OTgwMjA2LCJqdGkiOiI0MTcxIn0.cUbEfe0nbpEJJ0dZEv4bL3LrrOppjJsi6gUoNxWmeF4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="documentNo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">documentNo</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value">menu.tender</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/tender/tender.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[13]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>262555.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">131277.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 262555 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/getUomList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getUomList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[14]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[15]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/ebriefcase/getEBriefcasePerUser?catId=0&amp;status=A" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="catId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">catId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/ebriefcase/getEBriefcasePerUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[16]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/ebriefcase/getEBriefcaseCategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/ebriefcase/getEBriefcaseCategory</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[17]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/IndentWeb/rest/master/getBudegtHeadList?orgId=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="orgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">orgId</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">IndentWeb/rest/master/getBudegtHeadList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[18]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/getApproverType/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getApproverType/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTY3MywiaWF0IjoxNTg1OTgwNzczLCJqdGkiOiI0MTcxIn0.WdjS5rPvYWArWwX13GXpkzioD86TekHSnag3XzGdllA</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[19]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/vendor/loadVendorListByItemGroup?itemGroupId=0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="itemGroupId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">itemGroupId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/vendor/loadVendorListByItemGroup</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[20]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/getMasterTemplate" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getMasterTemplate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[21]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/getTenderListForRecallTender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderListForRecallTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[22]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/getFeesTypeList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFeesTypeList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[23]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/user/geLoggedInUserDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/geLoggedInUserDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[24]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/getTenderCategoryByGroupId?groupId=2534" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="groupId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">groupId</stringProp>
                  <stringProp name="Argument.value">2534</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderCategoryByGroupId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[25]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/insertTender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;tenderid&quot;:12148,&quot;tenderrefno&quot;:&quot;TEST REFERENCE 1&quot;,&quot;groupid&quot;:&quot;2534&quot;,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;tendertypeid&quot;:&quot;101&quot;,&quot;tendercatid&quot;:&quot;104&quot;,&quot;proccatid&quot;:&quot;1553&quot;,&quot;pacamt&quot;:&quot;10&quot;,&quot;budgetheadids&quot;:null,&quot;status&quot;:1,&quot;auctionflag&quot;:&quot;N&quot;,&quot;auctiontype&quot;:null,&quot;initiateauction&quot;:null,&quot;description&quot;:&quot;TEST TENDER CREATION&quot;,&quot;ownerdegitalcertid&quot;:null,&quot;tendercurrency&quot;:&quot;INR&quot;,&quot;bidcurrency&quot;:&quot;INR&quot;,&quot;minbidno&quot;:100,&quot;tendercallno&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585980397395,&quot;updateid&quot;:4171,&quot;updatedate&quot;:1585980397000,&quot;isactive&quot;:1,&quot;bidPartNo&quot;:&quot;1&quot;,&quot;queryString&quot;:&quot;606.&quot;,&quot;parentid&quot;:&quot;0&quot;,&quot;pkiEnabled&quot;:&quot;N&quot;,&quot;indentFlag&quot;:&quot;N&quot;,&quot;indentNo&quot;:null,&quot;tenderownerid&quot;:4171,&quot;orgtenderid&quot;:1943,&quot;publishdate&quot;:null,&quot;rankingsequence&quot;:&quot;L1&quot;,&quot;dataHash&quot;:null,&quot;prRefNo&quot;:&quot;&quot;,&quot;isIntegratedTender&quot;:&quot;N&quot;,&quot;differntialFlag&quot;:&quot;N&quot;,&quot;approvalFlag&quot;:&quot;Y&quot;,&quot;signHash&quot;:null,&quot;userDigitalCertId&quot;:null,&quot;dscCertString&quot;:null,&quot;dscPublicKey&quot;:null,&quot;ppcTenderNo&quot;:null,&quot;limitedTenderReason&quot;:null,&quot;pacVisibilityFlag&quot;:&quot;Y&quot;,&quot;eoiFlag&quot;:null,&quot;eoiNumber&quot;:null,&quot;nit&quot;:null,&quot;isFullIntegratedTender&quot;:null,&quot;offerValidity&quot;:5,&quot;signDate&quot;:null,&quot;signBy&quot;:null,&quot;auctionStatusId&quot;:0,&quot;vendorclass&quot;:null,&quot;templates&quot;:[{&quot;templategroupId&quot;:31485,&quot;displayLayoutid&quot;:102,&quot;templateTypeId&quot;:100,&quot;templateCatId&quot;:1553,&quot;groupId&quot;:2534,&quot;templateId&quot;:8,&quot;shortName&quot;:&quot;rfqattachment&quot;,&quot;longName&quot;:&quot;Fixed_rfqattachment_dataset&quot;,&quot;description&quot;:&quot;RFQ ATTACHMENT&quot;,&quot;orgId&quot;:606,&quot;deptId&quot;:606,&quot;status&quot;:&quot;A&quot;,&quot;visibility&quot;:&quot;&quot;,&quot;levelMapId&quot;:null,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;masterProcessId&quot;:1,&quot;subProcessId&quot;:18602,&quot;associatedBidPart&quot;:0,&quot;isFixedTemplate&quot;:&quot;Y&quot;,&quot;displaySequenceNo&quot;:2,&quot;mappedTemplateId&quot;:null,&quot;mappedTemplateShortName&quot;:&quot;&quot;,&quot;quotationDependencyFlag&quot;:&quot;Y&quot;,&quot;subProcessName&quot;:&quot;Attachments&quot;,&quot;mappedDepartmentId&quot;:null,&quot;templateFieldList&quot;:[{&quot;fieldtemplategroupId&quot;:238085,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31485,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;label&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;label&quot;,&quot;longName&quot;:&quot;Label&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:200,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:1,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:&quot;RECEIPT&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;showText&quot;:false},{&quot;fieldtemplategroupId&quot;:238087,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31485,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:100,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;file_name&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;file_name&quot;,&quot;longName&quot;:&quot;File Name&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:200,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:2,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:&quot;Receipt-5.jpg&quot;,&quot;roleWiseFieldEntry&quot;:&quot;V&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:238088,&quot;dataTypeId&quot;:104,&quot;templategroupId&quot;:31485,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:108,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;attach_file&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;attach_file&quot;,&quot;longName&quot;:&quot;Attach File&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:200,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:3,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:&quot;31485\\1585980680030_Receipt-5.jpg|46674|Receipt-5.jpg&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:&quot;22845ad5110e23816c2a3030951605dbf95668477e90d94551898e64016bc5ae&quot;,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null},{&quot;fieldtemplategroupId&quot;:238086,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31485,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:106,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;visible&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;visible&quot;,&quot;longName&quot;:&quot;Visible To&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:100,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;BOTH,INTERNAL&quot;,&quot;displaySize&quot;:&quot;M&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:4,&quot;isFixedField&quot;:&quot;N&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;Y&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;Y&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:&quot;BOTH&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;UpdatedListValues&quot;:[{&quot;code&quot;:&quot;BOTH&quot;,&quot;description&quot;:&quot;BOTH&quot;},{&quot;code&quot;:&quot;INTERNAL&quot;,&quot;description&quot;:&quot;INTERNAL&quot;}]},{&quot;fieldtemplategroupId&quot;:238089,&quot;dataTypeId&quot;:101,&quot;templategroupId&quot;:31485,&quot;groupId&quot;:2534,&quot;indicatorType&quot;:&quot;&quot;,&quot;controlTypeId&quot;:105,&quot;orgid&quot;:606,&quot;deptid&quot;:606,&quot;fieldId&quot;:null,&quot;code&quot;:&quot;bidder_selection&quot;,&quot;userType&quot;:&quot;S&quot;,&quot;shortName&quot;:&quot;bidder_selection&quot;,&quot;longName&quot;:&quot;Differential RFQ Bidder Selection&quot;,&quot;minLength&quot;:1,&quot;maxLength&quot;:3000,&quot;displayWidth&quot;:null,&quot;displayHeight&quot;:null,&quot;listValues&quot;:&quot;Bidder 1,Bidder 2,Bidder 3&quot;,&quot;displaySize&quot;:&quot;L&quot;,&quot;defaultValue&quot;:&quot;&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;effectiveFrom&quot;:null,&quot;effectiveTo&quot;:null,&quot;status&quot;:&quot;A&quot;,&quot;createid&quot;:3989,&quot;createdate&quot;:1583130334000,&quot;updateid&quot;:3989,&quot;updatedate&quot;:1583130382000,&quot;isActive&quot;:1,&quot;fieldType&quot;:&quot;&quot;,&quot;tooltip&quot;:&quot;&quot;,&quot;encrypted&quot;:&quot;D&quot;,&quot;displayOrder&quot;:5,&quot;isFixedField&quot;:&quot;Y&quot;,&quot;isEnabled&quot;:&quot;Y&quot;,&quot;mandatory&quot;:&quot;N&quot;,&quot;formula&quot;:&quot;&quot;,&quot;validation&quot;:&quot;&quot;,&quot;isVisible&quot;:&quot;N&quot;,&quot;isException&quot;:&quot;N&quot;,&quot;value&quot;:&quot;&quot;,&quot;roleWiseFieldEntry&quot;:&quot;E&quot;,&quot;groupTemplateFieldRoleExceptionList&quot;:null,&quot;fieldValidationList&quot;:null,&quot;aggregationtypeid&quot;:null,&quot;isAggregation&quot;:&quot;N&quot;,&quot;bidValueFlag&quot;:&quot;N&quot;,&quot;itemWiseRankingFlag&quot;:&quot;&quot;,&quot;fieldValEditableFlag&quot;:null,&quot;amountInWords&quot;:&quot;&quot;,&quot;relativePath&quot;:null,&quot;listOfValues&quot;:null,&quot;dataHash&quot;:null,&quot;excludedVendorsForDifferentialRfq&quot;:null,&quot;genInfoGrpId&quot;:null,&quot;displayText&quot;:null,&quot;UpdatedListValues&quot;:[],&quot;differentialRfqFieldShow&quot;:false}],&quot;subProcess&quot;:null,&quot;identifystring&quot;:null,&quot;indexSerialNo&quot;:null,&quot;excelRowNumber&quot;:null,&quot;sorItemFlag&quot;:null,&quot;tabWiseApproverComment&quot;:null,&quot;bidableflag&quot;:null,&quot;mandatory_flag&quot;:null,&quot;mandatoryItem&quot;:null,&quot;prePopulatedRfqData&quot;:0,&quot;corrAttachmentFlag&quot;:null,&quot;bidSectionwiseApproverComment&quot;:null,&quot;bidSectionwiseInitiotorComment&quot;:null,&quot;itemParentCode&quot;:null,&quot;itemCode&quot;:null,&quot;templates&quot;:null,&quot;tenderTemplateGroupId&quot;:0,&quot;relTablePrimaryKeyId&quot;:0,&quot;tablePrimaryKeyId&quot;:0,&quot;isValidated&quot;:null,&quot;modifiedFlag&quot;:false,&quot;itemActionFlag&quot;:null,&quot;bidderWiseActivityDoneStatus&quot;:null,&quot;excelUploadFlag&quot;:false,&quot;paymenttypeId&quot;:null,&quot;liveNodeItemFlag&quot;:&quot;Y&quot;,&quot;dscPublicKey&quot;:null,&quot;dscCertString&quot;:null,&quot;isOriginal&quot;:null,&quot;isAssigned&quot;:null,&quot;sourceItemId&quot;:null,&quot;mainItemQty&quot;:null,&quot;dueDate&quot;:null,&quot;descriptionTC&quot;:null,&quot;isPaymentTerm&quot;:null,&quot;isSpecialFileDownload&quot;:null,&quot;itemQty&quot;:null,&quot;isvalidExcel&quot;:false,&quot;indentAttachmentFlag&quot;:null,&quot;isQualifiedQuotationItem&quot;:null,&quot;usedInCatalog&quot;:null,&quot;oldItemCode&quot;:null,&quot;fileSignHash&quot;:null,&quot;isDownloadPossible&quot;:null,&quot;filevisibleType&quot;:null,&quot;aceptedOn&quot;:null,&quot;qualDecTakenInLabelId&quot;:null,&quot;mainEstimatedPrice&quot;:null,&quot;isVisibleForMerge&quot;:true,&quot;currentSanctionObjectPrimaryKey&quot;:0,&quot;validationMessage&quot;:null,&quot;orderedQty&quot;:null,&quot;poConsumedqty&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;signBy&quot;:null,&quot;signDate&quot;:null,&quot;exemptionValue&quot;:null,&quot;quotationItemDecryptList&quot;:null,&quot;quotationDetailDecryptList&quot;:null,&quot;quotationFeesMasterDecryptList&quot;:null,&quot;quotAttachListMap&quot;:null,&quot;amendedQty&quot;:null,&quot;eoiquotAttachListMap&quot;:null,&quot;eoiquotationDetailDecryptList&quot;:null,&quot;loadedData&quot;:30,&quot;mode&quot;:&quot;V&quot;}],&quot;bidpartValue&quot;:&quot;1&amp;2&quot;,&quot;tenderPreviewMap&quot;:null,&quot;indent&quot;:null,&quot;tenderVendors&quot;:[],&quot;fieldFormulaMap&quot;:{},&quot;pacamtAsString&quot;:&quot;10&quot;,&quot;reviewMap&quot;:null,&quot;integratedTemplateGrpId&quot;:null,&quot;erpHeaderId&quot;:null,&quot;prRfqidentifierNo&quot;:null,&quot;indentAttachments&quot;:null,&quot;poConsumingStatus&quot;:1,&quot;approvalWorkFlow&quot;:null,&quot;tenderFeesList&quot;:null,&quot;tenderItemList&quot;:null,&quot;tenderDetailList&quot;:null,&quot;tenderDetailForDeliveryLocationList&quot;:null,&quot;certSelectedUserName&quot;:null,&quot;quotationDecryptList&quot;:null,&quot;certSelectedUserTime&quot;:null,&quot;corrigendumList&quot;:null,&quot;approvalCommentsAndAttachmentsDTOList&quot;:null,&quot;templategroupids&quot;:[&quot;31481&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/insertTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[26]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/getTender?tenderId=12148&amp;userRoleId=5" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userRoleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userRoleId</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">12148</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[27]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/readRfqExcel" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="file" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">file</stringProp>
                  <stringProp name="Argument.value">rfqCreation.xlsx</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currencyValue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">currencyValue</stringProp>
                  <stringProp name="Argument.value">INR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeZone" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">timeZone</stringProp>
                  <stringProp name="Argument.value">-330</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">12148</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/readRfqExcel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=----WebKitFormBoundary0gTOAeBsv8yXVFJO</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[28]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/getTenderDetail" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderDetail</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="params" elementType="Header">
                  <stringProp name="Header.name">params</stringProp>
                  <stringProp name="Header.value">{&quot;tenderId&quot;:12148,&quot;templategroupId&quot;:31481,&quot;approvalId&quot;:0,&quot;userRoleId&quot;:5}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[29]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/searchitemparameter" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;orgId&quot;:0,&quot;sorId&quot;:0}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/searchitemparameter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[30]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/checkDibaredBidderPresentInRFQ?tenderId=12148" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">12148</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/checkDibaredBidderPresentInRFQ</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[31]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/saveAttachment" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tempGrpId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tempGrpId</stringProp>
                  <stringProp name="Argument.value">31485</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="file" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">file</stringProp>
                  <stringProp name="Argument.value">Receipt-5.jpg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">12148</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="serialNo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">serialNo</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/saveAttachment</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=----WebKitFormBoundaryKhw6BBQEwGfMLYy7</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[32]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tenderApproval/validateDateForTender/12148" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tenderApproval/validateDateForTender/12148</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[33]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/getSendForApprovalFlag?tenderId=12148&amp;groupId=2534&amp;isvisited=31483,31485,31479,31478,31481" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="groupId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">groupId</stringProp>
                  <stringProp name="Argument.value">2534</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isvisited" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isvisited</stringProp>
                  <stringProp name="Argument.value">31483,31485,31479,31478,31481</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">12148</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getSendForApprovalFlag</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[34]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/WorkFlowWeb/rest/workflow/getApprovalObject" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">WorkFlowWeb/rest/workflow/getApprovalObject</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[35]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/user/getUserListByIdentifyStringAndRole?identifyString=606.&amp;roleIdString=3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="identifyString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">identifyString</stringProp>
                  <stringProp name="Argument.value">606.</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="roleIdString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">roleIdString</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/getUserListByIdentifyStringAndRole</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[36]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/organization/getAllOrganizationByParticularOrganization?orgId=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="orgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">orgId</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/organization/getAllOrganizationByParticularOrganization</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[37]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/designationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/designationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTY3MywiaWF0IjoxNTg1OTgwNzczLCJqdGkiOiI0MTcxIn0.WdjS5rPvYWArWwX13GXpkzioD86TekHSnag3XzGdllA</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[38]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/WorkFlowWeb/rest/workflow/getApprovalDetailsByDocTypeAndUserId?docTypeId=2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="docTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">docTypeId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">WorkFlowWeb/rest/workflow/getApprovalDetailsByDocTypeAndUserId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[39]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/previewTenderByTenderId?tenderId=12148" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">12148</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/previewTenderByTenderId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[40]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/WorkFlowWeb/rest/workflow/createworkflow" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;approvalId&quot;:0,&quot;documentTypeId&quot;:2,&quot;documentId&quot;:12148,&quot;workflowType&quot;:&quot;U&quot;,&quot;dopId&quot;:null,&quot;currentSequence&quot;:null,&quot;sectionwiseComment&quot;:&quot;N&quot;,&quot;initiatorComment&quot;:&quot;TENDER IS READY FOR APPROVAL.&quot;,&quot;recallComment&quot;:null,&quot;statusCode&quot;:&quot;P&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:null,&quot;createdate&quot;:null,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;systemDocNumber&quot;:1943,&quot;approvalStatus&quot;:null,&quot;statusCodeAtRollback&quot;:null,&quot;approvalDetails&quot;:[{&quot;approvalDetailId&quot;:null,&quot;approvalId&quot;:0,&quot;userId&quot;:4171,&quot;sequence&quot;:1,&quot;approvalType&quot;:&quot;S&quot;,&quot;refApprovalDetailId&quot;:0,&quot;coordinatorFlag&quot;:&quot;N&quot;,&quot;minAapproval&quot;:0,&quot;noOfBranches&quot;:0,&quot;branchNumber&quot;:0,&quot;overallComment&quot;:&quot;&quot;,&quot;branchComment&quot;:&quot;&quot;,&quot;statusCode&quot;:&quot;WIP&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585213583000,&quot;updateid&quot;:0,&quot;updatedate&quot;:1585213583000,&quot;originalSequenceNo&quot;:1,&quot;approvalRecievedDate&quot;:null,&quot;actionTakenDate&quot;:null,&quot;signHash&quot;:null,&quot;dscCertString&quot;:null,&quot;dscPublicKey&quot;:null,&quot;commentDtls&quot;:[{&quot;templategroupid&quot;:31483},{&quot;templategroupid&quot;:31485},{&quot;templategroupid&quot;:31479},{&quot;templategroupid&quot;:31478},{&quot;templategroupid&quot;:31481}],&quot;attachementDtls&quot;:[],&quot;bidderDetailList&quot;:[],&quot;userName&quot;:null,&quot;userEmail&quot;:null,&quot;userRole&quot;:null,&quot;addedBy&quot;:null,&quot;memberLevelId&quot;:null,&quot;memberType&quot;:null,&quot;remarks&quot;:null,&quot;nextLevelInitiatorComment&quot;:null}],&quot;userName&quot;:null,&quot;userRole&quot;:null,&quot;userEmail&quot;:null,&quot;comment&quot;:&quot;TENDER IS READY FOR APPROVAL.&quot;,&quot;entityId&quot;:12148,&quot;moduleType&quot;:&quot;T&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">WorkFlowWeb/rest/workflow/createworkflow</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[41]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tenderApproval/updateTenderApprovalStatus?entityId=12148&amp;approvalFlag=Y" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;approverMap&quot;:{&quot;115&quot;:[{&quot;hmpForMailParameterInfo&quot;:{&quot;USER_FULL_NAME&quot;:4171,&quot;SYSTEM_DOC_NO&quot;:&quot;1943&quot;,&quot;HELPDESK_TIME&quot;:1585980767000,&quot;DEPARTMENT&quot;:&quot;1&quot;,&quot;HELPDESK_EMAIL&quot;:&quot;1&quot;,&quot;OVERALL_COMMENT&quot;:&quot;&quot;,&quot;ORGANIZATION&quot;:&quot;1&quot;,&quot;USER_FROM_FULL_NAME&quot;:0,&quot;DOC_TYPE&quot;:&quot;TENDER&quot;,&quot;CURRENT_STATUS&quot;:&quot;WIP&quot;,&quot;APPROVER_DETAILS&quot;:null,&quot;PREVIOUS_STATUS&quot;:&quot;WIP&quot;,&quot;HELPDESK_PHONE&quot;:&quot;1&quot;},&quot;extraInfo1&quot;:null,&quot;extraInfo2&quot;:null,&quot;extraInfo3&quot;:null,&quot;extraInfo4&quot;:null,&quot;extraInfo5&quot;:null,&quot;attribute_EVENT_ID&quot;:115,&quot;attribute_KEY_MAIL_TO&quot;:null,&quot;attribute_KEY_MAIL_CC&quot;:null,&quot;attribute_KEY_MAIL_BODY&quot;:null,&quot;attribute_KEY_MAIL_BCC&quot;:null,&quot;attribute_KEY_MAIL_SUBJECT&quot;:null,&quot;attribute_KEY_MAIL_FROM&quot;:null}]},&quot;workFlowStatus&quot;:&quot;WIP&quot;,&quot;returnMessages&quot;:[],&quot;remarks&quot;:null,&quot;approval&quot;:{&quot;approvalId&quot;:4701,&quot;documentTypeId&quot;:2,&quot;documentId&quot;:12148,&quot;workflowType&quot;:&quot;U&quot;,&quot;dopId&quot;:null,&quot;currentSequence&quot;:1,&quot;sectionwiseComment&quot;:&quot;N&quot;,&quot;initiatorComment&quot;:&quot;TENDER IS READY FOR APPROVAL.&quot;,&quot;recallComment&quot;:null,&quot;statusCode&quot;:&quot;WIP&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585980767000,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;systemDocNumber&quot;:&quot;1943&quot;,&quot;approvalStatus&quot;:null,&quot;statusCodeAtRollback&quot;:null,&quot;approvalDetails&quot;:[{&quot;approvalDetailId&quot;:9065,&quot;approvalId&quot;:4701,&quot;userId&quot;:4171,&quot;sequence&quot;:1,&quot;approvalType&quot;:&quot;S&quot;,&quot;refApprovalDetailId&quot;:0,&quot;coordinatorFlag&quot;:&quot;N&quot;,&quot;minAapproval&quot;:0,&quot;noOfBranches&quot;:0,&quot;branchNumber&quot;:0,&quot;overallComment&quot;:&quot;&quot;,&quot;branchComment&quot;:&quot;&quot;,&quot;statusCode&quot;:&quot;WIP&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585980767000,&quot;updateid&quot;:0,&quot;updatedate&quot;:1585980767000,&quot;originalSequenceNo&quot;:1,&quot;approvalRecievedDate&quot;:1585980767000,&quot;actionTakenDate&quot;:null,&quot;signHash&quot;:null,&quot;dscCertString&quot;:null,&quot;dscPublicKey&quot;:null,&quot;commentDtls&quot;:[{&quot;approvalCommentDtlsId&quot;:null,&quot;approvalDetailId&quot;:null,&quot;documentTypeid&quot;:null,&quot;documentid&quot;:null,&quot;referenceid&quot;:null,&quot;templategroupid&quot;:31483,&quot;userid&quot;:null,&quot;comment&quot;:null,&quot;isActive&quot;:1,&quot;createid&quot;:null,&quot;createdate&quot;:null,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;bidderId&quot;:null},{&quot;approvalCommentDtlsId&quot;:null,&quot;approvalDetailId&quot;:null,&quot;documentTypeid&quot;:null,&quot;documentid&quot;:null,&quot;referenceid&quot;:null,&quot;templategroupid&quot;:31485,&quot;userid&quot;:null,&quot;comment&quot;:null,&quot;isActive&quot;:1,&quot;createid&quot;:null,&quot;createdate&quot;:null,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;bidderId&quot;:null},{&quot;approvalCommentDtlsId&quot;:null,&quot;approvalDetailId&quot;:null,&quot;documentTypeid&quot;:null,&quot;documentid&quot;:null,&quot;referenceid&quot;:null,&quot;templategroupid&quot;:31479,&quot;userid&quot;:null,&quot;comment&quot;:null,&quot;isActive&quot;:1,&quot;createid&quot;:null,&quot;createdate&quot;:null,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;bidderId&quot;:null},{&quot;approvalCommentDtlsId&quot;:null,&quot;approvalDetailId&quot;:null,&quot;documentTypeid&quot;:null,&quot;documentid&quot;:null,&quot;referenceid&quot;:null,&quot;templategroupid&quot;:31478,&quot;userid&quot;:null,&quot;comment&quot;:null,&quot;isActive&quot;:1,&quot;createid&quot;:null,&quot;createdate&quot;:null,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;bidderId&quot;:null},{&quot;approvalCommentDtlsId&quot;:null,&quot;approvalDetailId&quot;:null,&quot;documentTypeid&quot;:null,&quot;documentid&quot;:null,&quot;referenceid&quot;:null,&quot;templategroupid&quot;:31481,&quot;userid&quot;:null,&quot;comment&quot;:null,&quot;isActive&quot;:1,&quot;createid&quot;:null,&quot;createdate&quot;:null,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;bidderId&quot;:null}],&quot;attachementDtls&quot;:[],&quot;bidderDetailList&quot;:[],&quot;userName&quot;:null,&quot;userEmail&quot;:null,&quot;userRole&quot;:null,&quot;addedBy&quot;:null,&quot;memberLevelId&quot;:null,&quot;memberType&quot;:null,&quot;remarks&quot;:null,&quot;nextLevelInitiatorComment&quot;:null}],&quot;userName&quot;:null,&quot;userRole&quot;:null,&quot;userEmail&quot;:null},&quot;isEligible&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tenderApproval/updateTenderApprovalStatus?entityId=12148&amp;approvalFlag=Y</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[42]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/tender/listTender.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTI5OCwiaWF0IjoxNTg1OTgwMzk4LCJqdGkiOiI0MTcxIn0.L9rsKTqL-XfVgCaiaigl1aKTfwK8L-DH_8fxbnJddv8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value">menu.tender</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/tender/listTender.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[43]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>374276.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">187138</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 374276 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/statusNtenderEvaluationState" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/statusNtenderEvaluationState</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTc5OCwiaWF0IjoxNTg1OTgwODk4LCJqdGkiOiI0MTcxIn0.i4YFf3u0PYo76JdxDCqB4iX3GjvONBbxd6Fh1QHVUDE</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[44]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/showRfqCategoryRfqTypeProcCatBidPartList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/showRfqCategoryRfqTypeProcCatBidPartList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTY3MywiaWF0IjoxNTg1OTgwNzczLCJqdGkiOiI0MTcxIn0.WdjS5rPvYWArWwX13GXpkzioD86TekHSnag3XzGdllA</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[45]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/tenderState" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/tenderState</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTY3MywiaWF0IjoxNTg1OTgwNzczLCJqdGkiOiI0MTcxIn0.WdjS5rPvYWArWwX13GXpkzioD86TekHSnag3XzGdllA</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[46]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/organization/loadOrgLevelInfoMap" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/organization/loadOrgLevelInfoMap</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTY3MywiaWF0IjoxNTg1OTgwNzczLCJqdGkiOiI0MTcxIn0.WdjS5rPvYWArWwX13GXpkzioD86TekHSnag3XzGdllA</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[47]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/showTenderList?tabId=MyTender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tabId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tabId</stringProp>
                  <stringProp name="Argument.value">MyTender</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/showTenderList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTY3MywiaWF0IjoxNTg1OTgwNzczLCJqdGkiOiI0MTcxIn0.WdjS5rPvYWArWwX13GXpkzioD86TekHSnag3XzGdllA</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[48]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/tenderApproval/getTenderListForApproval.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTY3MywiaWF0IjoxNTg1OTgwNzczLCJqdGkiOiI0MTcxIn0.WdjS5rPvYWArWwX13GXpkzioD86TekHSnag3XzGdllA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value">menu.workflow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/tenderApproval/getTenderListForApproval.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[49]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>125050.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">62525</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 125050 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/bidactivity/getApprovalListByUser?documentType=10&amp;statusCode=pending" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="documentType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentType</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="statusCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statusCode</stringProp>
                  <stringProp name="Argument.value">pending</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/bidactivity/getApprovalListByUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTc5OCwiaWF0IjoxNTg1OTgwODk4LCJqdGkiOiI0MTcxIn0.i4YFf3u0PYo76JdxDCqB4iX3GjvONBbxd6Fh1QHVUDE</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[50]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tenderApproval/geDocumentsByApprover?documentTypeId=2&amp;statusCode=pending" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="documentTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentTypeId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="statusCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statusCode</stringProp>
                  <stringProp name="Argument.value">pending</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tenderApproval/geDocumentsByApprover</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTc5OCwiaWF0IjoxNTg1OTgwODk4LCJqdGkiOiI0MTcxIn0.i4YFf3u0PYo76JdxDCqB4iX3GjvONBbxd6Fh1QHVUDE</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[51]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="VIEW TENDER DETAILS" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/approval/actionPage/tender.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">12148</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">12148</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkxMywiaWF0IjoxNTg1OTgxMDEzLCJqdGkiOiI0MTcxIn0.RHSdk8ce22gVctNVs1yzJuFHAiPgNykbwWCvkA5K8FI</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value">menu.workflow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">9065</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">4701</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/approval/actionPage/tender.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>128447.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">64223.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 128447 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/getUomList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getUomList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/getFactoryLocationList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFactoryLocationList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/ebriefcase/getEBriefcasePerUser?catId=0&amp;status=A" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="catId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">catId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/ebriefcase/getEBriefcasePerUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/ebriefcase/getEBriefcaseCategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/ebriefcase/getEBriefcaseCategory</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/IndentWeb/rest/master/getBudegtHeadList?orgId=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="orgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">orgId</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">IndentWeb/rest/master/getBudegtHeadList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[9]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/getApproverType/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getApproverType/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[10]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[11]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/vendor/loadVendorListByItemGroup?itemGroupId=0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="itemGroupId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">itemGroupId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/vendor/loadVendorListByItemGroup</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[12]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/getMasterTemplate" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getMasterTemplate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[13]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/getTenderListForRecallTender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderListForRecallTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[14]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/getFeesTypeList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/getFeesTypeList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[15]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/WorkFlowWeb/rest/workflow/getApprovalDetailsByDocId?documentId=12148&amp;documentType=2&amp;approvalId=4701" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="documentType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentType</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="documentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentId</stringProp>
                  <stringProp name="Argument.value">12148</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">4701</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">WorkFlowWeb/rest/workflow/getApprovalDetailsByDocId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[16]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/user/geLoggedInUserDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/geLoggedInUserDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[17]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/getTender?tenderId=12148&amp;userRoleId=3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userRoleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userRoleId</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">12148</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTender</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[18]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tender/getTenderCategoryByGroupId?groupId=2534" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="groupId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">groupId</stringProp>
                  <stringProp name="Argument.value">2534</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tender/getTenderCategoryByGroupId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[19]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="APPROVER COMMENT" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/WorkFlowWeb/rest/workflow/getApprovalDetailsByDocId?documentId=12148&amp;documentType=2&amp;approvalId=4701" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="documentType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentType</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="documentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentId</stringProp>
                  <stringProp name="Argument.value">12148</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">4701</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">WorkFlowWeb/rest/workflow/getApprovalDetailsByDocId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="APPROVE TENDER" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tenderApproval/submitFromApprover?status=A" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;approvalId&quot;:4701,&quot;documentTypeId&quot;:2,&quot;documentId&quot;:12148,&quot;workflowType&quot;:&quot;U&quot;,&quot;dopId&quot;:null,&quot;currentSequence&quot;:1,&quot;sectionwiseComment&quot;:&quot;N&quot;,&quot;initiatorComment&quot;:&quot;TENDER IS READY FOR APPROVAL.&quot;,&quot;recallComment&quot;:null,&quot;statusCode&quot;:&quot;WIP&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585980767000,&quot;updateid&quot;:null,&quot;updatedate&quot;:null,&quot;systemDocNumber&quot;:&quot;1943&quot;,&quot;approvalStatus&quot;:null,&quot;statusCodeAtRollback&quot;:null,&quot;approvalDetails&quot;:[{&quot;approvalDetailId&quot;:9065,&quot;approvalId&quot;:4701,&quot;userId&quot;:4171,&quot;sequence&quot;:1,&quot;approvalType&quot;:&quot;S&quot;,&quot;refApprovalDetailId&quot;:0,&quot;coordinatorFlag&quot;:&quot;N&quot;,&quot;minAapproval&quot;:0,&quot;noOfBranches&quot;:0,&quot;branchNumber&quot;:0,&quot;overallComment&quot;:&quot;EVERYTHING IS OK.&quot;,&quot;branchComment&quot;:&quot;&quot;,&quot;statusCode&quot;:&quot;WIP&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585980767000,&quot;updateid&quot;:0,&quot;updatedate&quot;:1585980767000,&quot;originalSequenceNo&quot;:1,&quot;approvalRecievedDate&quot;:1585980767000,&quot;actionTakenDate&quot;:null,&quot;signHash&quot;:null,&quot;commentDtls&quot;:[],&quot;attachementDtls&quot;:[],&quot;bidderDetailList&quot;:[],&quot;userName&quot;:&quot;Buyer User 4&quot;,&quot;userEmail&quot;:&quot;amit.podder@mjunction.in&quot;,&quot;userRole&quot;:null,&quot;addedBy&quot;:null,&quot;memberLevelId&quot;:null,&quot;memberType&quot;:null,&quot;remarks&quot;:null,&quot;nextLevelInitiatorComment&quot;:null,&quot;$$hashKey&quot;:&quot;object:703&quot;}],&quot;userName&quot;:&quot;Buyer User 4&quot;,&quot;userRole&quot;:null,&quot;userEmail&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tenderApproval/submitFromApprover?status=A</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tenderApproval/updateTenderApprovalStatus?entityId=12148&amp;approvalFlag=Y" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;approverMap&quot;:{&quot;113&quot;:[{&quot;hmpForMailParameterInfo&quot;:{&quot;USER_FULL_NAME&quot;:4171,&quot;SYSTEM_DOC_NO&quot;:&quot;1943&quot;,&quot;HELPDESK_TIME&quot;:1585981097000,&quot;DEPARTMENT&quot;:&quot;1&quot;,&quot;HELPDESK_EMAIL&quot;:&quot;1&quot;,&quot;OVERALL_COMMENT&quot;:&quot;EVERYTHING IS OK.&quot;,&quot;ORGANIZATION&quot;:&quot;1&quot;,&quot;USER_FROM_FULL_NAME&quot;:0,&quot;DOC_TYPE&quot;:&quot;TENDER&quot;,&quot;CURRENT_STATUS&quot;:&quot;C&quot;,&quot;APPROVER_DETAILS&quot;:null,&quot;PREVIOUS_STATUS&quot;:&quot;WIP&quot;,&quot;HELPDESK_PHONE&quot;:&quot;1&quot;},&quot;extraInfo1&quot;:null,&quot;extraInfo2&quot;:null,&quot;extraInfo3&quot;:null,&quot;extraInfo4&quot;:null,&quot;extraInfo5&quot;:null,&quot;attribute_EVENT_ID&quot;:113,&quot;attribute_KEY_MAIL_TO&quot;:null,&quot;attribute_KEY_MAIL_CC&quot;:null,&quot;attribute_KEY_MAIL_BODY&quot;:null,&quot;attribute_KEY_MAIL_BCC&quot;:null,&quot;attribute_KEY_MAIL_SUBJECT&quot;:null,&quot;attribute_KEY_MAIL_FROM&quot;:null}]},&quot;workFlowStatus&quot;:&quot;C&quot;,&quot;returnMessages&quot;:[],&quot;remarks&quot;:null,&quot;approval&quot;:{&quot;approvalId&quot;:4701,&quot;documentTypeId&quot;:2,&quot;documentId&quot;:12148,&quot;workflowType&quot;:&quot;U&quot;,&quot;dopId&quot;:null,&quot;currentSequence&quot;:1,&quot;sectionwiseComment&quot;:&quot;N&quot;,&quot;initiatorComment&quot;:&quot;TENDER IS READY FOR APPROVAL.&quot;,&quot;recallComment&quot;:null,&quot;statusCode&quot;:&quot;C&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585980767000,&quot;updateid&quot;:4171,&quot;updatedate&quot;:1585981096000,&quot;systemDocNumber&quot;:&quot;1943&quot;,&quot;approvalStatus&quot;:null,&quot;statusCodeAtRollback&quot;:null,&quot;approvalDetails&quot;:[{&quot;approvalDetailId&quot;:9065,&quot;approvalId&quot;:4701,&quot;userId&quot;:4171,&quot;sequence&quot;:1,&quot;approvalType&quot;:&quot;S&quot;,&quot;refApprovalDetailId&quot;:0,&quot;coordinatorFlag&quot;:&quot;N&quot;,&quot;minAapproval&quot;:0,&quot;noOfBranches&quot;:0,&quot;branchNumber&quot;:0,&quot;overallComment&quot;:&quot;EVERYTHING IS OK.&quot;,&quot;branchComment&quot;:&quot;&quot;,&quot;statusCode&quot;:&quot;A&quot;,&quot;isActive&quot;:1,&quot;createid&quot;:4171,&quot;createdate&quot;:1585980767000,&quot;updateid&quot;:4171,&quot;updatedate&quot;:1585981097000,&quot;originalSequenceNo&quot;:1,&quot;approvalRecievedDate&quot;:1585980767000,&quot;actionTakenDate&quot;:1585981097000,&quot;signHash&quot;:null,&quot;dscCertString&quot;:null,&quot;dscPublicKey&quot;:null,&quot;commentDtls&quot;:[],&quot;attachementDtls&quot;:[],&quot;bidderDetailList&quot;:[],&quot;userName&quot;:null,&quot;userEmail&quot;:null,&quot;userRole&quot;:null,&quot;addedBy&quot;:null,&quot;memberLevelId&quot;:null,&quot;memberType&quot;:null,&quot;remarks&quot;:null,&quot;nextLevelInitiatorComment&quot;:null}],&quot;userName&quot;:null,&quot;userRole&quot;:null,&quot;userEmail&quot;:null},&quot;isEligible&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tenderApproval/updateTenderApprovalStatus?entityId=12148&amp;approvalFlag=Y</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/tenderApproval/getTenderListForApproval.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MTkyNiwiaWF0IjoxNTg1OTgxMDI2LCJqdGkiOiI0MTcxIn0.R_tsWd0A83_PtS6XfHZzkwQsBfmZ_rreimrNP1INcxs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value">menu.workflow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/tenderApproval/getTenderListForApproval.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>78223.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">39111.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 78223 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/locale/getLocaleList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/locale/getLocaleList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MjAwNSwiaWF0IjoxNTg1OTgxMTA1LCJqdGkiOiI0MTcxIn0.UKKH-GDhm8De5Rs92jaW5rLAwlrZaedeTtNfxwPXcYw</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/general/getAllBellNotificationListUserWise" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllBellNotificationListUserWise</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MjAwNSwiaWF0IjoxNTg1OTgxMTA1LCJqdGkiOiI0MTcxIn0.UKKH-GDhm8De5Rs92jaW5rLAwlrZaedeTtNfxwPXcYw</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/user/downloadProfilePicture.action?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MjAwNSwiaWF0IjoxNTg1OTgxMTA1LCJqdGkiOiI0MTcxIn0.UKKH-GDhm8De5Rs92jaW5rLAwlrZaedeTtNfxwPXcYw" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MjAwNSwiaWF0IjoxNTg1OTgxMTA1LCJqdGkiOiI0MTcxIn0.UKKH-GDhm8De5Rs92jaW5rLAwlrZaedeTtNfxwPXcYw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/user/downloadProfilePicture.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MjAwNSwiaWF0IjoxNTg1OTgxMTA1LCJqdGkiOiI0MTcxIn0.UKKH-GDhm8De5Rs92jaW5rLAwlrZaedeTtNfxwPXcYw</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/master/statusNtenderEvaluationState" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/master/statusNtenderEvaluationState</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MjAwNSwiaWF0IjoxNTg1OTgxMTA1LCJqdGkiOiI0MTcxIn0.UKKH-GDhm8De5Rs92jaW5rLAwlrZaedeTtNfxwPXcYw</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/bidactivity/getApprovalListByUser?documentType=10&amp;statusCode=pending" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="documentType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentType</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="statusCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statusCode</stringProp>
                  <stringProp name="Argument.value">pending</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/bidactivity/getApprovalListByUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MjAwNSwiaWF0IjoxNTg1OTgxMTA1LCJqdGkiOiI0MTcxIn0.UKKH-GDhm8De5Rs92jaW5rLAwlrZaedeTtNfxwPXcYw</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/orgConfiguration/orgConfigDetailsById?id=606" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">606</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/orgConfiguration/orgConfigDetailsById</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MjAwNSwiaWF0IjoxNTg1OTgxMTA1LCJqdGkiOiI0MTcxIn0.UKKH-GDhm8De5Rs92jaW5rLAwlrZaedeTtNfxwPXcYw</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[9]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/tenderApproval/geDocumentsByApprover?documentTypeId=2&amp;statusCode=pending" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="documentTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">documentTypeId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="statusCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">statusCode</stringProp>
                  <stringProp name="Argument.value">pending</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/tenderApproval/geDocumentsByApprover</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">*</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MjAwNSwiaWF0IjoxNTg1OTgxMTA1LCJqdGkiOiI0MTcxIn0.UKKH-GDhm8De5Rs92jaW5rLAwlrZaedeTtNfxwPXcYw</stringProp>
                </elementProp>
                <elementProp name="Auth-Token" elementType="Header">
                  <stringProp name="Header.name">Auth-Token</stringProp>
                  <stringProp name="Header.value">X-Requested-With</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[10]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="LOGOUT" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/login/logout.action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">moduleType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="quotationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">quotationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionNoteId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionNoteId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="entityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">entityId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isFreshSanction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isFreshSanction</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="templateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">templateId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="corrigendumId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">corrigendumId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjoxLCJzdWIiOiI2MDYuIiwib3JnYW5pemF0aW9uTmFtZSI6IlRIREMiLCJjdXJyZW50TG9jYWxlIjoib2ZiZW4iLCJpc3MiOiJCdXllciIsInZlbmRvcklkIjowLCJ1c2VyUm9sZUxpc3QiOlsyLDMsNSwyOV0sImJpZGRlckNvbXBhbnlOYW1lIjpudWxsLCJ1c2VyQ29kZSI6IlBUX0JVWUVSXzAwNCIsImF1ZCI6IjYwNiIsImV4cCI6MTU4NTk4MjAwNSwiaWF0IjoxNTg1OTgxMTA1LCJqdGkiOiI0MTcxIn0.UKKH-GDhm8De5Rs92jaW5rLAwlrZaedeTtNfxwPXcYw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sanctionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sanctionId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clarificationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clarificationId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selectedMenu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectedMenu</stringProp>
                  <stringProp name="Argument.value">menu.workflow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalDtlsId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalDtlsId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dopId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="indentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">indentId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="orgTenderId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">orgTenderId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="prTenderRef" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">prTenderRef</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="approvalId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">approvalId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="operationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">operationType</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userroleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userroleId</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/login/logout.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>53293.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">26646.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 53293 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://ofbtraining.mjunction.in</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>981.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">490.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 981 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/login/provideTokenObject" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/login/provideTokenObject</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ofbtraining.mjunction.in/EPSV2Web/rest/general/getAllMessageList?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjowLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiU1lTVEVNIiwidmVuZG9ySWQiOjAsImV4cCI6MTU4NTk4MjA2MywidXNlclJvbGVMaXN0IjpudWxsLCJiaWRkZXJDb21wYW55TmFtZSI6bnVsbCwiaWF0IjoxNTg1OTgxMTYzLCJ1c2VyQ29kZSI6bnVsbCwianRpIjoiNDUyNTgxNTE5In0.HthJPSmUpl-Co0gNynQzFMvSqgmM5_hpQlXpCd2HeFI" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Authorization" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Authorization</stringProp>
                  <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjowLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiU1lTVEVNIiwidmVuZG9ySWQiOjAsImV4cCI6MTU4NTk4MjA2MywidXNlclJvbGVMaXN0IjpudWxsLCJiaWRkZXJDb21wYW55TmFtZSI6bnVsbCwiaWF0IjoxNTg1OTgxMTYzLCJ1c2VyQ29kZSI6bnVsbCwianRpIjoiNDUyNTgxNTE5In0.HthJPSmUpl-Co0gNynQzFMvSqgmM5_hpQlXpCd2HeFI</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">EPSV2Web/rest/general/getAllMessageList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyVHlwZUlkIjowLCJhdWQiOiIwIiwib3JnYW5pemF0aW9uTmFtZSI6bnVsbCwiY3VycmVudExvY2FsZSI6bnVsbCwiaXNzIjoiU1lTVEVNIiwidmVuZG9ySWQiOjAsImV4cCI6MTU4NTk4MjA2MywidXNlclJvbGVMaXN0IjpudWxsLCJiaWRkZXJDb21wYW55TmFtZSI6bnVsbCwiaWF0IjoxNTg1OTgxMTYzLCJ1c2VyQ29kZSI6bnVsbCwianRpIjoiNDUyNTgxNTE5In0.HthJPSmUpl-Co0gNynQzFMvSqgmM5_hpQlXpCd2HeFI</stringProp>
                </elementProp>
                <elementProp name="X-Login-Ajax-call" elementType="Header">
                  <stringProp name="Header.name">X-Login-Ajax-call</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
